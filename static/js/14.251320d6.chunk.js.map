{"version":3,"sources":["components/MultiCheckBox/index.jsx","components/Settings/index.js","components/NetworkGraph/components/Node/index.js","components/NetworkGraph/components/Link/index.js","components/NetworkGraph/components/Universe/index.js","components/NetworkGraph/index.js","utils/graphHelper.js","containers/RelationshipGraph/index.jsx"],"names":["MultiCheckBox","props","state","checkedList","defaultCheckedList","indeterminate","checkAll","onChange","bind","onCheckAllChange","option","this","push","filter","opt","setState","length","options","e","target","checked","className","style","borderBottom","map","idx","key","val","indexOf","disabled","disable","optionLabel","Component","defaultProps","propTpes","PropTypes","array","isRequired","func","CheckboxGroup","Checkbox","Group","plainOptions","Settings","defaultOptions","settings","updateState","updateFps","updateCluster","updateAnimation","updateAlphaStart","updateVelocityDecay","updateChargeStrength","updateCollisionStrength","updateClusterRadiusScale","updateCollisionRadiusOffset","updateClusterForceStrength","updateAttracForceStrength","fps","cluster","animation","alphaStart","velocityDecay","chargeStrength","collisionStrength","clusterRadiusScale","collisionRadiusOffset","attraceForceStrength","clusterForceStrength","padding","value","title","placement","defaultValue","max","min","step","onAfterChange","type","onClick","onReset","block","Node","clickHandler","doubleClickHandler","mouseOverHandler","mouseOutHandler","clickTimeout","data","id","onDoubleClick","event","x","onMouseOver","text","onMouseOut","radius","color","y","active","transform","cursor","opacity","r","fill","getThumbnail","img","shortText","textStyle","xlinkHref","clipPath","width","dx","dy","fontSize","stroke","strokeWidth","fontWeight","Link","d","pointer","getPointer","markerEnd","getLabel","viewBox","refX","arrowOffset","refY","markerWidth","markerHeight","orient","href","startOffset","pointerEvents","textAnchor","Universe","getArcPath","getLinks","nextProps","source","links","link","l","clockwise","x1","y1","x2","y2","siblings","siblingCount","xRotation","largeArc","scale","sweep","arcScale","scaleOrdinal","domain","range","linkIdx","dr","Math","sqrt","nodes","reduce","acc","node","NetworkGraph","selectedNode","activeNodes","simulation","initSimulation","height","k","tooltip","top","left","initZoomHandler","updateData","updateSimulation","onTick","svg","React","createRef","interval","millis","Date","now","getNeighborNodes","current","clientWidth","clientHeight","updates","diff","prevProps","added","removed","JSON","stringify","children","linkForce","forceLink","strength","distance","forceSimulation","force","select","zoomHandler","zoom","on","call","forEach","n","sourceNode","targetNode","forceCenter","forceManyBody","forceCollide","clusters","uniqBy","arr","cos","PI","random","sin","alpha","applyClusterForce","alphaTarget","restart","tick","currentTime","payload","clientY","clientX","neighbors","ref","vx","vy","containsNode","memoize","prevNodes","newNodes","getGraphData","userData","shelves","books","bookNodes","authorNodes","publisherNodes","user_shelves","shelf","name","book","property","author","authors","$t","image_url","publisher","sourceType","targetType","publicationYear","publication_year","publicationMonth","publication_month","publicationDay","publication_day","Object","values","concat","split","slice","word","charAt","toUpperCase","join","defaultGraphSettings","RelationshipGraph","window","localStorage","getItem","graphSettings","parse","settingsPopover","shelvesSelectPopover","selectedShelves","hideSettings","handleSettingsChange","handleSettingsReset","handleSettingsVisibleChange","hideShelvesSelect","handleShelvesChange","handleShelvesSelectVisibleChange","bookCount","visible","setItem","removeItem","location","reload","content","trigger","onVisibleChange","icon","position","right"],"mappings":"sNAOMA,G,yDACJ,WAAaC,GAAQ,IAAD,8BAClB,cAAMA,IAEDC,MAAQ,CACXC,YAAaF,EAAMG,mBACnBC,eAAe,EACfC,UAAU,GAGZ,EAAKC,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBAVN,E,qDAaVE,EAAQR,GAAQ,IAAD,OACjBC,EAAgBQ,KAAKT,MAArBC,YACFD,EACFC,EAAYS,KAAKF,GAEjBP,EAAcA,EAAYU,QAAO,SAAAC,GAAG,OAAIA,IAAQJ,KAElDC,KAAKI,SAAS,CACZZ,cACAE,gBAAiBF,EAAYa,QAAWb,EAAYa,OAASL,KAAKV,MAAMgB,QAAQD,OAChFV,SAAUH,EAAYa,SAAWL,KAAKV,MAAMgB,QAAQD,SACnD,kBAAM,EAAKf,MAAMM,SAAS,EAAKL,MAAMC,kB,uCAGxBe,GAAI,IAAD,OACnBP,KAAKI,SAAS,CACZZ,YAAae,EAAEC,OAAOC,QAAUT,KAAKV,MAAMgB,QAAU,GACrDZ,eAAe,EACfC,SAAUY,EAAEC,OAAOC,UAClB,kBAAM,EAAKnB,MAAMM,SAAS,EAAKL,MAAMC,kB,+BAG/B,IAAD,OACR,OACE,yBAAKkB,UAAWV,KAAKV,MAAMoB,WACzB,yBAAKC,MAAO,CAAEC,aAAc,sBAC1B,kBAAC,IAAD,CACElB,cAAeM,KAAKT,MAAMG,cAC1BE,SAAUI,KAAKF,iBACfW,QAAST,KAAKT,MAAMI,UAHtB,cAQF,wBAAIe,UAAU,wBAEVV,KAAKV,MAAMgB,QAAQO,KAAI,SAACd,EAAQe,GAAT,OACrB,wBAAIC,IAAKD,GACP,kBAAC,IAAD,CACElB,SAAU,SAAAoB,GAAG,OAAI,EAAKpB,SAASG,EAAQiB,EAAIR,OAAOC,UAClDM,IAAKhB,EACLU,QAAS,EAAKnB,MAAMG,mBAAmBwB,QAAQlB,IAAW,EAC1DmB,SAAU,EAAK5B,MAAM6B,QAAQL,IAE5B,EAAKxB,MAAM8B,YAAYN,GAAO,EAAKxB,MAAM8B,YAAYN,GAAOf,a,GA1DnDsB,cAqE5BhC,EAAciC,aAAe,CAC3BH,QAAS,GACTC,YAAa,IAGf/B,EAAckC,SAAW,CACvBjB,QAASkB,IAAUC,MAAMC,WACzB9B,SAAU4B,IAAUG,KACpBP,YAAaI,IAAUC,MACvBhC,mBAAoB+B,IAAUC,MAC9BN,QAASK,IAAUC,OAGNpC,O,gPClFTuC,G,OAAgBC,IAASC,OAEzBC,EAAe,CAAC,YAAa,WAE7BC,E,kDACJ,WAAa1C,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAL,eACKD,GAGL,EAAK2C,eAAiBF,EAAa7B,QAAO,SAACH,GAAD,OAAY,EAAKT,MAAM4C,SAASnC,MAE1E,EAAKoC,YAAc,EAAKA,YAAYtC,KAAjB,gBAGnB,EAAKuC,UAAY,EAAKA,UAAUvC,KAAf,gBACjB,EAAKwC,cAAgB,EAAKA,cAAcxC,KAAnB,gBACrB,EAAKyC,gBAAkB,EAAKA,gBAAgBzC,KAArB,gBACvB,EAAK0C,iBAAmB,EAAKA,iBAAiB1C,KAAtB,gBACxB,EAAK2C,oBAAsB,EAAKA,oBAAoB3C,KAAzB,gBAC3B,EAAK4C,qBAAuB,EAAKA,qBAAqB5C,KAA1B,gBAC5B,EAAK6C,wBAA0B,EAAKA,wBAAwB7C,KAA7B,gBAC/B,EAAK8C,yBAA2B,EAAKA,yBAAyB9C,KAA9B,gBAChC,EAAK+C,4BAA8B,EAAKA,4BAA4B/C,KAAjC,gBACnC,EAAKgD,2BAA6B,EAAKA,2BAA2BhD,KAAhC,gBAClC,EAAKiD,0BAA4B,EAAKA,0BAA0BjD,KAA/B,gBArBf,E,wDAwBPmB,GAAM,IAAD,OAEhBhB,KAAKI,SAAS,CACZ8B,SAAS,2BACJlC,KAAKT,MAAM2C,UACXlB,KAGP,kBAAM,EAAK1B,MAAMM,SAAS,EAAKL,MAAM2C,e,gCAG5BlB,GACThB,KAAKmC,YAAY,CACfY,IAAK/B,M,oCAIMA,GACbhB,KAAKmC,YAAY,CACfa,QAAShC,M,sCAIIA,GACfhB,KAAKmC,YAAY,CACfc,UAAWjC,M,uCAIGA,GAChBhB,KAAKmC,YAAY,CACfe,WAAYlC,M,0CAIKA,GACnBhB,KAAKmC,YAAY,CACfgB,cAAenC,M,2CAIGA,GACpBhB,KAAKmC,YAAY,CACfiB,eAAgBpC,M,8CAIKA,GACvBhB,KAAKmC,YAAY,CACfkB,kBAAmBrC,M,+CAIGA,GACxBhB,KAAKmC,YAAY,CACfmB,mBAAoBtC,M,kDAIKA,GAC3BhB,KAAKmC,YAAY,CACfoB,sBAAuBvC,M,gDAIAA,GACzBhB,KAAKmC,YAAY,CACfqB,qBAAsBxC,M,iDAIEA,GAC1BhB,KAAKmC,YAAY,CACfsB,qBAAsBzC,M,+BAIf,IAAD,SAWJhB,KAAKT,MAAM2C,SATba,EAFM,EAENA,IACAG,EAHM,EAGNA,WACAC,EAJM,EAINA,cACAK,EALM,EAKNA,qBACAH,EANM,EAMNA,kBACAE,EAPM,EAONA,sBACAD,EARM,EAQNA,mBACAF,EATM,EASNA,eACAK,EAVM,EAUNA,qBAKF,OACE,yBACE/C,UAAS,mBAAcV,KAAKV,MAAMoB,YAElC,4BACE,4BACE,yBAAKC,MAAO,CAAEC,aAAc,oBAAqB8C,QAAS,IACxD,kBAAC9B,EAAD,CACEtB,QAASyB,EACT4B,MAAO3D,KAAKiC,eACZrC,SAAU,SAACa,GACT,EAAKwB,eAAiBxB,EACtB,EAAK0B,YAAY,CACfc,UAAWxC,EAAQQ,QAAQ,cAAgB,EAC3C+B,QAASvC,EAAQQ,QAAQ,YAAc,KAG3CP,UAAU,uBAIhB,4BACE,kBAAC,IAAD,CAASkD,MAAM,iDAAiDC,UAAU,YAA1E,QACQd,EADR,KAGA,kBAAC,IAAD,CACEe,aAAcf,EACdgB,IAAK,IACLC,IAAK,EACLC,KAAM,EACNC,cAAelE,KAAKoC,aAGxB,4BACE,kBAAC,IAAD,CAASwB,MAAM,+BAA+BC,UAAU,YAAxD,gBACgBX,EADhB,KAGA,kBAAC,IAAD,CACEY,aAAcZ,EACda,IAAK,EACLC,IAAK,EACLC,KAAM,IACNC,cAAelE,KAAKuC,oBAGxB,4BACE,kBAAC,IAAD,CACEqB,MAAM,8SACNC,UAAU,YAFZ,mBAImBV,EAJnB,KAMA,kBAAC,IAAD,CACEW,aAAcX,EACdY,IAAK,EACLC,IAAK,EACLC,KAAM,IACNC,cAAelE,KAAKwC,uBAGxB,4BACE,kBAAC,IAAD,CAASoB,MAAM,gJAAgJC,UAAU,YAAzK,oBACoBT,EADpB,KAGA,kBAAC,IAAD,CACEU,aAAcV,EACdW,IAAK,IACLC,KAAM,IACNC,KAAM,EACNC,cAAelE,KAAKyC,wBAGxB,4BACE,kBAAC,IAAD,CAASmB,MAAM,6DAA6DC,UAAU,YAAtF,uBACuBR,EADvB,KAGA,kBAAC,IAAD,CACES,aAAcT,EACdU,IAAK,EACLC,IAAK,EACLC,KAAM,IACNC,cAAelE,KAAK0C,2BAGxB,4BACE,kBAAC,IAAD,CAASkB,MAAM,4HAA4HC,UAAU,YAArJ,4BAC4BN,EAD5B,KAGA,kBAAC,IAAD,CACEO,aAAcP,EACdQ,IAAK,GACLC,IAAK,EACLC,KAAM,EACNC,cAAelE,KAAK4C,+BAGxB,4BACE,kBAAC,IAAD,CAASgB,MAAM,+CAA+CC,UAAU,YAAxE,8BAC8BL,EAD9B,KAGA,kBAAC,IAAD,CACEM,aAAcN,EACdO,IAAK,IACLC,KAAM,IACNC,KAAM,EACNC,cAAelE,KAAK8C,6BAGxB,4BACE,kBAAC,IAAD,CAASc,MAAM,0DAA0DC,UAAU,YAAnF,yBACyBP,EADzB,KAGA,kBAAC,IAAD,CACEQ,aAAcR,EACdS,IAAK,GACLC,IAAK,GACLC,KAAM,GACNC,cAAelE,KAAK2C,4BAGxB,4BACE,kBAAC,IAAD,CAASiB,MAAM,mCAAmCC,UAAU,YAA5D,2BAC2BJ,EAD3B,KAGA,kBAAC,IAAD,CACEK,aAAcL,EACdM,IAAK,EACLC,IAAK,EACLC,KAAM,IACNC,cAAelE,KAAK6C,8BAGxB,yBACElC,MAAO,CACL+C,QAAS,KAGX,kBAAC,IAAD,CACES,KAAK,SACLC,QAAS,kBAAM,EAAK9E,MAAM+E,WAC1BC,OAAK,GAHP,gB,GA9PWjD,aA4QvBW,EAASV,aAAe,CACtBY,SAAU,CACRa,IAAK,GACLC,SAAS,EACTE,WAAY,EACZD,WAAW,EACXE,cAAe,GACfC,gBAAiB,IACjBE,mBAAoB,EACpBD,kBAAmB,GACnBE,sBAAuB,GACvBC,sBAAuB,MAqBZxB,Q,+DClTTuC,E,kDACJ,aAAgB,IAAD,8BACb,gBACKC,aAAe,EAAKA,aAAa3E,KAAlB,gBACpB,EAAK4E,mBAAqB,EAAKA,mBAAmB5E,KAAxB,gBAC1B,EAAK6E,iBAAmB,EAAKA,iBAAiB7E,KAAtB,gBACxB,EAAK8E,gBAAkB,EAAKA,gBAAgB9E,KAArB,gBAEvB,EAAK+E,aAAe,KAPP,E,2DAWb5E,KAAKV,MAAM8E,QAAQ,CACjBD,KAAM,OACNU,KAAM7E,KAAKV,MAAMwF,O,2CAmBf9E,KAAKV,MAAMyF,eACb/E,KAAKV,MAAMyF,cAAc,CACvBZ,KAAM,OACNU,KAAM7E,KAAKV,MAAMwF,O,uCAKLE,EAAOC,GACnBjF,KAAKV,MAAM4F,aACblF,KAAKV,MAAM4F,YAAY,CACrBf,KAAM,OACNU,KAAM,CACJC,GAAI9E,KAAKV,MAAMwF,GACfK,KAAMnF,KAAKV,MAAM6F,KACjBhB,KAAMnE,KAAKV,MAAM6E,MAEnBa,Y,sCAKWA,GACXhF,KAAKV,MAAM8F,YACbpF,KAAKV,MAAM8F,WAAW,CACpBjB,KAAM,OACNU,KAAM,CACJC,GAAI9E,KAAKV,MAAMwF,GACfK,KAAMnF,KAAKV,MAAM6F,KACjBhB,KAAMnE,KAAKV,MAAM6E,MAEnBa,Y,+BAKK,IAAD,EASJhF,KAAKV,MAPPoB,EAFM,EAENA,UACA2E,EAHM,EAGNA,OACAC,EAJM,EAINA,MACAL,EALM,EAKNA,EACAM,EANM,EAMNA,EACA5E,EAPM,EAONA,MACA6E,EARM,EAQNA,OAEF,OACE,uBACE9E,UAAWA,EACX+E,UAAS,oBAAeR,EAAf,YAAoBM,EAApB,KACTnB,QAASpE,KAAKwE,aACd7D,MAAO,CACL+E,OAAQ,UACRC,QAASH,EAAS,EAAI,IAExBN,YAAalF,KAAK0E,iBAClBU,WAAYpF,KAAK2E,iBAEjB,4BACEiB,EAAGP,EACHQ,KAAMP,EACN3E,MAAOA,IAGPmF,EAAa9F,KAAKV,Y,GAjGT+B,aAwGbyE,EAAe,SAACxG,GAAW,IACvBwF,EAA0CxF,EAA1CwF,GAAIiB,EAAsCzG,EAAtCyG,IAAKV,EAAiC/F,EAAjC+F,OAAQW,EAAyB1G,EAAzB0G,UAAWC,EAAc3G,EAAd2G,UACpC,OAAIF,EAEA,2BACE,8BACE,8BACEjB,GAAE,eAAUA,IAEZ,4BACEc,EAAGP,EAAS,MAKlB,2BACEa,UAAWH,EACXI,SAAQ,oBAAerB,EAAf,KACRG,GAAII,EACJE,GAAIF,EACJe,MAAgB,EAATf,KAMX,0BACEgB,IAAKhB,EAAS,EACdiB,GAAIL,EAAUM,SAAW,EACzB5F,MAAOsF,GAEND,IAMTzB,EAAKjD,aAAe,CAClBZ,UAAW,OACX2E,OAAQ,GACRC,MAAO,UACP3E,MAAO,CACLiF,EAAG,GACHY,OAAQ,UACRC,YAAa,OAEfR,UAAW,CACTM,SAAU,GACVV,KAAM,OACNY,YAAa,MACbC,WAAY,UAEdzB,EAAG,EACHM,EAAG,EACHC,QAAQ,GAgCKjB,QChMToC,E,uKACO,IAAD,EACkC3G,KAAKV,MAAvCsH,EADA,EACAA,EAAGC,EADH,EACGA,QAASlG,EADZ,EACYA,MAAOmE,EADnB,EACmBA,GAAIU,EADvB,EACuBA,OAC/B,OACE,uBACE7E,MAAO,CACLgF,QAASH,EAAS,EAAI,KAGtBsB,EAAW9G,KAAKV,OAClB,0BACEwF,GAAIA,EACJnE,MAAOA,EACPiG,EAAGA,EACHG,UAAWF,EAAO,eAAW/B,EAAX,aAA2B+B,IAE7CG,EAAShH,KAAKV,Y,GAhBL+B,aAsBbyF,EAAa,SAACxH,GAClB,GAAIA,EAAMuH,QACR,OACE,8BACE,4BACE/B,GAAE,UAAKxF,EAAMwF,GAAX,YACFmC,QAAQ,aACRC,KAAM5H,EAAM6H,YACZC,KAAK,KACLC,YAAY,IACZC,aAAa,IACbC,OAAO,QAEP,0BACEX,EAAE,iBACFf,KAAK,OACLlF,MAAO,CACLgF,QAAS,QAQjBqB,EAAW,SAAC1H,GAChB,GAAIA,EAAM6E,KACR,OACE,8BACE,8BACEkC,GAAI,EACJC,GAAI,EACJkB,KAAI,WAAMlI,EAAMwF,IAChB2C,YAAY,MACZ9G,MAAOrB,EAAM2G,WAEZ3G,EAAM6E,QAOjBwC,EAAKrF,aAAe,CAClBX,MAAO,CACL8F,YAAa,IACbZ,KAAM,OACNW,OAAQ,wBAEVP,UAAW,CACTyB,cAAe,OACfC,WAAY,SACZ9B,KAAM,QAERgB,SAAS,EACTrB,QAAQ,GAaKmB,QCrFTiB,E,kDACJ,WAAatI,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAL,eACK,EAAKD,OAGV,EAAKuI,WAAa,EAAKA,WAAWhI,KAAhB,gBAClB,EAAKiI,SAAW,EAAKA,SAASjI,KAAd,gBAPE,E,sEAUOkI,GACzB/H,KAAKI,SAAL,eAAmB2H,M,+BAGXC,EAAQxH,GAChB,OAAOR,KAAKT,MAAM0I,MACf/H,QACC,SAAAgI,GAAI,OACFA,EAAKF,OAAOlD,KAAOkD,EAAOlD,IAC1BoD,EAAK1H,OAAOsE,KAAOtE,EAAOsE,MAE7BjE,KAAI,SAAAsH,GAAC,OAAIA,EAAEhE,U,iCAGJ+D,GAAyB,IAAnBE,IAAkB,yDAC5BC,EAAKD,EAAYF,EAAKF,OAAO/C,EAAIiD,EAAK1H,OAAOyE,EAC7CqD,EAAKF,EAAYF,EAAKF,OAAOzC,EAAI2C,EAAK1H,OAAO+E,EAC7CgD,EAAKH,EAAYF,EAAK1H,OAAOyE,EAAIiD,EAAKF,OAAO/C,EAC7CuD,EAAKJ,EAAYF,EAAK1H,OAAO+E,EAAI2C,EAAKF,OAAOzC,EAC7Cc,EAAKkC,EAAKF,EACV/B,EAAKkC,EAAKF,EACVG,EAAWzI,KAAK8H,SAASI,EAAKF,OAAQE,EAAK1H,QAE3CkI,EAAe,EACfC,EAAY,EACZC,EAAW,EAEjB,GAAIF,EAAe,EAAG,CAEpB,IAIIG,EACAC,EALEC,EAAWC,yBACdC,OAAOR,GACPS,MAAM,CAAC,EAAGR,IACPS,EAAUJ,EAASb,EAAK/D,MAGd,IAAZgF,GACFL,EAAQ,EACRD,EAAQ,GAECM,EAAU,IAAM,GACzBL,EAAQ,EACRD,EAAQM,EAAU,GACTA,EAAU,IAAM,IACzBL,EAAQ,EACRD,EAAQM,EAAU,EAAI,GAExB,IAAMC,EACJC,KAAKC,KAAKjD,EAAKA,EAAKC,EAAKA,IAAO,EAAK,EAAIoC,GAAiBG,EAAQ,IACpE,MAAM,IAAN,OAAWR,EAAX,YAAiBC,EAAjB,YAA4B,IAALc,EAAvB,YACE,IADiCA,EAAnC,YACST,EADT,aACuBC,EADvB,aACoCE,EADpC,YAC6CP,EAD7C,YACmDC,GAErD,MAAM,IAAN,OAAWN,EAAKF,OAAO/C,EAAvB,YAA4BiD,EAAKF,OAAOzC,EAAxC,aAA8C2C,EAAK1H,OAAOyE,EAA1D,YAA+DiD,EAAK1H,OAAO+E,K,+BAGlE,IAAD,SACiBvF,KAAKT,MAAtBgK,EADA,EACAA,MAAOtB,EADP,EACOA,MACf,OACE,uBACEvH,UAAWV,KAAKV,MAAMoB,UACtB+E,UAAWzF,KAAKV,MAAMmG,WAEtB,uBAAG/E,UAAU,SAETuH,EAAMuB,QAAO,SAACC,EAAKvB,EAAMpH,GACvB,MAA2B,kBAAhBoH,EAAKF,QAA8C,kBAAhBE,EAAK1H,QACjDiJ,EAAIxJ,KACF,kBAAC,EAAD,CACEc,IAAKD,EACL8F,EAAG,EAAKiB,WAAWK,GACnBvH,MAAOuH,EAAKvH,MACZmE,GAAIoD,EAAKpD,GACTX,KAAM+D,EAAK/D,KACXgD,YAAkC,KAArBe,EAAK1H,OAAO6E,OACzBG,OAAQ0C,EAAK1C,UAGViE,GAEFA,IACN,KAGP,uBAAG/I,UAAU,SAET6I,EAAM1I,KAAI,SAAC6I,EAAM5I,GAAP,OACR,kBAAC,EAAD,eACEC,IAAKD,EACLsD,QAAS,EAAK9E,MAAM8E,QACpBW,cAAe,EAAKzF,MAAMyF,cAC1BG,YAAa,EAAK5F,MAAM4F,YACxBE,WAAY,EAAK9F,MAAM8F,YACnBsE,a,GAtGGrI,aAgHvBuG,EAAStG,aAAe,CACtBZ,UAAW,WACX6I,MAAO,GACPtB,MAAO,IAWML,QCpHT+B,G,yDACJ,WAAarK,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CACXgK,MAAO,GACPtB,MAAO,GACP2B,aAAc,KACdC,YAAa,GACbC,WAAY,EAAKC,iBACjB3D,MAAO,IACP4D,OAAQ,IACRvE,UAAW,CACTR,EAAG,EACHM,EAAG,EACH0E,EAAG,GAELC,QAAS,CACP/E,KAAM,GACNxE,MAAO,CACLgF,QAAS,EACTwE,IAAK,EACLC,KAAM,KAIZ,EAAKL,eAAiB,EAAKA,eAAelK,KAApB,gBACtB,EAAKwK,gBAAkB,EAAKA,gBAAgBxK,KAArB,gBACvB,EAAKyK,WAAa,EAAKA,WAAWzK,KAAhB,gBAClB,EAAK0K,iBAAmB,EAAKA,iBAAiB1K,KAAtB,gBACxB,EAAK2K,OAAS,EAAKA,OAAO3K,KAAZ,gBACd,EAAK4K,IAAMC,IAAMC,YACjB,EAAKpB,MAAQ,GACb,EAAKtB,MAAQ,GAGb,EAAK2C,SAAY,IAAO,EAAKtL,MAAMyD,IACnC,EAAK8H,OAASC,KAAKC,MAGnB,EAAKrG,iBAAmB,EAAKA,iBAAiB7E,KAAtB,gBACxB,EAAK8E,gBAAkB,EAAKA,gBAAgB9E,KAArB,gBACvB,EAAK2E,aAAe,EAAKA,aAAa3E,KAAlB,gBAGpB,EAAKmL,iBAAmB,EAAKA,iBAAiBnL,KAAtB,gBA3CN,E,gEA8CE,IAAD,OACnBG,KAAKqK,kBACLrK,KAAKI,SAAS,CACZgG,MAAOpG,KAAKyK,IAAIQ,QAAQC,YACxBlB,OAAQhK,KAAKyK,IAAIQ,QAAQE,eACxB,WACD,IAAMC,EAAUC,EAAK,EAAK9B,MAAO,EAAKjK,MAAMiK,OAC5C,EAAKe,WAAWc,GAChB,EAAKb,wB,yCAIWe,GAClBtL,KAAK4K,SAAY,IAAO5K,KAAKV,MAAMyD,IAEnC,IAAMqI,EAAUC,EAAKC,EAAU/B,MAAOvJ,KAAKV,MAAMiK,QAC7C6B,EAAQG,MAAMlL,OAAS,GAAK+K,EAAQI,QAAQnL,OAAS,KACvDL,KAAKsK,WAAWc,GAChBpL,KAAKuK,oBAKLkB,KAAKC,UAAL,2BACKJ,GADL,IAEE/B,MAAO,KACPtB,MAAO,KACP0D,SAAU,UAEZF,KAAKC,UAAL,2BACK1L,KAAKV,OADV,IAEEiK,MAAO,KACPtB,MAAO,KACP0D,SAAU,SAGZ3L,KAAKuK,qB,uCAKP,IAAMqB,EAAYC,cACf/G,IAAG,SAAAoD,GAAI,OAAIA,EAAKpD,MAChBgH,UAAS,SAAA5D,GAAI,OAAIA,EAAK4D,YACtBC,UAAS,SAAA7D,GAAI,OAAIA,EAAK6D,YAGzB,OAFmBC,cAAkBC,MAAM,OAAQL,K,wCAKjC,IAAD,OAGXnB,EAAMyB,YAAO,aACbC,EAAcC,cAAOC,GAAG,QAAQ,WACpC,EAAKjM,SAAS,CACZqF,UAAWT,IAAMS,eAGrBgF,EAAI6B,KAAKH,GAAaE,GAAG,gBAAiB,Q,iCAGhChB,GAAO,IAAD,OACRpD,EAAUjI,KAAKV,MAAf2I,MACRjI,KAAKiI,MAAQ,GAGboD,EAAKG,QAAQe,SAAQ,SAAA7C,GACnB,EAAKH,MAAQ,EAAKA,MAAMrJ,QACtB,SAAAsM,GAAC,QAAMA,EAAE1H,KAAO4E,EAAK5E,IAAM0H,EAAErI,OAASuF,EAAKvF,YAK/CkH,EAAKE,MAAMgB,SAAQ,SAAA7C,GAAI,OAAI,EAAKH,MAAMtJ,KAAKyJ,MAG3CzB,EAAMsE,SAAQ,SAAArE,GACZ,IAAMuE,EAAa,EAAKlD,MAAMrJ,QAC5B,SAAAwJ,GAAI,OAAIA,EAAK5E,KAAOoD,EAAKF,UACzB,GACI0E,EAAa,EAAKnD,MAAMrJ,QAC5B,SAAAwJ,GAAI,OAAIA,EAAK5E,KAAOoD,EAAK1H,UACzB,GACEiM,GAAcC,GAChB,EAAKzE,MAAMhI,KAAX,2BACKiI,GADL,IAEEF,OAAQyE,EACRjM,OAAQkM,U,yCAMK,IAAD,SAYd1M,KAAKV,MAVPkE,EAFgB,EAEhBA,qBACAJ,EAHgB,EAGhBA,eACAG,EAJgB,EAIhBA,sBACAF,EALgB,EAKhBA,kBACAJ,EANgB,EAMhBA,UACAE,EAPgB,EAOhBA,cACAD,EARgB,EAQhBA,WACAF,EATgB,EAShBA,QACAM,EAVgB,EAUhBA,mBACAG,EAXgB,EAWhBA,qBAXgB,EAaoBzD,KAAKT,MAAnCuK,EAbU,EAaVA,WAAYE,EAbF,EAaEA,OAAQ5D,EAbV,EAaUA,MAkB5B,GAhBA0D,EACGP,MAAMvJ,KAAKuJ,OACX8C,GAAG,OAAQrM,KAAKwK,QACnBV,EAAWmC,MAAM,QAAQhE,MAAMjI,KAAKiI,OACpC6B,EACGmC,MAAM,SAAUU,YAAYvG,EAAQ,EAAG4D,EAAS,IAChDiC,MAAM,eAAgBW,cAAgBd,SAAStI,IAC/CyI,MAAM,SAAUW,cAAgBd,SAAS1I,IACzC6I,MACC,YACAY,cACGxH,QAAO,SAAAqE,GAAI,OAAIA,EAAKrE,OAAS9B,KAC7BuI,SAASzI,IAIZL,EAAS,CACX,IAAM8J,EAAW,GACCC,IAAO/M,KAAKuJ,MAAO,QAAQ1I,KAAI,SAAAsD,GAAI,OAAIA,EAAKA,QAEpDoI,SAAQ,SAACpI,EAAMrD,EAAKkM,GAC5B,IAAKF,EAAS3I,GAAO,CACnB,IAAMkB,EAASe,EAAQ4D,EAASA,EAAS1G,EAAqB8C,EAAQ9C,EACtEwJ,EAAS3I,GAAQ,CACfc,EAAGoE,KAAK4D,KAAKnM,EAAM,GAAKkM,EAAI3M,OAAS,EAAIgJ,KAAK6D,IAAM7H,EAASe,EAAQ,EAAIiD,KAAK8D,SAC9E5H,EAAG8D,KAAK+D,KAAKtM,EAAM,GAAKkM,EAAI3M,OAAS,EAAIgJ,KAAK6D,IAAM7H,EAAS2E,EAAS,EAAIX,KAAK8D,SAC/E9H,cAKNyE,EAAWmC,MAAM,WAAW,SAAAoB,GAAK,OAC/BC,EAAkBD,EAAO,EAAK9D,MAAOuD,EAAUrJ,WAGjDqG,EAAWmC,MAAM,UAAW,MAS9B,GANAnC,EACGuD,MAAMnK,GACNqK,YAAY,GACZpK,cAAcA,GACdqK,WAEEvK,EACH,KAAO6G,EAAWuD,SAAW,KAC3BvD,EAAW2D,S,6BAKTlN,GAEN,IAAMmN,EAAc5C,KAAKC,MACrB2C,EAAc1N,KAAK6K,OAAS7K,KAAK4K,WACnC5K,KAAK6K,OAAS6C,EACd1N,KAAKI,SAAS,CACZmJ,MAAOvJ,KAAKuJ,MACZtB,MAAOjI,KAAKiI,W,wCAMhBjI,KAAKI,SAAS,CACZ8J,QAAS,CACPvJ,MAAO,CACLgF,QAAS,Q,uCAMCgI,GAAU,IAClB3I,EAAsB2I,EAAtB3I,MAAOb,EAAewJ,EAAfxJ,KAAMU,EAAS8I,EAAT9I,KACjBM,EAAO,GACE,SAAThB,EACFgB,EAAI,WAAON,EAAKV,KAAZ,aAAqBU,EAAKM,MACZ,SAAThB,IACTgB,EAAI,UAAMN,EAAKV,OAEjBnE,KAAKI,SAAS,CACZ8J,QAAS,CACP/E,OACAxE,MAAO,CACLgF,QAAS,EACTwE,IAAKnF,EAAM4I,QAAU,GACrBxD,KAAMpF,EAAM6I,QAAU,S,mCAMhB7I,GACRhF,KAAKT,MAAMqK,eAAiB5E,EAAMH,KACpC7E,KAAKI,SAAS,CACZwJ,aAAc,KACdC,YAAa,KAGf7J,KAAKI,SAAS,CACZwJ,aAAc5E,EAAMH,KACpBgF,YAAa7J,KAAKgL,iBAAiBhG,EAAMH,U,uCAK7B6E,GAChB,OAAO1J,KAAKiI,MAAMuB,QAChB,SAACsE,EAAW5F,GAMV,OALIA,EAAK1H,OAAOsE,KAAO4E,EACrBoE,EAAU7N,KAAKiI,EAAKF,OAAOlD,IAClBoD,EAAKF,OAAOlD,KAAO4E,GAC5BoE,EAAU7N,KAAKiI,EAAK1H,OAAOsE,IAEtBgJ,IAET,M,+BAIO,IAAD,EACkD9N,KAAKT,MAAvDkG,EADA,EACAA,UAAWyE,EADX,EACWA,QAASN,EADpB,EACoBA,aAAcC,EADlC,EACkCA,YAGpCN,EAAQvJ,KAAKT,MAAMgK,MAAM1I,KAAI,SAAA6I,GAAI,kCAClCA,GADkC,IAErClE,OAAyB,OAAjBoE,GAAyBF,EAAK5E,KAAO8E,GAAgBC,EAAY5I,QAAQyI,EAAK5E,KAAO,OAGzFmD,EAAQjI,KAAKT,MAAM0I,MAAMpH,KAAI,SAAAqH,GAAI,kCAClCA,GADkC,IAErC1C,OACmB,OAAjBoE,GACA1B,EAAKF,OAAOlD,KAAO8E,GACnB1B,EAAK1H,OAAOsE,KAAO8E,OAGvB,OACE,yBACElJ,UAAU,eACVC,MAAO,CACLyF,MAAO,OACP4D,OAAQ,SAGThK,KAAKV,MAAMqM,SACZ,yBACEjL,UAAU,WACV0F,MAAM,OACN4D,OAAO,OACP+D,IAAK/N,KAAKyK,KAEV,kBAAC,EAAD,CACElB,MAAOA,EACPtB,MAAOA,EACPxC,UAAS,oBACMA,EAAUR,EADhB,YACqBQ,EAAUF,EAD/B,mBAC2CE,EAAUwE,EADrD,KAGT7F,QAASpE,KAAKwE,aACdO,cAAe/E,KAAKV,MAAMyF,cAC1BG,YAAalF,KAAK0E,iBAClBU,WAAYpF,KAAK2E,mBAIrB,0BACEjE,UAAU,qBACVC,MAAOuJ,EAAQvJ,OAEduJ,EAAQ/E,W,GAtUQ9D,cA8UrBiM,EAAoB,SAACD,EAAO9D,EAAOuD,EAAUhB,GACjDvC,EAAMgD,SAAQ,SAAA7C,GACZ,IAAM1G,EAAU8J,EAASpD,EAAKvF,MAC9B,GAAInB,EAAQiC,IAAMyE,EAAKzE,GAAKjC,EAAQuC,IAAMmE,EAAKnE,EAAG,CAChD,IAAM0E,EAAIoD,EAAQvB,EAClBpC,EAAKsE,KAAOtE,EAAKzE,EAAIjC,EAAQiC,GAAKgF,EAClCP,EAAKuE,KAAOvE,EAAKnE,EAAIvC,EAAQuC,GAAK0E,OAKlCiE,EAAeC,aAAQ,SAACzE,EAAMH,GAAP,OAC3BA,EAAMC,QAAO,SAACC,EAAK+C,GAIjB,OAHIA,EAAE1H,KAAO4E,EAAK5E,IAChB2E,EAAIxJ,KAAKuM,GAEJ/C,IACN,IAAIpJ,OAAS,EACZ,EACA,KAGAgL,EAAO8C,aAAQ,SAACC,EAAWC,GAAZ,MAA0B,CAC7C7C,QAAS4C,EAAUlO,QAAO,SAAAwJ,GAAI,OAAqC,IAAjCwE,EAAaxE,EAAM2E,MACrD9C,MAAO8C,EAASnO,QAAO,SAAAwJ,GAAI,OAAsC,IAAlCwE,EAAaxE,EAAM0E,UAGpDzE,EAAarI,aAAe,CAC1BiI,MAAO,GACPtB,MAAO,GACPzE,qBAAsB,GACtBJ,gBAAiB,GACjBG,sBAAuB,GACvBF,kBAAmB,GACnBJ,WAAW,EACXD,SAAS,EACTD,IAAK,GACLG,WAAY,EACZC,cAAe,GACfG,mBAAoB,EACpBG,qBAAsB,IAqBTkG,Q,SCzZR,SAAS2E,EAAcC,EAAUC,GACtC,IAAIC,EAAQ,GACRC,EAAY,GACZC,EAAc,GACdC,EAAiB,GAEjB3G,EAAQ,GA+IZ,OA7IoBsG,EAASM,aAgBjBtC,SAAQ,SAAAuC,GACdN,EAAQvN,QAAQ6N,EAAMC,OAAS,IAC7BD,EAAML,MAAMO,OACEF,EAAML,MAAMO,KAAK3O,OAASyO,EAAML,MAAMO,KAAO,CAAEF,EAAML,MAAMO,OACnEzC,SAAQ,SAAAyC,GACdP,EAAMxO,KAAN,2BAEO+O,GAFP,IAGIC,SAAU,CACRH,MAAOA,EAAMC,gBAS3BN,EAAMlC,SAAQ,SAAAyC,GAAS,IACbE,EAAWF,EAAKG,QAAhBD,OAEHR,EAAUM,EAAKlK,GAAGsK,MAErBV,EAAUM,EAAKlK,GAAGsK,IAAM,CACtBtK,GAAIkK,EAAKlK,GAAGsK,GACZjK,KAAM6J,EAAKpL,MACXO,KAAM,OACN4B,IAAKiJ,EAAKK,UACV/J,MAAO,UACPD,OAAQ,GACR1E,MAAO,CACLiF,EAAG,GACHY,OAAQ,UACRC,YAAa,QAIZkI,EAAYO,EAAOpK,MACtB6J,EAAYO,EAAOpK,IAAM,CACvBA,GAAIoK,EAAOpK,GACXK,KAAM+J,EAAOH,KACb5K,KAAM,SACN4B,IAAKmJ,EAAOG,UAAUD,GACtB9J,MAAO,UACPD,OAAQ,GACR1E,MAAO,CACLiF,EAAG,GACHY,OAAQ,UACRC,YAAa,SAKdmI,EAAeI,EAAKM,aACvBV,EAAeI,EAAKM,WAAa,CAC/BxK,GAA8B,kBAAnBkK,EAAKM,UAAyBN,EAAKM,UAAY,iBAC1DnK,KAAgC,kBAAnB6J,EAAKM,UAAyBN,EAAKM,UAAY,iBAC5DnL,KAAM,YACNmB,MAAO,UACPD,OAAQ,GACR1E,MAAO,CACLiF,EAAG,GACHY,OAAQ,UACRC,YAAa,SAKnBwB,EAAMhI,KAAK,CACT+H,OAAQkH,EAAOpK,GACfyK,WAAY,SACZ/O,OAAQwO,EAAKlK,GAAGsK,GAChBI,WAAY,OACZrL,KAAM,YACN8K,SAAU,CACRQ,gBAAiBT,EAAKU,iBACtBC,iBAAkBX,EAAKY,kBACvBC,eAAgBb,EAAKc,mBAIzB7H,EAAMhI,KAAK,CACT+H,OAAQgH,EAAKlK,GAAGsK,GAChBG,WAAY,OACZ/O,OAAkC,kBAAnBwO,EAAKM,UAAyBN,EAAKM,UAAY,iBAC9DE,WAAY,YACZrL,KAAM,eACN8K,SAAU,CACRQ,gBAAiBT,EAAKU,iBACtBC,iBAAkBX,EAAKY,kBACvBC,eAAgBb,EAAKc,mBAKzB7H,EAAMhI,KAAK,CACT+H,OAAQkH,EAAOpK,GACfyK,WAAY,SACZ/O,OAAQwO,EAAKM,UACbE,WAAY,YACZrL,KAAM,aACN8K,SAAU,CACRQ,gBAAiBT,EAAKU,iBACtBC,iBAAkBX,EAAKY,kBACvBC,eAAgBb,EAAKc,uBAqBtB,CACLvG,MAfMwG,OAAOC,OAAOtB,GACnBuB,OAAOF,OAAOC,OAAOrB,IACrBsB,OAAOF,OAAOC,OAAOpB,IACrB/N,KAAI,SAAC6I,EAAM5I,GAAP,mBAAC,eACD4I,GADA,IAEH1D,WAhJeb,EAgJSuE,EAAKvE,KA/I1BA,EAAK+K,MAAM,KAAKC,MAAM,EAAG,GAAGtP,KAAI,SAAAuP,GAAI,OAAIA,EAAKC,OAAO,GAAGC,iBAAeC,KAAK,KAgJ9EtK,UAAW,CACTM,SAAU,GACVV,KAAM,OACNY,YAAa,MACbC,WAAY,YArJC,IAAAvB,KA2JjB8C,MAAOA,EAAMpH,KAAI,SAAAqH,GAAI,kCAChBA,GADgB,IAEnB4D,SAAU,GACVC,SAAU,IACVjH,GAAG,GAAD,OAAKoD,EAAKF,OAAV,YAAoBE,EAAK/D,KAAzB,YAAiC+D,EAAK1H,QACxCG,MAAO,CACL8F,YAAa,IACbZ,KAAM,OACNW,OAAQ,+B,WCvJVgK,EAAuB,CAC3BzN,IAAK,GACLC,SAAS,EACTE,WAAY,EACZD,WAAW,EACXE,cAAe,GACfC,gBAAiB,IACjBC,kBAAmB,GACnBE,sBAAuB,GACvBC,sBAAuB,IACvBF,mBAAoB,EACpBG,qBAAsB,IAGlBgN,E,kDACJ,WAAanR,GAAQ,IAAD,sBAClB,cAAMA,GAGN,IAAM4C,EAAWwO,OAAOC,aAAaC,QAAQ,iBAJ3B,OAMlB,EAAKrR,MAAQ,CACXsR,cAAe3O,EAAWuJ,KAAKqF,MAAM5O,GAAYsO,EACjDO,iBAAiB,EACjBC,sBAAsB,EACtBzH,MAAO,GACPtB,MAAO,GACPuG,QAAS,GACTyC,gBAAiB,IAGnB,EAAKC,aAAe,EAAKA,aAAarR,KAAlB,gBACpB,EAAKsR,qBAAuB,EAAKA,qBAAqBtR,KAA1B,gBAC5B,EAAKuR,oBAAsB,EAAKA,oBAAoBvR,KAAzB,gBAC3B,EAAKwR,4BAA8B,EAAKA,4BAA4BxR,KAAjC,gBAEnC,EAAKyR,kBAAoB,EAAKA,kBAAkBzR,KAAvB,gBACzB,EAAK0R,oBAAsB,EAAKA,oBAAoB1R,KAAzB,gBAC3B,EAAK2R,iCAAmC,EAAKA,iCAAiC3R,KAAtC,gBAvBtB,E,gEA2BlB,IAAM2O,EAAUxO,KAAKV,MAAMiP,SAASM,aAAahO,KAAI,SAAAiO,GACnD,OAAIA,EAAML,MAAMO,KACP,CACLD,KAAMD,EAAMC,KACZ0C,UAAW3C,EAAML,MAAMO,KAAK3O,OAASyO,EAAML,MAAMO,KAAK3O,OAAS,GAG5D,CACL0O,KAAMD,EAAMC,KACZ0C,UAAW,MAGTR,EAAkBzC,EAAQnO,OAAS,EAAI,CAACmO,EAAQ,GAAGO,MAAQ,GAb9C,EAcMT,EAAatO,KAAKV,MAAMiP,SAAU0C,GAAnD1H,EAdW,EAcXA,MAAOtB,EAdI,EAcJA,MACfjI,KAAKI,SAAS,CACZmJ,QACAtB,QACAuG,UACAyC,sB,kDAIyBS,GAC3B1R,KAAKI,SAAS,CAAE2Q,gBAAiBW,M,qCAIjC1R,KAAKI,SAAS,CAAE2Q,iBAAiB,M,2CAGb7O,GACpBlC,KAAKI,SAAS,CACZyQ,cAAe3O,IAGjBwO,OAAOC,aAAagB,QAAQ,gBAAiBlG,KAAKC,UAAUxJ,M,4CAI5DlC,KAAKI,SAAS,CACZyQ,cAAeL,IAIjBE,OAAOC,aAAaiB,WAAW,iBAC/BlB,OAAOmB,SAASC,W,0CAIhB9R,KAAKI,SAAS,CAAE4Q,sBAAsB,M,uDAGNU,GAChC1R,KAAKI,SAAS,CAAE4Q,qBAAsBU,M,0CAGnBT,GAAkB,IAAD,EACX3C,EAAatO,KAAKV,MAAMiP,SAAU0C,GAAnD1H,EAD4B,EAC5BA,MAAOtB,EADqB,EACrBA,MACfjI,KAAKI,SAAS,CACZmJ,QACAtB,QACAgJ,sB,+BAIO,IAAD,EASJjR,KAAKT,MAPPgK,EAFM,EAENA,MACAtB,EAHM,EAGNA,MACA4I,EAJM,EAINA,cACAE,EALM,EAKNA,gBACAC,EANM,EAMNA,qBACAxC,EAPM,EAONA,QACAyC,EARM,EAQNA,gBAEF,OACE,yBACEvQ,UAAU,qBAEV,kBAAC,EAAD,eACE6I,MAAOA,EACPtB,MAAOA,GACH4I,GAEJ,kBAAC,IAAD,CACEkB,QACE,kBAAC,EAAD,CACEnS,SAAUI,KAAKmR,qBACf9M,QAASrE,KAAKoR,oBACdlP,SAAU2O,EACVnQ,UAAU,iBAGdkD,MAAM,WACNoO,QAAQ,QACRN,QAASX,EACTkB,gBAAiBjS,KAAKqR,4BACtBxN,UAAU,cAGV,kBAAC,IAAD,CACEqO,KAAK,UACLvR,MAAO,CACLwR,SAAU,QACVhI,IAAK,GACLiI,MAAO,OAIb,kBAAC,IAAD,CACEL,QACE,kBAAC1S,EAAA,EAAD,CACEO,SAAUI,KAAKuR,oBACfjR,QAASkO,EAAQ3N,KAAI,SAAAiO,GAAK,OAAIA,EAAMC,QACpCtP,mBAAoBwR,EACpB7P,YAAaoN,EAAQ3N,KAAI,SAAAiO,GAAK,gBAAOA,EAAMC,KAAb,aAAsBD,EAAM2C,UAA5B,QAC9BtQ,QAASqN,EAAQ3N,KAAI,SAAAiO,GAAK,OAAwB,IAApBA,EAAM2C,aACpC/Q,UAAU,iBAGdkD,MAAK,mBAAc4K,EAAQnO,OAAtB,KACL2R,QAAQ,QACRN,QAASV,EACTiB,gBAAiBjS,KAAKwR,iCACtB3N,UAAU,cAEV,kBAAC,IAAD,CACEqO,KAAK,eACLvR,MAAO,CACLwR,SAAU,QACVhI,IAAK,GACLiI,MAAO,KALX,yB,GA1JoB/Q,aA2KjBoP","file":"static/js/14.251320d6.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Checkbox } from 'antd'\n\nimport './style.css'\n\nclass MultiCheckBox extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      checkedList: props.defaultCheckedList,\n      indeterminate: true,\n      checkAll: false\n    }\n\n    this.onChange = this.onChange.bind(this)\n    this.onCheckAllChange = this.onCheckAllChange.bind(this)\n  }\n\n  onChange (option, state) {\n    let { checkedList } = this.state\n    if (state) {\n      checkedList.push(option)\n    } else {\n      checkedList = checkedList.filter(opt => opt !== option)\n    }\n    this.setState({\n      checkedList,\n      indeterminate: !!checkedList.length && (checkedList.length < this.props.options.length),\n      checkAll: checkedList.length === this.props.options.length\n    }, () => this.props.onChange(this.state.checkedList))\n  }\n\n  onCheckAllChange (e) {\n    this.setState({\n      checkedList: e.target.checked ? this.props.options : [],\n      indeterminate: false,\n      checkAll: e.target.checked\n    }, () => this.props.onChange(this.state.checkedList))\n  }\n\n  render () {\n    return (\n      <div className={this.props.className}>\n        <div style={{ borderBottom: '1px solid #E9E9E9' }}>\n          <Checkbox\n            indeterminate={this.state.indeterminate}\n            onChange={this.onCheckAllChange}\n            checked={this.state.checkAll}\n          >\n            Check all\n          </Checkbox>\n        </div>\n        <ul className='shelvesCheckboxGroup' >\n          {\n            this.props.options.map((option, idx) => (\n              <li key={idx}>\n                <Checkbox\n                  onChange={val => this.onChange(option, val.target.checked)}\n                  key={option}\n                  checked={this.props.defaultCheckedList.indexOf(option) > -1}\n                  disabled={this.props.disable[idx]}\n                >\n                  {this.props.optionLabel[idx] ? this.props.optionLabel[idx] : option}\n                </Checkbox>\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n    )\n  }\n}\n\nMultiCheckBox.defaultProps = {\n  disable: [],\n  optionLabel: []\n}\n\nMultiCheckBox.propTpes = {\n  options: PropTypes.array.isRequired,\n  onChange: PropTypes.func,\n  optionLabel: PropTypes.array,\n  defaultCheckedList: PropTypes.array,\n  disable: PropTypes.array\n}\n\nexport default MultiCheckBox\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Checkbox, Slider, Button, Tooltip } from 'antd'\n\nimport './style.css'\n\nconst CheckboxGroup = Checkbox.Group\n\nconst plainOptions = ['animation', 'cluster']\n\nclass Settings extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      ...props\n    }\n\n    this.defaultOptions = plainOptions.filter((option) => this.props.settings[option])\n\n    this.updateState = this.updateState.bind(this)\n\n    // settings handler\n    this.updateFps = this.updateFps.bind(this)\n    this.updateCluster = this.updateCluster.bind(this)\n    this.updateAnimation = this.updateAnimation.bind(this)\n    this.updateAlphaStart = this.updateAlphaStart.bind(this)\n    this.updateVelocityDecay = this.updateVelocityDecay.bind(this)\n    this.updateChargeStrength = this.updateChargeStrength.bind(this)\n    this.updateCollisionStrength = this.updateCollisionStrength.bind(this)\n    this.updateClusterRadiusScale = this.updateClusterRadiusScale.bind(this)\n    this.updateCollisionRadiusOffset = this.updateCollisionRadiusOffset.bind(this)\n    this.updateClusterForceStrength = this.updateClusterForceStrength.bind(this)\n    this.updateAttracForceStrength = this.updateAttracForceStrength.bind(this)\n  }\n\n  updateState (val) {\n    // update local state and trigger parent onChange function\n    this.setState({\n      settings: {\n        ...this.state.settings,\n        ...val\n      }\n    },\n    () => this.props.onChange(this.state.settings))\n  }\n\n  updateFps (val) {\n    this.updateState({\n      fps: val\n    })\n  }\n\n  updateCluster (val) {\n    this.updateState({\n      cluster: val\n    })\n  }\n\n  updateAnimation (val) {\n    this.updateState({\n      animation: val\n    })\n  }\n\n  updateAlphaStart (val) {\n    this.updateState({\n      alphaStart: val\n    })\n  }\n\n  updateVelocityDecay (val) {\n    this.updateState({\n      velocityDecay: val\n    })\n  }\n\n  updateChargeStrength (val) {\n    this.updateState({\n      chargeStrength: val\n    })\n  }\n\n  updateCollisionStrength (val) {\n    this.updateState({\n      collisionStrength: val\n    })\n  }\n\n  updateClusterRadiusScale (val) {\n    this.updateState({\n      clusterRadiusScale: val\n    })\n  }\n\n  updateCollisionRadiusOffset (val) {\n    this.updateState({\n      collisionRadiusOffset: val\n    })\n  }\n\n  updateAttracForceStrength (val) {\n    this.updateState({\n      attraceForceStrength: val\n    })\n  }\n\n  updateClusterForceStrength (val) {\n    this.updateState({\n      clusterForceStrength: val\n    })\n  }\n\n  render () {\n    const {\n      fps,\n      alphaStart,\n      velocityDecay,\n      attraceForceStrength,\n      collisionStrength,\n      collisionRadiusOffset,\n      clusterRadiusScale,\n      chargeStrength,\n      clusterForceStrength\n    } = this.state.settings\n\n    // this.props.onChange(this.state)\n\n    return (\n      <div\n        className={`settings ${this.props.className}`}\n      >\n        <ul>\n          <li>\n            <div style={{ borderBottom: '1px solid #E9E9E9', padding: 5 }}>\n              <CheckboxGroup\n                options={plainOptions}\n                value={this.defaultOptions}\n                onChange={(checked) => {\n                  this.defaultOptions = checked\n                  this.updateState({\n                    animation: checked.indexOf('animation') > -1,\n                    cluster: checked.indexOf('cluster') > -1\n                  })\n                }}\n                className='settingsCheckbox'\n              />\n            </div>\n          </li>\n          <li>\n            <Tooltip title='How many times per second to render the graph.' placement='rightTop'>\n              FPS ({fps})\n            </Tooltip>\n            <Slider\n              defaultValue={fps}\n              max={120}\n              min={1}\n              step={1}\n              onAfterChange={this.updateFps}\n            />\n          </li>\n          <li>\n            <Tooltip title='Initial Alpha of simulation.' placement='rightTop'>\n              Alpha Start ({alphaStart})\n            </Tooltip>\n            <Slider\n              defaultValue={alphaStart}\n              max={1}\n              min={0}\n              step={0.01}\n              onAfterChange={this.updateAlphaStart}\n            />\n          </li>\n          <li>\n            <Tooltip\n              title='The decay factor is akin to atmospheric friction; after the application of any forces during a tick, each node’s velocity is multiplied by 1 - decay. As with lowering the alpha decay rate, less velocity decay may converge on a better solution, but risks numerical instabilities and oscillation.'\n              placement='rightTop'\n            >\n              velocity Decay ({velocityDecay})\n            </Tooltip>\n            <Slider\n              defaultValue={velocityDecay}\n              max={1}\n              min={0}\n              step={0.01}\n              onAfterChange={this.updateVelocityDecay}\n            />\n          </li>\n          <li>\n            <Tooltip title='It can be used to simulate gravity (attraction) if the strength is positive, or electrostatic charge (repulsion) if the strength is negative.' placement='rightTop'>\n              Charge Strength ({chargeStrength})\n            </Tooltip>\n            <Slider\n              defaultValue={chargeStrength}\n              max={500}\n              min={-500}\n              step={1}\n              onAfterChange={this.updateChargeStrength}\n            />\n          </li>\n          <li>\n            <Tooltip title='Sets the collision force strength to the specified number.' placement='rightTop'>\n              Collision Strength ({collisionStrength})\n            </Tooltip>\n            <Slider\n              defaultValue={collisionStrength}\n              max={1}\n              min={0}\n              step={0.01}\n              onAfterChange={this.updateCollisionStrength}\n            />\n          </li>\n          <li>\n            <Tooltip title='The collision force treats nodes as circles with a given radius, rather than points, and prevents nodes from overlapping.' placement='rightTop'>\n              Collision Radius Offset ({collisionRadiusOffset})\n            </Tooltip>\n            <Slider\n              defaultValue={collisionRadiusOffset}\n              max={50}\n              min={0}\n              step={1}\n              onAfterChange={this.updateCollisionRadiusOffset}\n            />\n          </li>\n          <li>\n            <Tooltip title='Sets attractive force strength between nodes' placement='rightTop'>\n              Attractive Force Strength ({attraceForceStrength})\n            </Tooltip>\n            <Slider\n              defaultValue={attraceForceStrength}\n              max={500}\n              min={-500}\n              step={1}\n              onAfterChange={this.updateAttracForceStrength}\n            />\n          </li>\n          <li>\n            <Tooltip title='Radius of the circle around which to cluster the nodes.' placement='rightTop'>\n              Cluster Radius Scale ({clusterRadiusScale})\n            </Tooltip>\n            <Slider\n              defaultValue={clusterRadiusScale}\n              max={10}\n              min={0.5}\n              step={0.5}\n              onAfterChange={this.updateClusterRadiusScale}\n            />\n          </li>\n          <li>\n            <Tooltip title='Strength of clustering of nodes.' placement='rightTop'>\n              Cluster Force Strength ({clusterForceStrength})\n            </Tooltip>\n            <Slider\n              defaultValue={clusterForceStrength}\n              max={1}\n              min={0}\n              step={0.01}\n              onAfterChange={this.updateClusterForceStrength}\n            />\n          </li>\n          <div\n            style={{\n              padding: 10\n            }}\n          >\n            <Button\n              type='danger'\n              onClick={() => this.props.onReset()}\n              block\n            >\n              Reset\n            </Button>\n          </div>\n        </ul>\n      </div>\n    )\n  }\n}\n\nSettings.defaultProps = {\n  settings: {\n    fps: 60,\n    cluster: true,\n    alphaStart: 1,\n    animation: true,\n    velocityDecay: 0.1,\n    chargeStrength: -100,\n    clusterRadiusScale: 2,\n    collisionStrength: 0.5,\n    collisionRadiusOffset: 15,\n    attraceForceStrength: -100\n  }\n}\n\nSettings.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onReset: PropTypes.func.isRequired,\n  settings: PropTypes.shape({\n    fps: PropTypes.number,\n    cluster: PropTypes.bool,\n    alphaStart: PropTypes.number,\n    animation: PropTypes.bool,\n    velocityDecay: PropTypes.number,\n    chargeStrength: PropTypes.number,\n    clusterRadiusScale: PropTypes.number,\n    collisionStrength: PropTypes.number,\n    collisionRadiusOffset: PropTypes.number,\n    attraceForceStrength: PropTypes.number\n  })\n}\n\nexport default Settings\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\n// import './style.css'\n\nclass Node extends Component {\n  constructor () {\n    super()\n    this.clickHandler = this.clickHandler.bind(this)\n    this.doubleClickHandler = this.doubleClickHandler.bind(this)\n    this.mouseOverHandler = this.mouseOverHandler.bind(this)\n    this.mouseOutHandler = this.mouseOutHandler.bind(this)\n    // for click vs dblclick\n    this.clickTimeout = null\n  }\n\n  clickHandler () {\n    this.props.onClick({\n      type: 'NODE',\n      data: this.props.id\n    })\n    // if (this.clickTimeout) {\n    //   clearTimeout(this.clickTimeout)\n    //   this.clickTimeout = null\n    //   this.doubleClickHandler()\n    // } else {\n    //   this.clickTimeout = setTimeout(() => {\n    //     if (this.props.onClick) {\n    //       this.props.onClick({\n    //         type: 'NODE',\n    //         data: this.props.id\n    //       })\n    //     }\n    //   }, 300)\n    // }\n  }\n\n  doubleClickHandler () {\n    if (this.props.onDoubleClick) {\n      this.props.onDoubleClick({\n        type: 'NODE',\n        data: this.props.id\n      })\n    }\n  }\n\n  mouseOverHandler (event, x) {\n    if (this.props.onMouseOver) {\n      this.props.onMouseOver({\n        type: 'NODE',\n        data: {\n          id: this.props.id,\n          text: this.props.text,\n          type: this.props.type\n        },\n        event\n      })\n    }\n  }\n\n  mouseOutHandler (event) {\n    if (this.props.onMouseOut) {\n      this.props.onMouseOut({\n        type: 'NODE',\n        data: {\n          id: this.props.id,\n          text: this.props.text,\n          type: this.props.type\n        },\n        event\n      })\n    }\n  }\n\n  render () {\n    const {\n      className,\n      radius,\n      color,\n      x,\n      y,\n      style,\n      active\n    } = this.props\n    return (\n      <g\n        className={className}\n        transform={`translate(${x},${y})`}\n        onClick={this.clickHandler}\n        style={{\n          cursor: 'pointer',\n          opacity: active ? 1 : 0.1\n        }}\n        onMouseOver={this.mouseOverHandler}\n        onMouseOut={this.mouseOutHandler}\n      >\n        <circle\n          r={radius}\n          fill={color}\n          style={style}\n        />\n        {\n          getThumbnail(this.props)\n        }\n      </g>\n    )\n  }\n}\n\nconst getThumbnail = (props) => {\n  const { id, img, radius, shortText, textStyle } = props\n  if (img) {\n    return (\n      <g>\n        <defs>\n          <clipPath\n            id={`clip_${id}`}\n          >\n            <circle\n              r={radius - 1}\n              // fill={bgColor}\n            />\n          </clipPath>\n        </defs>\n        <image\n          xlinkHref={img}\n          clipPath={`url(#clip_${id})`}\n          x={-radius}\n          y={-radius}\n          width={radius * 2}\n        />\n      </g>\n    )\n  } else {\n    return (\n      <text\n        dx={-radius / 2}\n        dy={textStyle.fontSize / 2}\n        style={textStyle}\n      >\n        {shortText}\n      </text>\n    )\n  }\n}\n\nNode.defaultProps = {\n  className: 'node',\n  radius: 35,\n  color: '#FFFFFF',\n  style: {\n    r: 35,\n    stroke: '#375E97',\n    strokeWidth: '3px'\n  },\n  textStyle: {\n    fontSize: 15,\n    fill: '#fff',\n    strokeWidth: '3px',\n    fontWeight: 'normal'\n  },\n  x: 0,\n  y: 0,\n  active: true\n}\n\nNode.propTypes = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  text: PropTypes.string,\n  shortText: PropTypes.string,\n  className: PropTypes.string,\n  img: PropTypes.string,\n  color: PropTypes.string,\n  radius: PropTypes.number,\n  style: PropTypes.shape({\n    r: PropTypes.number,\n    stroke: PropTypes.string,\n    strokeWidth: PropTypes.string\n  }),\n  textStyle: PropTypes.shape({\n    fontSize: PropTypes.number,\n    fill: PropTypes.string,\n    strokeWidth: PropTypes.string,\n    fontWeight: PropTypes.string\n  }),\n  x: PropTypes.number,\n  y: PropTypes.number,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onMouseOut: PropTypes.func,\n  onMouseOver: PropTypes.func,\n  active: PropTypes.bool\n}\n\nexport default Node\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nclass Link extends Component {\n  render () {\n    const { d, pointer, style, id, active } = this.props\n    return (\n      <g\n        style={{\n          opacity: active ? 1 : 0.1\n        }}\n      >\n        { getPointer(this.props) }\n        <path\n          id={id}\n          style={style}\n          d={d}\n          markerEnd={pointer ? `url(#${id}_pointer)` : pointer}\n        />\n        { getLabel(this.props) }\n      </g>\n    )\n  }\n}\n\nconst getPointer = (props) => {\n  if (props.pointer) {\n    return (\n      <defs>\n        <marker\n          id={`${props.id}_pointer`}\n          viewBox='0 -5 10 10'\n          refX={props.arrowOffset}\n          refY='-2'\n          markerWidth='6'\n          markerHeight='6'\n          orient='auto'\n        >\n          <path\n            d='M0,-5L10,0L0,5'\n            fill='#666'\n            style={{\n              opacity: 1\n            }} />\n        </marker>\n      </defs>\n    )\n  }\n}\n\nconst getLabel = (props) => {\n  if (props.type) {\n    return (\n      <text>\n        <textPath\n          dx={0}\n          dy={5}\n          href={`#${props.id}`}\n          startOffset='50%'\n          style={props.textStyle}\n        >\n          {props.type}\n        </textPath>\n      </text>\n    )\n  }\n}\n\nLink.defaultProps = {\n  style: {\n    strokeWidth: 1.5,\n    fill: 'none',\n    stroke: 'gba(50, 50, 50, 0.2)'\n  },\n  textStyle: {\n    pointerEvents: 'none',\n    textAnchor: 'middle',\n    fill: '#333'\n  },\n  pointer: true,\n  active: true\n}\n\nLink.propTypes = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  style: PropTypes.object,\n  textStyle: PropTypes.object,\n  d: PropTypes.string.isRequired,\n  pointer: PropTypes.bool,\n  active: PropTypes.bool\n}\n\nexport default Link\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { scaleOrdinal } from 'd3-scale'\n\nimport Node from '../Node'\nimport Link from '../Link'\n\nclass Universe extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      ...this.props\n    }\n\n    this.getArcPath = this.getArcPath.bind(this)\n    this.getLinks = this.getLinks.bind(this)\n  }\n\n  componentWillReceiveProps (nextProps) {\n    this.setState({ ...nextProps })\n  }\n\n  getLinks (source, target) {\n    return this.state.links\n      .filter(\n        link =>\n          link.source.id === source.id &&\n          link.target.id === target.id\n      )\n      .map(l => l.type)\n  }\n\n  getArcPath (link, clockwise = true) {\n    const x1 = clockwise ? link.source.x : link.target.x\n    const y1 = clockwise ? link.source.y : link.target.y\n    const x2 = clockwise ? link.target.x : link.source.x\n    const y2 = clockwise ? link.target.y : link.source.y\n    const dx = x2 - x1\n    const dy = y2 - y1\n    const siblings = this.getLinks(link.source, link.target)\n    // const siblingCount = siblings.length\n    const siblingCount = 2\n    const xRotation = 0\n    const largeArc = 0\n\n    if (siblingCount > 1) {\n      // console.log(siblings)\n      const arcScale = scaleOrdinal()\n        .domain(siblings)\n        .range([1, siblingCount])\n      const linkIdx = arcScale(link.type)\n      let scale\n      let sweep\n      if (linkIdx === 1) {\n        sweep = 1\n        scale = 1\n        // return `M${link.source.x},${link.source.y} L${link.target.x},${link.target.y}`\n      } else if (linkIdx % 2 === 0) {\n        sweep = 0\n        scale = linkIdx / 2\n      } else if (linkIdx % 3 === 0) {\n        sweep = 1\n        scale = linkIdx / 3 + 1\n      }\n      const dr =\n        Math.sqrt(dx * dx + dy * dy) / (1 + (1 / siblingCount) * (scale - 1))\n      return `M${x1},${y1}A${dr * 1.7},${dr *\n        1.7} ${xRotation}, ${largeArc}, ${sweep} ${x2},${y2}`\n    }\n    return `M${link.source.x},${link.source.y} L${link.target.x},${link.target.y}`\n  }\n\n  render () {\n    const { nodes, links } = this.state\n    return (\n      <g\n        className={this.props.className}\n        transform={this.props.transform}\n      >\n        <g className='links'>\n          {\n            links.reduce((acc, link, idx) => {\n              if (typeof link.source === 'object' && typeof link.target === 'object') {\n                acc.push(\n                  <Link\n                    key={idx}\n                    d={this.getArcPath(link)}\n                    style={link.style}\n                    id={link.id}\n                    type={link.type}\n                    arrowOffset={link.target.radius * 1.45}\n                    active={link.active}\n                  />\n                )\n                return acc\n              }\n              return acc\n            }, [])\n          }\n        </g>\n        <g className='nodes'>\n          {\n            nodes.map((node, idx) =>\n              <Node\n                key={idx}\n                onClick={this.props.onClick}\n                onDoubleClick={this.props.onDoubleClick}\n                onMouseOver={this.props.onMouseOver}\n                onMouseOut={this.props.onMouseOut}\n                {...node}\n              />\n            )\n          }\n        </g>\n      </g>\n    )\n  }\n}\n\nUniverse.defaultProps = {\n  className: 'universe',\n  nodes: [],\n  links: []\n}\n\nUniverse.propTypes = {\n  className: PropTypes.string,\n  nodes: PropTypes.array,\n  links: PropTypes.array,\n  onMouseOver: PropTypes.func,\n  onMouseOut: PropTypes.func\n}\n\nexport default Universe\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport memoize from 'memoize-one'\nimport { select, event } from 'd3-selection'\nimport {\n  forceLink,\n  forceSimulation,\n  forceCenter,\n  forceManyBody,\n  forceCollide\n} from 'd3-force'\nimport { zoom } from 'd3-zoom'\nimport uniqBy from 'lodash.uniqby'\n\nimport Universe from './components/Universe'\n\nimport './style.css'\n\nclass NetworkGraph extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      nodes: [],\n      links: [],\n      selectedNode: null,\n      activeNodes: [],\n      simulation: this.initSimulation(),\n      width: 100,\n      height: 100,\n      transform: {\n        x: 0,\n        y: 0,\n        k: 1\n      },\n      tooltip: {\n        text: '',\n        style: {\n          opacity: 0,\n          top: 0,\n          left: 0\n        }\n      }\n    }\n    this.initSimulation = this.initSimulation.bind(this)\n    this.initZoomHandler = this.initZoomHandler.bind(this)\n    this.updateData = this.updateData.bind(this)\n    this.updateSimulation = this.updateSimulation.bind(this)\n    this.onTick = this.onTick.bind(this)\n    this.svg = React.createRef()\n    this.nodes = []\n    this.links = []\n\n    // to timit fps\n    this.interval = (1000 / this.props.fps)\n    this.millis = Date.now()\n\n    // mouseevents\n    this.mouseOverHandler = this.mouseOverHandler.bind(this)\n    this.mouseOutHandler = this.mouseOutHandler.bind(this)\n    this.clickHandler = this.clickHandler.bind(this)\n\n    // graph functions\n    this.getNeighborNodes = this.getNeighborNodes.bind(this)\n  }\n\n  componentDidMount () {\n    this.initZoomHandler()\n    this.setState({\n      width: this.svg.current.clientWidth,\n      height: this.svg.current.clientHeight\n    }, () => {\n      const updates = diff(this.nodes, this.props.nodes)\n      this.updateData(updates)\n      this.updateSimulation()\n    })\n  }\n\n  componentDidUpdate (prevProps) {\n    this.interval = (1000 / this.props.fps)\n    // should update data?\n    const updates = diff(prevProps.nodes, this.props.nodes)\n    if (updates.added.length > 0 || updates.removed.length > 0) {\n      this.updateData(updates)\n      this.updateSimulation()\n    }\n\n    // should update simulation?\n    if (\n      JSON.stringify({\n        ...prevProps,\n        nodes: null,\n        links: null,\n        children: null\n      }) !==\n      JSON.stringify({\n        ...this.props,\n        nodes: null,\n        links: null,\n        children: null\n      })\n    ) {\n      this.updateSimulation()\n    }\n  }\n\n  initSimulation () {\n    const linkForce = forceLink()\n      .id(link => link.id)\n      .strength(link => link.strength)\n      .distance(link => link.distance)\n    const simulation = forceSimulation().force('link', linkForce)\n\n    return simulation\n  }\n\n  initZoomHandler () {\n    // TODO: replace select dependency\n    // add zoom capabilities\n    const svg = select('.svgGraph')\n    const zoomHandler = zoom().on('zoom', () => {\n      this.setState({\n        transform: event.transform\n      })\n    })\n    svg.call(zoomHandler).on('dblclick.zoom', null)\n  }\n\n  updateData (diff) {\n    const { links } = this.props\n    this.links = []\n\n    // remove nodes\n    diff.removed.forEach(node => {\n      this.nodes = this.nodes.filter(\n        n => !(n.id === node.id && n.type === node.type)\n      )\n      // context.nodes.splice(context.nodes.indexOf(node))\n    })\n    // add new nodes\n    diff.added.forEach(node => this.nodes.push(node))\n\n    // bind nodes to links\n    links.forEach(link => {\n      const sourceNode = this.nodes.filter(\n        node => node.id === link.source\n      )[0]\n      const targetNode = this.nodes.filter(\n        node => node.id === link.target\n      )[0]\n      if (sourceNode && targetNode) {\n        this.links.push({\n          ...link,\n          source: sourceNode,\n          target: targetNode\n        })\n      }\n    })\n  }\n\n  updateSimulation () {\n    const {\n      attraceForceStrength,\n      chargeStrength,\n      collisionRadiusOffset,\n      collisionStrength,\n      animation,\n      velocityDecay,\n      alphaStart,\n      cluster,\n      clusterRadiusScale,\n      clusterForceStrength\n    } = this.props\n    const { simulation, height, width } = this.state\n\n    simulation\n      .nodes(this.nodes)\n      .on('tick', this.onTick)\n    simulation.force('link').links(this.links)\n    simulation\n      .force('center', forceCenter(width / 2, height / 2))\n      .force('attraceForce', forceManyBody().strength(attraceForceStrength))\n      .force('charge', forceManyBody().strength(chargeStrength))\n      .force(\n        'collision',\n        forceCollide()\n          .radius(node => node.radius + collisionRadiusOffset)\n          .strength(collisionStrength)\n      )\n\n    // Enable clustering of nodes of same type\n    if (cluster) {\n      const clusters = {}\n      const nodeTypes = uniqBy(this.nodes, 'type').map(type => type.type)\n\n      nodeTypes.forEach((type, idx, arr) => {\n        if (!clusters[type]) {\n          const radius = width > height ? height * clusterRadiusScale : width * clusterRadiusScale\n          clusters[type] = {\n            x: Math.cos((idx + 1) / arr.length * 2 * Math.PI) * radius + width / 2 + Math.random(),\n            y: Math.sin((idx + 1) / arr.length * 2 * Math.PI) * radius + height / 2 + Math.random(),\n            radius\n          }\n        }\n      })\n\n      simulation.force('cluster', alpha =>\n        applyClusterForce(alpha, this.nodes, clusters, clusterForceStrength)\n      )\n    } else {\n      simulation.force('cluster', null)\n    }\n\n    simulation\n      .alpha(alphaStart)\n      .alphaTarget(0)\n      .velocityDecay(velocityDecay)\n      .restart()\n\n    if (!animation) {\n      while (simulation.alpha() >= 0.02) {\n        simulation.tick()\n      }\n    }\n  }\n\n  onTick (e) {\n    // limit rendering\n    const currentTime = Date.now()\n    if (currentTime - this.millis > this.interval) {\n      this.millis = currentTime\n      this.setState({\n        nodes: this.nodes,\n        links: this.links\n      })\n    }\n  }\n\n  mouseOutHandler () {\n    this.setState({\n      tooltip: {\n        style: {\n          opacity: 0\n        }\n      }\n    })\n  }\n\n  mouseOverHandler (payload) {\n    const { event, type, data } = payload\n    let text = ''\n    if (type === 'NODE') {\n      text = `[${data.type}] ${data.text}`\n    } else if (type === 'LINK') {\n      text = `${data.type}`\n    }\n    this.setState({\n      tooltip: {\n        text,\n        style: {\n          opacity: 1,\n          top: event.clientY + 15,\n          left: event.clientX + 15\n        }\n      }\n    })\n  }\n\n  clickHandler (event) {\n    if (this.state.selectedNode === event.data) {\n      this.setState({\n        selectedNode: null,\n        activeNodes: []\n      })\n    } else {\n      this.setState({\n        selectedNode: event.data,\n        activeNodes: this.getNeighborNodes(event.data)\n      })\n    }\n  }\n\n  getNeighborNodes (node) {\n    return this.links.reduce(\n      (neighbors, link) => {\n        if (link.target.id === node) {\n          neighbors.push(link.source.id)\n        } else if (link.source.id === node) {\n          neighbors.push(link.target.id)\n        }\n        return neighbors\n      },\n      []\n    )\n  }\n\n  render () {\n    const { transform, tooltip, selectedNode, activeNodes } = this.state\n\n    // determine opacity of node / link based on if its selected or not\n    const nodes = this.state.nodes.map(node => ({\n      ...node,\n      active: selectedNode === null || node.id === selectedNode || activeNodes.indexOf(node.id) > -1\n    }))\n\n    const links = this.state.links.map(link => ({\n      ...link,\n      active:\n        selectedNode === null ||\n        link.source.id === selectedNode ||\n        link.target.id === selectedNode\n    }))\n\n    return (\n      <div\n        className='networkGraph'\n        style={{\n          width: '100%',\n          height: '100%'\n        }}\n      >\n        {this.props.children}\n        <svg\n          className='svgGraph'\n          width='100%'\n          height='100%'\n          ref={this.svg}\n        >\n          <Universe\n            nodes={nodes}\n            links={links}\n            transform={\n              `translate(${transform.x},${transform.y}) scale(${transform.k})`\n            }\n            onClick={this.clickHandler}\n            onDoubleClick={this.props.onDoubleClick}\n            onMouseOver={this.mouseOverHandler}\n            onMouseOut={this.mouseOutHandler}\n          />\n        </svg>\n        {/* <span className='zoomIndicator'>{parseInt(transform.k * 100, 10)} %</span> */}\n        <span\n          className='networkGrapTooltip'\n          style={tooltip.style}\n        >\n          {tooltip.text}\n        </span>\n      </div>\n    )\n  }\n}\n\n// node cluster handler\nconst applyClusterForce = (alpha, nodes, clusters, strength) => {\n  nodes.forEach(node => {\n    const cluster = clusters[node.type]\n    if (cluster.x !== node.x && cluster.y !== node.y) {\n      const k = alpha * strength\n      node.vx -= (node.x - cluster.x) * k\n      node.vy -= (node.y - cluster.y) * k\n    }\n  })\n}\n\nconst containsNode = memoize((node, nodes) =>\n  nodes.reduce((acc, n) => {\n    if (n.id === node.id) {\n      acc.push(n)\n    }\n    return acc\n  }, []).length > 0\n    ? 1\n    : 0\n)\n\nconst diff = memoize((prevNodes, newNodes) => ({\n  removed: prevNodes.filter(node => containsNode(node, newNodes) === 0),\n  added: newNodes.filter(node => containsNode(node, prevNodes) === 0)\n}))\n\nNetworkGraph.defaultProps = {\n  nodes: [],\n  links: [],\n  attraceForceStrength: 10,\n  chargeStrength: -10,\n  collisionRadiusOffset: 15,\n  collisionStrength: 0.5,\n  animation: true,\n  cluster: false,\n  fps: 60,\n  alphaStart: 1,\n  velocityDecay: 0.4,\n  clusterRadiusScale: 2,\n  clusterForceStrength: 0.3\n}\n\nNetworkGraph.propTypes = {\n  nodes: PropTypes.array,\n  links: PropTypes.array,\n  attraceForceStrength: PropTypes.number,\n  chargeStrength: PropTypes.number,\n  collisionRadiusOffset: PropTypes.number,\n  collisionStrength: PropTypes.number,\n  animation: PropTypes.bool,\n  fps: PropTypes.number,\n  alphaStart: PropTypes.number,\n  velocityDecay: PropTypes.number,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  cluster: PropTypes.bool,\n  clusterRadiusScale: PropTypes.number,\n  clusterForceStrength: PropTypes.number\n}\n\nexport default NetworkGraph\n","const minifyString = text => {\n  return text.split(' ').slice(0, 3).map(word => word.charAt(0).toUpperCase()).join('')\n}\n\nexport function getGraphData (userData, shelves) {\n  let books = []\n  let bookNodes = {}\n  let authorNodes = {}\n  let publisherNodes = {}\n  let nodes = []\n  let links = []\n\n  const bookShelves = userData.user_shelves\n\n  // nodes.push({\n  //   text: userData.name,\n  //   id: userData.id,\n  //   img: userData.image_url,\n  //   type: 'USER',\n  //   color: '#336B87',\n  //   radius: 55,\n  //   style: {\n  //     r: 55,\n  //     stroke: '#375E97',\n  //     strokeWidth: '3px'\n  //   }\n  // })\n\n  bookShelves.forEach(shelf => {\n    if (shelves.indexOf(shelf.name) > -1) {\n      if (shelf.books.book) {\n        const tmpList = shelf.books.book.length ? shelf.books.book : [ shelf.books.book ]\n        tmpList.forEach(book => {\n          books.push(\n            {\n              ...book,\n              property: {\n                shelf: shelf.name\n              }\n            }\n          )\n        })\n      }\n    }\n  })\n\n  books.forEach(book => {\n    const { author } = book.authors\n\n    if (!bookNodes[book.id.$t]) {\n      // Create Book Nodes\n      bookNodes[book.id.$t] = {\n        id: book.id.$t,\n        text: book.title,\n        type: 'BOOK',\n        img: book.image_url,\n        color: '#336B87',\n        radius: 35,\n        style: {\n          r: 35,\n          stroke: '#375E97',\n          strokeWidth: '3px'\n        }\n      }\n      // Create Author Nodes\n      if (!authorNodes[author.id]) {\n        authorNodes[author.id] = {\n          id: author.id,\n          text: author.name,\n          type: 'AUTHOR',\n          img: author.image_url.$t,\n          color: '#FB6542',\n          radius: 35,\n          style: {\n            r: 35,\n            stroke: '#FB6542',\n            strokeWidth: '3px'\n          }\n        }\n      }\n      // Create Publisher Nodes\n      if (!publisherNodes[book.publisher]) {\n        publisherNodes[book.publisher] = {\n          id: typeof book.publisher === 'string' ? book.publisher : 'Self Published',\n          text: typeof book.publisher === 'string' ? book.publisher : 'Self Published',\n          type: 'PUBLISHER',\n          color: '#DDA487',\n          radius: 35,\n          style: {\n            r: 35,\n            stroke: '#7D4427',\n            strokeWidth: '3px'\n          }\n        }\n      }\n      // Create Authoer --> Book relationship\n      links.push({\n        source: author.id,\n        sourceType: 'AUTHOR',\n        target: book.id.$t,\n        targetType: 'BOOK',\n        type: 'AUTHOR_OF',\n        property: {\n          publicationYear: book.publication_year,\n          publicationMonth: book.publication_month,\n          publicationDay: book.publication_day\n        }\n      })\n      // Create Book --> Publisher relationship\n      links.push({\n        source: book.id.$t,\n        sourceType: 'BOOK',\n        target: typeof book.publisher === 'string' ? book.publisher : 'Self Published',\n        targetType: 'PUBLISHER',\n        type: 'PUBLISHED_BY',\n        property: {\n          publicationYear: book.publication_year,\n          publicationMonth: book.publication_month,\n          publicationDay: book.publication_day\n        }\n      })\n\n      // Create Author --> Publisher relationship\n      links.push({\n        source: author.id,\n        sourceType: 'AUTHOR',\n        target: book.publisher,\n        targetType: 'PUBLISHER',\n        type: 'WORKS_WITH',\n        property: {\n          publicationYear: book.publication_year,\n          publicationMonth: book.publication_month,\n          publicationDay: book.publication_day\n        }\n      })\n    }\n  })\n\n  // Collect all nodes\n  nodes = Object.values(bookNodes)\n    .concat(Object.values(authorNodes))\n    .concat(Object.values(publisherNodes))\n    .map((node, idx) => ({\n      ...node,\n      shortText: minifyString(node.text),\n      textStyle: {\n        fontSize: 15,\n        fill: '#fff',\n        strokeWidth: '2px',\n        fontWeight: 'normal'\n      }\n    }))\n\n  return {\n    nodes,\n    links: links.map(link => ({\n      ...link,\n      strength: 0.5,\n      distance: 350,\n      id: `${link.source}-${link.type}-${link.target}`,\n      style: {\n        strokeWidth: 1.5,\n        fill: 'none',\n        stroke: 'rgba(50, 50, 50, 0.2)'\n      }\n    }))\n  }\n}\n","import React, { Component } from 'react'\n\nimport { Button, Popover } from 'antd'\n\nimport Settings from '../../components/Settings'\nimport NetworkGraph from '../../components/NetworkGraph'\nimport MultiCheckBox from '../../components/MultiCheckBox'\n\nimport { getGraphData } from '../../utils/graphHelper'\n\nimport './style.css'\n\nconst defaultGraphSettings = {\n  fps: 60,\n  cluster: true,\n  alphaStart: 1,\n  animation: true,\n  velocityDecay: 0.1,\n  chargeStrength: -100,\n  collisionStrength: 0.5,\n  collisionRadiusOffset: 15,\n  attraceForceStrength: -100,\n  clusterRadiusScale: 2,\n  clusterForceStrength: 0.3\n}\n\nclass RelationshipGraph extends Component {\n  constructor (props) {\n    super(props)\n\n    // get graph settings from localstorage\n    const settings = window.localStorage.getItem('graphSettings')\n\n    this.state = {\n      graphSettings: settings ? JSON.parse(settings) : defaultGraphSettings,\n      settingsPopover: false,\n      shelvesSelectPopover: false,\n      nodes: [],\n      links: [],\n      shelves: [],\n      selectedShelves: []\n    }\n\n    this.hideSettings = this.hideSettings.bind(this)\n    this.handleSettingsChange = this.handleSettingsChange.bind(this)\n    this.handleSettingsReset = this.handleSettingsReset.bind(this)\n    this.handleSettingsVisibleChange = this.handleSettingsVisibleChange.bind(this)\n\n    this.hideShelvesSelect = this.hideShelvesSelect.bind(this)\n    this.handleShelvesChange = this.handleShelvesChange.bind(this)\n    this.handleShelvesSelectVisibleChange = this.handleShelvesSelectVisibleChange.bind(this)\n  }\n\n  componentDidMount () {\n    const shelves = this.props.userData.user_shelves.map(shelf => {\n      if (shelf.books.book) {\n        return {\n          name: shelf.name,\n          bookCount: shelf.books.book.length ? shelf.books.book.length : 1\n        }\n      }\n      return {\n        name: shelf.name,\n        bookCount: 0\n      }\n    })\n    const selectedShelves = shelves.length > 0 ? [shelves[0].name] : []\n    const { nodes, links } = getGraphData(this.props.userData, selectedShelves)\n    this.setState({\n      nodes,\n      links,\n      shelves,\n      selectedShelves\n    })\n  }\n\n  handleSettingsVisibleChange (visible) {\n    this.setState({ settingsPopover: visible })\n  }\n\n  hideSettings () {\n    this.setState({ settingsPopover: false })\n  }\n\n  handleSettingsChange (settings) {\n    this.setState({\n      graphSettings: settings\n    })\n    // Store settings on local storage\n    window.localStorage.setItem('graphSettings', JSON.stringify(settings))\n  }\n\n  handleSettingsReset () {\n    this.setState({\n      graphSettings: defaultGraphSettings\n    })\n\n    // clear settings on local storage\n    window.localStorage.removeItem('graphSettings')\n    window.location.reload()\n  }\n\n  hideShelvesSelect () {\n    this.setState({ shelvesSelectPopover: false })\n  }\n\n  handleShelvesSelectVisibleChange (visible) {\n    this.setState({ shelvesSelectPopover: visible })\n  }\n\n  handleShelvesChange (selectedShelves) {\n    const { nodes, links } = getGraphData(this.props.userData, selectedShelves)\n    this.setState({\n      nodes,\n      links,\n      selectedShelves\n    })\n  }\n\n  render () {\n    const {\n      nodes,\n      links,\n      graphSettings,\n      settingsPopover,\n      shelvesSelectPopover,\n      shelves,\n      selectedShelves\n    } = this.state\n    return (\n      <div\n        className='relationshipGraph'\n      >\n        <NetworkGraph\n          nodes={nodes}\n          links={links}\n          {...graphSettings}\n        >\n          <Popover\n            content={\n              <Settings\n                onChange={this.handleSettingsChange}\n                onReset={this.handleSettingsReset}\n                settings={graphSettings}\n                className='graphPopover'\n              />\n            }\n            title='Settings'\n            trigger='click'\n            visible={settingsPopover}\n            onVisibleChange={this.handleSettingsVisibleChange}\n            placement='bottomLeft'\n            // className='settings-popover'\n          >\n            <Button\n              icon='setting'\n              style={{\n                position: 'fixed',\n                top: 20,\n                right: 20\n              }}\n            />\n          </Popover>\n          <Popover\n            content={\n              <MultiCheckBox\n                onChange={this.handleShelvesChange}\n                options={shelves.map(shelf => shelf.name)}\n                defaultCheckedList={selectedShelves}\n                optionLabel={shelves.map(shelf => `${shelf.name} (${shelf.bookCount})`)}\n                disable={shelves.map(shelf => shelf.bookCount === 0)}\n                className='graphPopover'\n              />\n            }\n            title={`Shelves (${shelves.length})`}\n            trigger='click'\n            visible={shelvesSelectPopover}\n            onVisibleChange={this.handleShelvesSelectVisibleChange}\n            placement='bottomLeft'\n          >\n            <Button\n              icon='check-square'\n              style={{\n                position: 'fixed',\n                top: 20,\n                right: 60\n              }}\n            >\n              Select Shelves\n            </Button>\n          </Popover>\n        </NetworkGraph>\n      </div>\n    )\n  }\n}\n\nexport default RelationshipGraph\n"],"sourceRoot":""}