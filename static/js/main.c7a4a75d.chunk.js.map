{"version":3,"sources":["containers/App/reducer.js","containers/Dashboard/reducer.js","reducers.js","containers/App/saga.js","utils/urls.js","utils/apiHelper.js","utils/goodreads.js","containers/Dashboard/saga.js","sagas.js","configureStore.js","containers/App/index.jsx","serviceWorker.js","index.js","containers/Dashboard/action.js","components/Fallback/index.jsx","utils/constants.js"],"names":["initialState","isLoading","error","app","state","arguments","length","undefined","action","type","ActionTypes","Object","objectSpread","err","title","name","message","userId","userInfo","userData","dashboard","user","rootReducer","combineReducers","helloWorld","regenerator_default","a","wrap","_context","prev","next","put","stop","_marked","saga","takeEvery","grApiRoot","wrapByLoader","getGetParams","method","headers","Content-Type","handleResponse","response","status","code","statusText","Promise","reject","json","then","fetchApi","url","params","fetch","catch","fn","apiHelper_marked","getUserInfo","concat","getBooksOnShelf","shelf","Dashboard_saga","takeLatest","mark","_callee","call","Goodreads","sent","Actions","t0","_callee2","cachedData","shelves","bookOnShelves","_context2","JSON","parse","window","localStorage","getItem","Date","now","timestamp","data","user_shelves","user_shelf","map","all","idx","books","book","setItem","stringify","rootSaga","toConsumableArray","appSaga","dashboardSaga","sagas_marked","sagaMiddleware","createSagaMiddleware","Dashboard","lazy","__webpack_require__","e","bind","Home","ErrorBoundary","ErrorHandler","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","searchHandler","assertThisInitialized","ReactGA","initialize","testMode","pageview","location","pathname","search","history","push","_this2","react_default","createElement","react","fallback","Fallback","spin","className","spinning","delay","Switch","Route","exact","path","render","Redirect","to","Component","defaultProps","withRouter","connect","Boolean","hostname","match","store","middlewares","enhancers","applyMiddleware","apply","composeEnhancers","compose","createStore","runSaga","run","injectedReducers","injectedSagas","configureStore","ReactDOM","es","BrowserRouter","containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","d","__webpack_exports__","errorOccured","getUserInfoSuccess","getUserData","getUserDataSuccess","userAccountIsPrivate","networkErrorOccured","_utils_constants__WEBPACK_IMPORTED_MODULE_0__","ERROR_OCCURED","FETCH_USER_INFO","FETCH_USER_INFO_SUCCESS","FETCH_USER_DATA","FETCH_USER_DATA_SUCCESS","PRIVATE_ACCOUNT_ERROR","NETWORK_ERROR_OCCURED","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","FallBack","HELLO_WORLD","FETCH_START","FETCH_END"],"mappings":"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","file":"static/js/main.c7a4a75d.chunk.js","sourcesContent":["import * as ActionTypes from '../../utils/constants'\n\nconst initialState = {\n  isLoading: 0,\n  error: null\n}\n\nconst app = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case ActionTypes.FETCH_START: {\n      return { ...state, isLoading: state.isLoading + 1 }\n    }\n    case ActionTypes.FETCH_END: {\n      return { ...state, isLoading: state.isLoading - 1 }\n    }\n    case ActionTypes.ERROR_OCCURED: {\n      const { err } = action\n      return {\n        ...state,\n        error: {\n          title: err.name,\n          message: err.message\n        }\n      }\n    }\n    case ActionTypes.NETWORK_ERROR_OCCURED: {\n      const { err } = action\n      return { ...state, error: err }\n    }\n    case ActionTypes.PRIVATE_ACCOUNT_ERROR: {\n      const { err } = action\n      return { ...state, error: err }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport default app\n","import * as ActionTypes from '../../utils/constants'\n\nconst initialState = {\n  userId: null,\n  userInfo: null,\n  userData: null\n}\n\nconst dashboard = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case ActionTypes.FETCH_USER_INFO: {\n      const { userId } = action\n      return { ...state, userId }\n    }\n    case ActionTypes.FETCH_USER_INFO_SUCCESS: {\n      const { userInfo } = action\n      return { ...state, userInfo: userInfo.user }\n    }\n    case ActionTypes.FETCH_USER_DATA: {\n      const { userId } = action\n      return { ...state, userId }\n    }\n    case ActionTypes.FETCH_USER_DATA_SUCCESS: {\n      const { userData } = action\n      return { ...state, userData: userData.user }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport default dashboard\n","import { combineReducers } from 'redux'\nimport app from './containers/App/reducer'\nimport dashboard from './containers/Dashboard/reducer'\n\nconst rootReducer = combineReducers({ app, dashboard })\n\nexport default rootReducer\n","import { takeEvery, put } from 'redux-saga/effects'\nimport * as ActionTypes from '../../utils/constants'\n\nfunction * helloWorld () {\n  yield put({ type: 'SUCCESS', message: 'Hello World' })\n}\n\nexport default [\n  takeEvery(ActionTypes.HELLO_WORLD, helloWorld)\n]\n","export const grApiRoot = 'https://uqh87q11i5.execute-api.us-east-1.amazonaws.com/prod'\n","/* global fetch */\nimport { put } from 'redux-saga/effects'\nimport * as ActionTypes from './constants'\n\nexport const getGetParams = () => ({\n  method: 'GET',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n})\n\nexport const handleResponse = (response) => {\n  if (response.status !== 200) {\n    const error = {\n      error: {\n        code: response.status,\n        message: 'Fetch error'\n      },\n      status: response.status,\n      statusText: response.statusText\n    }\n    return Promise.reject(error)\n  }\n  return response.json().then(json => json)\n}\n\nexport const fetchApi = (url, params) =>\n  fetch(url)\n    .then(handleResponse)\n    .catch(err => err)\n\nexport function * wrapByLoader (fn) {\n  yield put({ type: ActionTypes.FETCH_START })\n  yield fn()\n  yield put({ type: ActionTypes.FETCH_END })\n}\n","import { grApiRoot } from './urls'\nimport { getGetParams, fetchApi } from './apiHelper'\n\nexport function getUserInfo (userId) {\n  const url = `${grApiRoot}/user/show?id=${userId}`\n  return fetchApi(url, getGetParams())\n}\n\nexport function getBooksOnShelf (userId, shelf) {\n  const url = `${grApiRoot}/review/list?id=${userId}&shelf=${shelf}&per_page=200`\n  return fetchApi(url, getGetParams())\n}\n","import { takeLatest, put, call, all } from 'redux-saga/effects'\nimport * as ActionTypes from '../../utils/constants'\nimport * as Actions from './action'\nimport * as Goodreads from '../../utils/goodreads'\nimport { wrapByLoader } from '../../utils/apiHelper'\n\nconst getUserInfo = action =>\n  wrapByLoader(function * () {\n    try {\n      const response = yield call(Goodreads.getUserInfo, action.userId)\n      if (!response.error) {\n        const userInfo = response\n        yield put(Actions.getUserInfoSuccess(userInfo))\n      } else {\n        yield put(Actions.errorOccured(response))\n      }\n    } catch (err) {\n      yield put(Actions.errorOccured(err))\n    }\n  })\n\nconst getUserData = action =>\n  wrapByLoader(function * () {\n    try {\n      const cachedData = JSON.parse(window.localStorage.getItem(action.userId))\n\n      if (cachedData && ((Date.now() - cachedData.timestamp) < 3600000)) {\n        yield put(Actions.getUserDataSuccess(cachedData.data))\n      } else {\n        const response = yield call(Goodreads.getUserInfo, action.userId)\n        if (response.user && !response.error) {\n          const userData = response\n          if (userData.user.user_shelves) {\n            const shelves = userData.user.user_shelves.user_shelf.map(shelf => shelf.name)\n            const bookOnShelves = yield all(\n              shelves.map(\n                shelf => call(Goodreads.getBooksOnShelf, action.userId, shelf)\n              )\n            )\n            userData.user.user_shelves = bookOnShelves.map((shelf, idx) => ({\n              name: shelves[idx],\n              books: shelf.books ? shelf.books : { book: [] }\n            }))\n            window.localStorage.setItem(\n              action.userId,\n              JSON.stringify({\n                data: userData,\n                timestamp: Date.now()\n              })\n            )\n            yield put(Actions.getUserDataSuccess(userData))\n          } else {\n            yield put(Actions.userAccountIsPrivate({\n              title: 'Private Account',\n              message: `Sorry ${userData.user.name}, your account is private. Can't fetch your data.`\n            }))\n            yield put(Actions.getUserDataSuccess({\n              user: {\n                ...userData.user,\n                user_shelves: []\n              }\n            }))\n          }\n        } else {\n          yield put(Actions.networkErrorOccured({\n            title: 'Network Error',\n            message: response.message\n          }))\n        }\n      }\n    } catch (err) {\n      yield put(Actions.errorOccured(err))\n    }\n  })\n\nexport default [\n  takeLatest(ActionTypes.FETCH_USER_INFO, getUserInfo),\n  takeLatest(ActionTypes.FETCH_USER_DATA, getUserData)\n]\n","import { all } from 'redux-saga/effects'\nimport appSaga from './containers/App/saga'\nimport dashboardSaga from './containers/Dashboard/saga'\n\nfunction * rootSaga () {\n  yield all([\n    ...appSaga,\n    ...dashboardSaga\n  ])\n}\n\nexport default rootSaga\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport rootReducer from './reducers'\nimport rootSaga from './sagas'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nexport default function configureStore (initialState = {}) {\n  const middlewares = [sagaMiddleware]\n\n  const enhancers = [\n    applyMiddleware(...middlewares)\n  ]\n\n  // If Redux DevTools Extension is installed use it, otherwise use Redux compose\n  /* eslint-disable no-underscore-dangle */\n  const composeEnhancers =\n  process.env.NODE_ENV !== 'production' &&\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : compose\n  /* eslint-enable */\n\n  const store = createStore(\n    rootReducer,\n    // fromJS(initialState),\n    initialState,\n    composeEnhancers(...enhancers)\n  )\n\n  // Extensions\n  store.runSaga = sagaMiddleware.run(rootSaga)\n  store.injectedReducers = {} // Reducer registry\n  store.injectedSagas = {} // Saga registry\n\n  // if(module.hot) {\n  //   // Enable Webpack hot module replacement for reducers\n  //   module.hot.accept('../reducers', () => {\n  //     const nextReducer = require('../reducers').default\n  //     store.replaceReducer(nextReducer)\n  //   })\n  // }\n\n  return store\n}\n","import React, { Component, Suspense, lazy } from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  withRouter,\n  Route,\n  Switch,\n  Redirect\n} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport ReactGA from 'react-ga'\nimport Fallback from '../../components/Fallback'\n\n// antd components\nimport { Spin } from 'antd'\n\nimport 'antd/dist/antd.css'\nimport './style.css'\n\n// containers\nconst Dashboard = lazy(() => import('../Dashboard'))\nconst Home = lazy(() => import('../Home'))\nconst ErrorBoundary = lazy(() => import('../../components/ErrorBoundary'))\nconst ErrorHandler = lazy(() => import('../../components/ErrorHandler'))\n\nconst mapStateToProps = state => ({\n  isLoading: state.app.isLoading,\n  error: state.app.error\n})\n\nconst mapDispatchToProps = {\n\n}\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n\n    this.searchHandler = this.searchHandler.bind(this)\n\n    // Google analytics\n    ReactGA.initialize('UA-132487735-1', { testMode: this.props.testMode })\n    ReactGA.pageview(window.location.pathname + window.location.search)\n  }\n\n  searchHandler (userId) {\n    this.props.history.push(`/user/${userId}/graph/rgraph`)\n  }\n\n  componentDidMount () {\n    // Maybe get top books from goodreads?\n  }\n\n  render () {\n    return (\n      <Suspense fallback={<Fallback />} >\n        <ErrorBoundary>\n          <Spin\n            className='App'\n            spinning={this.props.isLoading > 0}\n            delay={500}\n          >\n            <Switch>\n              <Route\n                exact\n                path='/'\n                render={props => (\n                  <Suspense fallback={<Fallback />} >\n                    <Home\n                      searchHandler={this.searchHandler}\n                    />\n                  </Suspense>\n                )}\n              />\n              <Route\n                path='/user/:userId'\n                render={props => (\n                  <Suspense fallback={<Fallback />} >\n                    <Dashboard {...props} />\n                  </Suspense>\n                )}\n              />\n              <Redirect to='/' />\n            </Switch>\n            {\n              this.props.error && (\n                <ErrorHandler error={this.props.error} />\n              )\n            }\n          </Spin>\n        </ErrorBoundary>\n      </Suspense>\n    )\n  }\n}\n\nApp.defaultProps = {\n  testMode: false\n}\n\nApp.propTypes = {\n  testMode: PropTypes.bool\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(App)\n)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport configureStore from './configureStore'\nimport App from './containers/App'\nimport * as serviceWorker from './serviceWorker'\n\nimport './style.css'\n\nconst store = configureStore()\n\nReactDOM.render(<Provider store={store}><Router><App /></Router></Provider>,\n  document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import {\n  FETCH_USER_INFO,\n  FETCH_USER_INFO_SUCCESS,\n  FETCH_USER_DATA,\n  FETCH_USER_DATA_SUCCESS,\n  ERROR_OCCURED,\n  PRIVATE_ACCOUNT_ERROR,\n  NETWORK_ERROR_OCCURED\n} from '../../utils/constants'\n\nexport const errorOccured = err => ({\n  type: ERROR_OCCURED,\n  err\n})\n\nexport const getUserInfo = userId => ({\n  type: FETCH_USER_INFO,\n  userId\n})\n\nexport const getUserInfoSuccess = userInfo => ({\n  type: FETCH_USER_INFO_SUCCESS,\n  userInfo\n})\n\nexport const getUserData = userId => ({\n  type: FETCH_USER_DATA,\n  userId\n})\n\nexport const getUserDataSuccess = userData => ({\n  type: FETCH_USER_DATA_SUCCESS,\n  userData\n})\n\nexport const userAccountIsPrivate = err => ({\n  type: PRIVATE_ACCOUNT_ERROR,\n  err\n})\n\nexport const networkErrorOccured = err => ({\n  type: NETWORK_ERROR_OCCURED,\n  err\n})\n","import React from 'react'\n// import { Spin } from 'antd'\n\nimport './style.css'\n\n// const FallBack = () => (\n//   <Spin\n//     className='App'\n//     spinning\n//     delay={1}\n//     size='large'\n//   />\n// )\n\nconst FallBack = () => <div className='suspenseFallback'>Loading...</div>\n\nexport default FallBack\n","export const HELLO_WORLD = 'HELLO_WORLD'\nexport const FETCH_START = 'FETCH_START'\nexport const ERROR_OCCURED = 'ERROR_OCCURED'\nexport const NETWORK_ERROR_OCCURED = 'NETWORK_ERROR_OCCURED'\nexport const PRIVATE_ACCOUNT_ERROR = 'PRIVATE_ACCOUNT_ERROR'\nexport const FETCH_END = 'FETCH_END'\n\nexport const FETCH_USER_INFO = 'FETCH_USER_INFO'\nexport const FETCH_USER_INFO_SUCCESS = 'FETCH_USER_INFO_SUCCESS'\nexport const FETCH_USER_DATA = 'FETCH_USER_DATA'\nexport const FETCH_USER_DATA_SUCCESS = 'FETCH_USER_DATA_SUCCESS'\n"],"sourceRoot":""}