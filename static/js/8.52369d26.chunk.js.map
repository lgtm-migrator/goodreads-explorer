{"version":3,"sources":["components/Settings/index.js","components/NetworkGraph/components/Node/index.js","components/NetworkGraph/components/Link/index.js","components/NetworkGraph/components/Universe/index.js","components/NetworkGraph/index.js","components/MultiCheckBox/index.jsx","utils/graphHelper.js","containers/RelationshipGraph/index.jsx"],"names":["CheckboxGroup","Checkbox","Group","plainOptions","Settings","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","objectSpread","defaultOptions","filter","option","settings","updateState","bind","assertThisInitialized","updateFps","updateCluster","updateAnimation","updateAlphaStart","updateVelocityDecay","updateChargeStrength","updateCollisionStrength","updateClusterRadiusScale","updateCollisionRadiusOffset","updateClusterForceStrength","updateAttracForceStrength","val","_this2","setState","onChange","fps","cluster","animation","alphaStart","velocityDecay","chargeStrength","collisionStrength","clusterRadiusScale","collisionRadiusOffset","attraceForceStrength","clusterForceStrength","_this3","_this$state$settings","react_default","a","createElement","className","style","borderBottom","padding","options","value","checked","indexOf","es_tooltip","title","placement","slider","defaultValue","max","min","step","onAfterChange","es_button","type","onClick","onReset","block","Component","defaultProps","Node","clickHandler","doubleClickHandler","mouseOverHandler","mouseOutHandler","clickTimeout","data","id","onDoubleClick","event","x","onMouseOver","text","onMouseOut","_this$props","radius","color","y","active","transform","concat","cursor","opacity","r","fill","getThumbnail","img","shortText","textStyle","xlinkHref","clipPath","width","dx","dy","fontSize","stroke","strokeWidth","fontWeight","Link","d","pointer","getPointer","markerEnd","getLabel","viewBox","refX","arrowOffset","refY","markerWidth","markerHeight","orient","href","startOffset","pointerEvents","textAnchor","Universe","getArcPath","getLinks","nextProps","source","target","links","link","map","l","scale","sweep","clockwise","arguments","length","undefined","x1","y1","x2","y2","siblings","linkIdx","scaleOrdinal","domain","range","arcScale","dr","Math","sqrt","_this$state","nodes","reduce","acc","idx","push","components_Link","key","node","components_Node","assign","NetworkGraph","selectedNode","activeNodes","simulation","initSimulation","height","k","tooltip","top","left","initZoomHandler","updateData","updateSimulation","onTick","svg","React","createRef","interval","millis","Date","now","getNeighborNodes","current","clientWidth","clientHeight","updates","diff","prevProps","added","removed","JSON","stringify","children","linkForce","forceLink","strength","distance","forceSimulation","force","select","zoomHandler","zoom","on","_this4","forEach","n","sourceNode","targetNode","_this5","forceCenter","forceManyBody","forceCollide","clusters","uniqBy","arr","cos","PI","random","sin","alpha","applyClusterForce","alphaTarget","restart","tick","e","currentTime","payload","clientY","clientX","neighbors","_this$state2","ref","components_Universe","vx","vy","containsNode","memoize","prevNodes","newNodes","MultiCheckBox","checkedList","defaultCheckedList","indeterminate","checkAll","onCheckAllChange","opt","es_checkbox","disabled","disable","optionLabel","propTpes","PropTypes","array","isRequired","func","minifyString","split","slice","word","charAt","toUpperCase","join","getGraphData","userData","shelves","books","bookNodes","authorNodes","publisherNodes","user_shelves","shelf","name","book","property","author","authors","$t","image_url","publisher","sourceType","targetType","publicationYear","publication_year","publicationMonth","publication_month","publicationDay","publication_day","values","defaultGraphSettings","RelationshipGraph","window","localStorage","getItem","graphSettings","parse","settingsPopover","shelvesSelectPopover","selectedShelves","hideSettings","handleSettingsChange","handleSettingsReset","handleSettingsVisibleChange","hideShelvesSelect","handleShelvesChange","handleShelvesSelectVisibleChange","bookCount","_getGraphData","visible","setItem","removeItem","location","reload","_getGraphData2","components_NetworkGraph","popover","content","components_Settings","trigger","onVisibleChange","icon","position","right","components_MultiCheckBox"],"mappings":"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","file":"static/js/8.52369d26.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Checkbox, Slider, Button, Tooltip } from 'antd'\n\nimport './style.css'\n\nconst CheckboxGroup = Checkbox.Group\n\nconst plainOptions = ['animation', 'cluster']\n\nclass Settings extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      ...props\n    }\n\n    this.defaultOptions = plainOptions.filter((option) => this.props.settings[option])\n\n    this.updateState = this.updateState.bind(this)\n\n    // settings handler\n    this.updateFps = this.updateFps.bind(this)\n    this.updateCluster = this.updateCluster.bind(this)\n    this.updateAnimation = this.updateAnimation.bind(this)\n    this.updateAlphaStart = this.updateAlphaStart.bind(this)\n    this.updateVelocityDecay = this.updateVelocityDecay.bind(this)\n    this.updateChargeStrength = this.updateChargeStrength.bind(this)\n    this.updateCollisionStrength = this.updateCollisionStrength.bind(this)\n    this.updateClusterRadiusScale = this.updateClusterRadiusScale.bind(this)\n    this.updateCollisionRadiusOffset = this.updateCollisionRadiusOffset.bind(this)\n    this.updateClusterForceStrength = this.updateClusterForceStrength.bind(this)\n    this.updateAttracForceStrength = this.updateAttracForceStrength.bind(this)\n  }\n\n  updateState (val) {\n    // update local state and trigger parent onChange function\n    this.setState({\n      settings: {\n        ...this.state.settings,\n        ...val\n      }\n    },\n    () => this.props.onChange(this.state.settings))\n  }\n\n  updateFps (val) {\n    this.updateState({\n      fps: val\n    })\n  }\n\n  updateCluster (val) {\n    this.updateState({\n      cluster: val\n    })\n  }\n\n  updateAnimation (val) {\n    this.updateState({\n      animation: val\n    })\n  }\n\n  updateAlphaStart (val) {\n    this.updateState({\n      alphaStart: val\n    })\n  }\n\n  updateVelocityDecay (val) {\n    this.updateState({\n      velocityDecay: val\n    })\n  }\n\n  updateChargeStrength (val) {\n    this.updateState({\n      chargeStrength: val\n    })\n  }\n\n  updateCollisionStrength (val) {\n    this.updateState({\n      collisionStrength: val\n    })\n  }\n\n  updateClusterRadiusScale (val) {\n    this.updateState({\n      clusterRadiusScale: val\n    })\n  }\n\n  updateCollisionRadiusOffset (val) {\n    this.updateState({\n      collisionRadiusOffset: val\n    })\n  }\n\n  updateAttracForceStrength (val) {\n    this.updateState({\n      attraceForceStrength: val\n    })\n  }\n\n  updateClusterForceStrength (val) {\n    this.updateState({\n      clusterForceStrength: val\n    })\n  }\n\n  render () {\n    const {\n      fps,\n      alphaStart,\n      velocityDecay,\n      attraceForceStrength,\n      collisionStrength,\n      collisionRadiusOffset,\n      clusterRadiusScale,\n      chargeStrength,\n      clusterForceStrength\n    } = this.state.settings\n\n    // this.props.onChange(this.state)\n\n    return (\n      <div\n        className='settings'\n      >\n        <ul>\n          <li>\n            <div style={{ borderBottom: '1px solid #E9E9E9', padding: 5 }}>\n              <CheckboxGroup\n                options={plainOptions}\n                value={this.defaultOptions}\n                onChange={(checked) => {\n                  this.defaultOptions = checked\n                  this.updateState({\n                    animation: checked.indexOf('animation') > -1,\n                    cluster: checked.indexOf('cluster') > -1\n                  })\n                }}\n                className='settingsCheckbox'\n              />\n            </div>\n          </li>\n          <li>\n            <Tooltip title='How many times per second to render the graph.' placement='rightTop'>\n              FPS ({fps})\n            </Tooltip>\n            <Slider\n              defaultValue={fps}\n              max={120}\n              min={1}\n              step={1}\n              onAfterChange={this.updateFps}\n            />\n          </li>\n          <li>\n            <Tooltip title='Initial Alpha of simulation.' placement='rightTop'>\n              Alpha Start ({alphaStart})\n            </Tooltip>\n            <Slider\n              defaultValue={alphaStart}\n              max={1}\n              min={0}\n              step={0.01}\n              onAfterChange={this.updateAlphaStart}\n            />\n          </li>\n          <li>\n            <Tooltip\n              title='The decay factor is akin to atmospheric friction; after the application of any forces during a tick, each node’s velocity is multiplied by 1 - decay. As with lowering the alpha decay rate, less velocity decay may converge on a better solution, but risks numerical instabilities and oscillation.'\n              placement='rightTop'\n            >\n              velocity Decay ({velocityDecay})\n            </Tooltip>\n            <Slider\n              defaultValue={velocityDecay}\n              max={1}\n              min={0}\n              step={0.01}\n              onAfterChange={this.updateVelocityDecay}\n            />\n          </li>\n          <li>\n            <Tooltip title='It can be used to simulate gravity (attraction) if the strength is positive, or electrostatic charge (repulsion) if the strength is negative.' placement='rightTop'>\n              Charge Strength ({chargeStrength})\n            </Tooltip>\n            <Slider\n              defaultValue={chargeStrength}\n              max={500}\n              min={-500}\n              step={1}\n              onAfterChange={this.updateChargeStrength}\n            />\n          </li>\n          <li>\n            <Tooltip title='Sets the collision force strength to the specified number.' placement='rightTop'>\n              Collision Strength ({collisionStrength})\n            </Tooltip>\n            <Slider\n              defaultValue={collisionStrength}\n              max={1}\n              min={0}\n              step={0.01}\n              onAfterChange={this.updateCollisionStrength}\n            />\n          </li>\n          <li>\n            <Tooltip title='The collision force treats nodes as circles with a given radius, rather than points, and prevents nodes from overlapping.' placement='rightTop'>\n              Collision Radius Offset ({collisionRadiusOffset})\n            </Tooltip>\n            <Slider\n              defaultValue={collisionRadiusOffset}\n              max={50}\n              min={0}\n              step={1}\n              onAfterChange={this.updateCollisionRadiusOffset}\n            />\n          </li>\n          <li>\n            <Tooltip title='Sets attractive force strength between nodes' placement='rightTop'>\n              Attractive Force Strength ({attraceForceStrength})\n            </Tooltip>\n            <Slider\n              defaultValue={attraceForceStrength}\n              max={500}\n              min={-500}\n              step={1}\n              onAfterChange={this.updateAttracForceStrength}\n            />\n          </li>\n          <li>\n            <Tooltip title='Radius of the circle around which to cluster the nodes.' placement='rightTop'>\n              Cluster Radius Scale ({clusterRadiusScale})\n            </Tooltip>\n            <Slider\n              defaultValue={clusterRadiusScale}\n              max={10}\n              min={0.5}\n              step={0.5}\n              onAfterChange={this.updateClusterRadiusScale}\n            />\n          </li>\n          <li>\n            <Tooltip title='Strength of clustering of nodes.' placement='rightTop'>\n              Cluster Force Strength ({clusterForceStrength})\n            </Tooltip>\n            <Slider\n              defaultValue={clusterForceStrength}\n              max={1}\n              min={0}\n              step={0.01}\n              onAfterChange={this.updateClusterForceStrength}\n            />\n          </li>\n          <div\n            style={{\n              padding: 10\n            }}\n          >\n            <Button\n              type='danger'\n              onClick={() => this.props.onReset()}\n              block\n            >\n              Reset\n            </Button>\n          </div>\n        </ul>\n      </div>\n    )\n  }\n}\n\nSettings.defaultProps = {\n  settings: {\n    fps: 60,\n    cluster: true,\n    alphaStart: 1,\n    animation: true,\n    velocityDecay: 0.1,\n    chargeStrength: -100,\n    clusterRadiusScale: 2,\n    collisionStrength: 0.5,\n    collisionRadiusOffset: 15,\n    attraceForceStrength: -100\n  }\n}\n\nSettings.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onReset: PropTypes.func.isRequired,\n  settings: PropTypes.shape({\n    fps: PropTypes.number,\n    cluster: PropTypes.bool,\n    alphaStart: PropTypes.number,\n    animation: PropTypes.bool,\n    velocityDecay: PropTypes.number,\n    chargeStrength: PropTypes.number,\n    clusterRadiusScale: PropTypes.number,\n    collisionStrength: PropTypes.number,\n    collisionRadiusOffset: PropTypes.number,\n    attraceForceStrength: PropTypes.number\n  })\n}\n\nexport default Settings\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\n// import './style.css'\n\nclass Node extends Component {\n  constructor () {\n    super()\n    this.clickHandler = this.clickHandler.bind(this)\n    this.doubleClickHandler = this.doubleClickHandler.bind(this)\n    this.mouseOverHandler = this.mouseOverHandler.bind(this)\n    this.mouseOutHandler = this.mouseOutHandler.bind(this)\n    // for click vs dblclick\n    this.clickTimeout = null\n  }\n\n  clickHandler () {\n    this.props.onClick({\n      type: 'NODE',\n      data: this.props.id\n    })\n    // if (this.clickTimeout) {\n    //   clearTimeout(this.clickTimeout)\n    //   this.clickTimeout = null\n    //   this.doubleClickHandler()\n    // } else {\n    //   this.clickTimeout = setTimeout(() => {\n    //     if (this.props.onClick) {\n    //       this.props.onClick({\n    //         type: 'NODE',\n    //         data: this.props.id\n    //       })\n    //     }\n    //   }, 300)\n    // }\n  }\n\n  doubleClickHandler () {\n    if (this.props.onDoubleClick) {\n      this.props.onDoubleClick({\n        type: 'NODE',\n        data: this.props.id\n      })\n    }\n  }\n\n  mouseOverHandler (event, x) {\n    if (this.props.onMouseOver) {\n      this.props.onMouseOver({\n        type: 'NODE',\n        data: {\n          id: this.props.id,\n          text: this.props.text,\n          type: this.props.type\n        },\n        event\n      })\n    }\n  }\n\n  mouseOutHandler (event) {\n    if (this.props.onMouseOut) {\n      this.props.onMouseOut({\n        type: 'NODE',\n        data: {\n          id: this.props.id,\n          text: this.props.text,\n          type: this.props.type\n        },\n        event\n      })\n    }\n  }\n\n  render () {\n    const {\n      className,\n      radius,\n      color,\n      x,\n      y,\n      style,\n      active\n    } = this.props\n    return (\n      <g\n        className={className}\n        transform={`translate(${x},${y})`}\n        onClick={this.clickHandler}\n        style={{\n          cursor: 'pointer',\n          opacity: active ? 1 : 0.1\n        }}\n        onMouseOver={this.mouseOverHandler}\n        onMouseOut={this.mouseOutHandler}\n      >\n        <circle\n          r={radius}\n          fill={color}\n          style={style}\n        />\n        {\n          getThumbnail(this.props)\n        }\n      </g>\n    )\n  }\n}\n\nconst getThumbnail = (props) => {\n  const { id, img, radius, shortText, textStyle } = props\n  if (img) {\n    return (\n      <g>\n        <defs>\n          <clipPath\n            id={`clip_${id}`}\n          >\n            <circle\n              r={radius - 1}\n              // fill={bgColor}\n            />\n          </clipPath>\n        </defs>\n        <image\n          xlinkHref={img}\n          clipPath={`url(#clip_${id})`}\n          x={-radius}\n          y={-radius}\n          width={radius * 2}\n        />\n      </g>\n    )\n  } else {\n    return (\n      <text\n        dx={-radius / 2}\n        dy={textStyle.fontSize / 2}\n        style={textStyle}\n      >\n        {shortText}\n      </text>\n    )\n  }\n}\n\nNode.defaultProps = {\n  className: 'node',\n  radius: 35,\n  color: '#FFFFFF',\n  style: {\n    r: 35,\n    stroke: '#375E97',\n    strokeWidth: '3px'\n  },\n  textStyle: {\n    fontSize: 15,\n    fill: '#fff',\n    strokeWidth: '3px',\n    fontWeight: 'normal'\n  },\n  x: 0,\n  y: 0,\n  active: true\n}\n\nNode.propTypes = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  text: PropTypes.string,\n  shortText: PropTypes.string,\n  className: PropTypes.string,\n  img: PropTypes.string,\n  color: PropTypes.string,\n  radius: PropTypes.number,\n  style: PropTypes.shape({\n    r: PropTypes.number,\n    stroke: PropTypes.string,\n    strokeWidth: PropTypes.string\n  }),\n  textStyle: PropTypes.shape({\n    fontSize: PropTypes.number,\n    fill: PropTypes.string,\n    strokeWidth: PropTypes.string,\n    fontWeight: PropTypes.string\n  }),\n  x: PropTypes.number,\n  y: PropTypes.number,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onMouseOut: PropTypes.func,\n  onMouseOver: PropTypes.func,\n  active: PropTypes.bool\n}\n\nexport default Node\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nclass Link extends Component {\n  render () {\n    const { d, pointer, style, id, active } = this.props\n    return (\n      <g\n        style={{\n          opacity: active ? 1 : 0.1\n        }}\n      >\n        { getPointer(this.props) }\n        <path\n          id={id}\n          style={style}\n          d={d}\n          markerEnd={pointer ? `url(#${id}_pointer)` : pointer}\n        />\n        { getLabel(this.props) }\n      </g>\n    )\n  }\n}\n\nconst getPointer = (props) => {\n  if (props.pointer) {\n    return (\n      <defs>\n        <marker\n          id={`${props.id}_pointer`}\n          viewBox='0 -5 10 10'\n          refX={props.arrowOffset}\n          refY='-2'\n          markerWidth='6'\n          markerHeight='6'\n          orient='auto'\n        >\n          <path\n            d='M0,-5L10,0L0,5'\n            fill='#666'\n            style={{\n              opacity: 1\n            }} />\n        </marker>\n      </defs>\n    )\n  }\n}\n\nconst getLabel = (props) => {\n  if (props.type) {\n    return (\n      <text>\n        <textPath\n          dx={0}\n          dy={5}\n          href={`#${props.id}`}\n          startOffset='50%'\n          style={props.textStyle}\n        >\n          {props.type}\n        </textPath>\n      </text>\n    )\n  }\n}\n\nLink.defaultProps = {\n  style: {\n    strokeWidth: 1.5,\n    fill: 'none',\n    stroke: 'gba(50, 50, 50, 0.2)'\n  },\n  textStyle: {\n    pointerEvents: 'none',\n    textAnchor: 'middle',\n    fill: '#333'\n  },\n  pointer: true,\n  active: true\n}\n\nLink.propTypes = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  style: PropTypes.object,\n  textStyle: PropTypes.object,\n  d: PropTypes.string.isRequired,\n  pointer: PropTypes.bool,\n  active: PropTypes.bool\n}\n\nexport default Link\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { scaleOrdinal } from 'd3-scale'\n\nimport Node from '../Node'\nimport Link from '../Link'\n\nclass Universe extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      ...this.props\n    }\n\n    this.getArcPath = this.getArcPath.bind(this)\n    this.getLinks = this.getLinks.bind(this)\n  }\n\n  componentWillReceiveProps (nextProps) {\n    this.setState({ ...nextProps })\n  }\n\n  getLinks (source, target) {\n    return this.state.links\n      .filter(\n        link =>\n          link.source.id === source.id &&\n          link.target.id === target.id\n      )\n      .map(l => l.type)\n  }\n\n  getArcPath (link, clockwise = true) {\n    const x1 = clockwise ? link.source.x : link.target.x\n    const y1 = clockwise ? link.source.y : link.target.y\n    const x2 = clockwise ? link.target.x : link.source.x\n    const y2 = clockwise ? link.target.y : link.source.y\n    const dx = x2 - x1\n    const dy = y2 - y1\n    const siblings = this.getLinks(link.source, link.target)\n    // const siblingCount = siblings.length\n    const siblingCount = 2\n    const xRotation = 0\n    const largeArc = 0\n\n    if (siblingCount > 1) {\n      // console.log(siblings)\n      const arcScale = scaleOrdinal()\n        .domain(siblings)\n        .range([1, siblingCount])\n      const linkIdx = arcScale(link.type)\n      let scale\n      let sweep\n      if (linkIdx === 1) {\n        sweep = 1\n        scale = 1\n        // return `M${link.source.x},${link.source.y} L${link.target.x},${link.target.y}`\n      } else if (linkIdx % 2 === 0) {\n        sweep = 0\n        scale = linkIdx / 2\n      } else if (linkIdx % 3 === 0) {\n        sweep = 1\n        scale = linkIdx / 3 + 1\n      }\n      const dr =\n        Math.sqrt(dx * dx + dy * dy) / (1 + (1 / siblingCount) * (scale - 1))\n      return `M${x1},${y1}A${dr * 1.7},${dr *\n        1.7} ${xRotation}, ${largeArc}, ${sweep} ${x2},${y2}`\n    }\n    return `M${link.source.x},${link.source.y} L${link.target.x},${link.target.y}`\n  }\n\n  render () {\n    const { nodes, links } = this.state\n    return (\n      <g\n        className={this.props.className}\n        transform={this.props.transform}\n      >\n        <g className='links'>\n          {\n            links.reduce((acc, link, idx) => {\n              if (typeof link.source === 'object' && typeof link.target === 'object') {\n                acc.push(\n                  <Link\n                    key={idx}\n                    d={this.getArcPath(link)}\n                    style={link.style}\n                    id={link.id}\n                    type={link.type}\n                    arrowOffset={link.target.radius * 1.45}\n                    active={link.active}\n                  />\n                )\n                return acc\n              }\n              return acc\n            }, [])\n          }\n        </g>\n        <g className='nodes'>\n          {\n            nodes.map((node, idx) =>\n              <Node\n                key={idx}\n                onClick={this.props.onClick}\n                onDoubleClick={this.props.onDoubleClick}\n                onMouseOver={this.props.onMouseOver}\n                onMouseOut={this.props.onMouseOut}\n                {...node}\n              />\n            )\n          }\n        </g>\n      </g>\n    )\n  }\n}\n\nUniverse.defaultProps = {\n  className: 'universe',\n  nodes: [],\n  links: []\n}\n\nUniverse.propTypes = {\n  className: PropTypes.string,\n  nodes: PropTypes.array,\n  links: PropTypes.array,\n  onMouseOver: PropTypes.func,\n  onMouseOut: PropTypes.func\n}\n\nexport default Universe\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport memoize from 'memoize-one'\nimport { select, event } from 'd3-selection'\nimport {\n  forceLink,\n  forceSimulation,\n  forceCenter,\n  forceManyBody,\n  forceCollide\n} from 'd3-force'\nimport { zoom } from 'd3-zoom'\nimport uniqBy from 'lodash.uniqby'\n\nimport Universe from './components/Universe'\n\nimport './style.css'\n\nclass NetworkGraph extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      nodes: [],\n      links: [],\n      selectedNode: null,\n      activeNodes: [],\n      simulation: this.initSimulation(),\n      width: 100,\n      height: 100,\n      transform: {\n        x: 0,\n        y: 0,\n        k: 1\n      },\n      tooltip: {\n        text: '',\n        style: {\n          opacity: 0,\n          top: 0,\n          left: 0\n        }\n      }\n    }\n    this.initSimulation = this.initSimulation.bind(this)\n    this.initZoomHandler = this.initZoomHandler.bind(this)\n    this.updateData = this.updateData.bind(this)\n    this.updateSimulation = this.updateSimulation.bind(this)\n    this.onTick = this.onTick.bind(this)\n    this.svg = React.createRef()\n    this.nodes = []\n    this.links = []\n\n    // to timit fps\n    this.interval = (1000 / this.props.fps)\n    this.millis = Date.now()\n\n    // mouseevents\n    this.mouseOverHandler = this.mouseOverHandler.bind(this)\n    this.mouseOutHandler = this.mouseOutHandler.bind(this)\n    this.clickHandler = this.clickHandler.bind(this)\n\n    // graph functions\n    this.getNeighborNodes = this.getNeighborNodes.bind(this)\n  }\n\n  componentDidMount () {\n    this.initZoomHandler()\n    this.setState({\n      width: this.svg.current.clientWidth,\n      height: this.svg.current.clientHeight\n    }, () => {\n      const updates = diff(this.nodes, this.props.nodes)\n      this.updateData(updates)\n      this.updateSimulation()\n    })\n  }\n\n  componentDidUpdate (prevProps) {\n    this.interval = (1000 / this.props.fps)\n    // should update data?\n    const updates = diff(prevProps.nodes, this.props.nodes)\n    if (updates.added.length > 0 || updates.removed.length > 0) {\n      this.updateData(updates)\n      this.updateSimulation()\n    }\n\n    // should update simulation?\n    if (\n      JSON.stringify({\n        ...prevProps,\n        nodes: null,\n        links: null,\n        children: null\n      }) !==\n      JSON.stringify({\n        ...this.props,\n        nodes: null,\n        links: null,\n        children: null\n      })\n    ) {\n      this.updateSimulation()\n    }\n  }\n\n  initSimulation () {\n    const linkForce = forceLink()\n      .id(link => link.id)\n      .strength(link => link.strength)\n      .distance(link => link.distance)\n    const simulation = forceSimulation().force('link', linkForce)\n\n    return simulation\n  }\n\n  initZoomHandler () {\n    // TODO: replace select dependency\n    // add zoom capabilities\n    const svg = select('.svgGraph')\n    const zoomHandler = zoom().on('zoom', () => {\n      this.setState({\n        transform: event.transform\n      })\n    })\n    svg.call(zoomHandler).on('dblclick.zoom', null)\n  }\n\n  updateData (diff) {\n    const { links } = this.props\n    this.links = []\n\n    // remove nodes\n    diff.removed.forEach(node => {\n      this.nodes = this.nodes.filter(\n        n => !(n.id === node.id && n.type === node.type)\n      )\n      // context.nodes.splice(context.nodes.indexOf(node))\n    })\n    // add new nodes\n    diff.added.forEach(node => this.nodes.push(node))\n\n    // bind nodes to links\n    links.forEach(link => {\n      const sourceNode = this.nodes.filter(\n        node => node.id === link.source\n      )[0]\n      const targetNode = this.nodes.filter(\n        node => node.id === link.target\n      )[0]\n      if (sourceNode && targetNode) {\n        this.links.push({\n          ...link,\n          source: sourceNode,\n          target: targetNode\n        })\n      }\n    })\n  }\n\n  updateSimulation () {\n    const {\n      attraceForceStrength,\n      chargeStrength,\n      collisionRadiusOffset,\n      collisionStrength,\n      animation,\n      velocityDecay,\n      alphaStart,\n      cluster,\n      clusterRadiusScale,\n      clusterForceStrength\n    } = this.props\n    const { simulation, height, width } = this.state\n\n    simulation\n      .nodes(this.nodes)\n      .on('tick', this.onTick)\n    simulation.force('link').links(this.links)\n    simulation\n      .force('center', forceCenter(width / 2, height / 2))\n      .force('attraceForce', forceManyBody().strength(attraceForceStrength))\n      .force('charge', forceManyBody().strength(chargeStrength))\n      .force(\n        'collision',\n        forceCollide()\n          .radius(node => node.radius + collisionRadiusOffset)\n          .strength(collisionStrength)\n      )\n\n    // Enable clustering of nodes of same type\n    if (cluster) {\n      const clusters = {}\n      const nodeTypes = uniqBy(this.nodes, 'type').map(type => type.type)\n\n      nodeTypes.forEach((type, idx, arr) => {\n        if (!clusters[type]) {\n          const radius = width > height ? height * clusterRadiusScale : width * clusterRadiusScale\n          clusters[type] = {\n            x: Math.cos((idx + 1) / arr.length * 2 * Math.PI) * radius + width / 2 + Math.random(),\n            y: Math.sin((idx + 1) / arr.length * 2 * Math.PI) * radius + height / 2 + Math.random(),\n            radius\n          }\n        }\n      })\n\n      simulation.force('cluster', alpha =>\n        applyClusterForce(alpha, this.nodes, clusters, clusterForceStrength)\n      )\n    } else {\n      simulation.force('cluster', null)\n    }\n\n    simulation\n      .alpha(alphaStart)\n      .alphaTarget(0)\n      .velocityDecay(velocityDecay)\n      .restart()\n\n    if (!animation) {\n      while (simulation.alpha() >= 0.02) {\n        simulation.tick()\n      }\n    }\n  }\n\n  onTick (e) {\n    // limit rendering\n    const currentTime = Date.now()\n    if (currentTime - this.millis > this.interval) {\n      this.millis = currentTime\n      this.setState({\n        nodes: this.nodes,\n        links: this.links\n      })\n    }\n  }\n\n  mouseOutHandler () {\n    this.setState({\n      tooltip: {\n        style: {\n          opacity: 0\n        }\n      }\n    })\n  }\n\n  mouseOverHandler (payload) {\n    const { event, type, data } = payload\n    let text = ''\n    if (type === 'NODE') {\n      text = `[${data.type}] ${data.text}`\n    } else if (type === 'LINK') {\n      text = `${data.type}`\n    }\n    this.setState({\n      tooltip: {\n        text,\n        style: {\n          opacity: 1,\n          top: event.clientY + 15,\n          left: event.clientX + 15\n        }\n      }\n    })\n  }\n\n  clickHandler (event) {\n    if (this.state.selectedNode === event.data) {\n      this.setState({\n        selectedNode: null,\n        activeNodes: []\n      })\n    } else {\n      this.setState({\n        selectedNode: event.data,\n        activeNodes: this.getNeighborNodes(event.data)\n      })\n    }\n  }\n\n  getNeighborNodes (node) {\n    return this.links.reduce(\n      (neighbors, link) => {\n        if (link.target.id === node) {\n          neighbors.push(link.source.id)\n        } else if (link.source.id === node) {\n          neighbors.push(link.target.id)\n        }\n        return neighbors\n      },\n      []\n    )\n  }\n\n  render () {\n    const { transform, tooltip, selectedNode, activeNodes } = this.state\n\n    // determine opacity of node / link based on if its selected or not\n    const nodes = this.state.nodes.map(node => ({\n      ...node,\n      active: selectedNode === null || node.id === selectedNode || activeNodes.indexOf(node.id) > -1\n    }))\n\n    const links = this.state.links.map(link => ({\n      ...link,\n      active:\n        selectedNode === null ||\n        link.source.id === selectedNode ||\n        link.target.id === selectedNode\n    }))\n\n    return (\n      <div\n        className='networkGraph'\n        style={{\n          width: '100%',\n          height: '100%'\n        }}\n      >\n        {this.props.children}\n        <svg\n          className='svgGraph'\n          width='100%'\n          height='100%'\n          ref={this.svg}\n        >\n          <Universe\n            nodes={nodes}\n            links={links}\n            transform={\n              `translate(${transform.x},${transform.y}) scale(${transform.k})`\n            }\n            onClick={this.clickHandler}\n            onDoubleClick={this.props.onDoubleClick}\n            onMouseOver={this.mouseOverHandler}\n            onMouseOut={this.mouseOutHandler}\n          />\n        </svg>\n        {/* <span className='zoomIndicator'>{parseInt(transform.k * 100, 10)} %</span> */}\n        <span\n          className='networkGrapTooltip'\n          style={tooltip.style}\n        >\n          {tooltip.text}\n        </span>\n      </div>\n    )\n  }\n}\n\n// node cluster handler\nconst applyClusterForce = (alpha, nodes, clusters, strength) => {\n  nodes.forEach(node => {\n    const cluster = clusters[node.type]\n    if (cluster.x !== node.x && cluster.y !== node.y) {\n      const k = alpha * strength\n      node.vx -= (node.x - cluster.x) * k\n      node.vy -= (node.y - cluster.y) * k\n    }\n  })\n}\n\nconst containsNode = memoize((node, nodes) =>\n  nodes.reduce((acc, n) => {\n    if (n.id === node.id) {\n      acc.push(n)\n    }\n    return acc\n  }, []).length > 0\n    ? 1\n    : 0\n)\n\nconst diff = memoize((prevNodes, newNodes) => ({\n  removed: prevNodes.filter(node => containsNode(node, newNodes) === 0),\n  added: newNodes.filter(node => containsNode(node, prevNodes) === 0)\n}))\n\nNetworkGraph.defaultProps = {\n  nodes: [],\n  links: [],\n  attraceForceStrength: 10,\n  chargeStrength: -10,\n  collisionRadiusOffset: 15,\n  collisionStrength: 0.5,\n  animation: true,\n  cluster: false,\n  fps: 60,\n  alphaStart: 1,\n  velocityDecay: 0.4,\n  clusterRadiusScale: 2,\n  clusterForceStrength: 0.3\n}\n\nNetworkGraph.propTypes = {\n  nodes: PropTypes.array,\n  links: PropTypes.array,\n  attraceForceStrength: PropTypes.number,\n  chargeStrength: PropTypes.number,\n  collisionRadiusOffset: PropTypes.number,\n  collisionStrength: PropTypes.number,\n  animation: PropTypes.bool,\n  fps: PropTypes.number,\n  alphaStart: PropTypes.number,\n  velocityDecay: PropTypes.number,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  cluster: PropTypes.bool,\n  clusterRadiusScale: PropTypes.number,\n  clusterForceStrength: PropTypes.number\n}\n\nexport default NetworkGraph\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Checkbox } from 'antd'\n\nimport './style.css'\n\nclass MultiCheckBox extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      checkedList: props.defaultCheckedList,\n      indeterminate: true,\n      checkAll: false\n    }\n\n    this.onChange = this.onChange.bind(this)\n    this.onCheckAllChange = this.onCheckAllChange.bind(this)\n  }\n\n  onChange (option, state) {\n    let { checkedList } = this.state\n    if (state) {\n      checkedList.push(option)\n    } else {\n      checkedList = checkedList.filter(opt => opt !== option)\n    }\n    this.setState({\n      checkedList,\n      indeterminate: !!checkedList.length && (checkedList.length < this.props.options.length),\n      checkAll: checkedList.length === this.props.options.length\n    }, () => this.props.onChange(this.state.checkedList))\n  }\n\n  onCheckAllChange (e) {\n    this.setState({\n      checkedList: e.target.checked ? this.props.options : [],\n      indeterminate: false,\n      checkAll: e.target.checked\n    }, () => this.props.onChange(this.state.checkedList))\n  }\n\n  render () {\n    return (\n      <div>\n        <div style={{ borderBottom: '1px solid #E9E9E9' }}>\n          <Checkbox\n            indeterminate={this.state.indeterminate}\n            onChange={this.onCheckAllChange}\n            checked={this.state.checkAll}\n          >\n            Check all\n          </Checkbox>\n        </div>\n        <ul className='shelvesCheckboxGroup' >\n          {\n            this.props.options.map((option, idx) => (\n              <li key={idx}>\n                <Checkbox\n                  onChange={val => this.onChange(option, val.target.checked)}\n                  key={option}\n                  checked={this.props.defaultCheckedList.indexOf(option) > -1}\n                  disabled={this.props.disable[idx]}\n                >\n                  {this.props.optionLabel[idx] ? this.props.optionLabel[idx] : option}\n                </Checkbox>\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n    )\n  }\n}\n\nMultiCheckBox.defaultProps = {\n  disable: [],\n  optionLabel: []\n}\n\nMultiCheckBox.propTpes = {\n  options: PropTypes.array.isRequired,\n  onChange: PropTypes.func,\n  optionLabel: PropTypes.array,\n  defaultCheckedList: PropTypes.array,\n  disable: PropTypes.array\n}\n\nexport default MultiCheckBox\n","const minifyString = text => {\n  return text.split(' ').slice(0, 3).map(word => word.charAt(0).toUpperCase()).join('')\n}\n\nexport function getGraphData (userData, shelves) {\n  let books = []\n  let bookNodes = {}\n  let authorNodes = {}\n  let publisherNodes = {}\n  let nodes = []\n  let links = []\n\n  const bookShelves = userData.user_shelves\n\n  // nodes.push({\n  //   text: userData.name,\n  //   id: userData.id,\n  //   img: userData.image_url,\n  //   type: 'USER',\n  //   color: '#336B87',\n  //   radius: 55,\n  //   style: {\n  //     r: 55,\n  //     stroke: '#375E97',\n  //     strokeWidth: '3px'\n  //   }\n  // })\n\n  bookShelves.forEach(shelf => {\n    if (shelves.indexOf(shelf.name) > -1) {\n      if (shelf.books.book) {\n        const tmpList = shelf.books.book.length ? shelf.books.book : [ shelf.books.book ]\n        tmpList.forEach(book => {\n          books.push(\n            {\n              ...book,\n              property: {\n                shelf: shelf.name\n              }\n            }\n          )\n        })\n      }\n    }\n  })\n\n  books.forEach(book => {\n    const { author } = book.authors\n\n    if (!bookNodes[book.id.$t]) {\n      // Create Book Nodes\n      bookNodes[book.id.$t] = {\n        id: book.id.$t,\n        text: book.title,\n        type: 'BOOK',\n        img: book.image_url,\n        color: '#336B87',\n        radius: 35,\n        style: {\n          r: 35,\n          stroke: '#375E97',\n          strokeWidth: '3px'\n        }\n      }\n      // Create Author Nodes\n      if (!authorNodes[author.id]) {\n        authorNodes[author.id] = {\n          id: author.id,\n          text: author.name,\n          type: 'AUTHOR',\n          img: author.image_url.$t,\n          color: '#FB6542',\n          radius: 35,\n          style: {\n            r: 35,\n            stroke: '#FB6542',\n            strokeWidth: '3px'\n          }\n        }\n      }\n      // Create Publisher Nodes\n      if (!publisherNodes[book.publisher]) {\n        publisherNodes[book.publisher] = {\n          id: typeof book.publisher === 'string' ? book.publisher : 'Self Published',\n          text: typeof book.publisher === 'string' ? book.publisher : 'Self Published',\n          type: 'PUBLISHER',\n          color: '#DDA487',\n          radius: 35,\n          style: {\n            r: 35,\n            stroke: '#7D4427',\n            strokeWidth: '3px'\n          }\n        }\n      }\n      // Create Authoer --> Book relationship\n      links.push({\n        source: author.id,\n        sourceType: 'AUTHOR',\n        target: book.id.$t,\n        targetType: 'BOOK',\n        type: 'AUTHOR_OF',\n        property: {\n          publicationYear: book.publication_year,\n          publicationMonth: book.publication_month,\n          publicationDay: book.publication_day\n        }\n      })\n      // Create Book --> Publisher relationship\n      links.push({\n        source: book.id.$t,\n        sourceType: 'BOOK',\n        target: typeof book.publisher === 'string' ? book.publisher : 'Self Published',\n        targetType: 'PUBLISHER',\n        type: 'PUBLISHED_BY',\n        property: {\n          publicationYear: book.publication_year,\n          publicationMonth: book.publication_month,\n          publicationDay: book.publication_day\n        }\n      })\n\n      // Create Author --> Publisher relationship\n      links.push({\n        source: author.id,\n        sourceType: 'AUTHOR',\n        target: book.publisher,\n        targetType: 'PUBLISHER',\n        type: 'WORKS_WITH',\n        property: {\n          publicationYear: book.publication_year,\n          publicationMonth: book.publication_month,\n          publicationDay: book.publication_day\n        }\n      })\n    }\n  })\n\n  // Collect all nodes\n  nodes = Object.values(bookNodes)\n    .concat(Object.values(authorNodes))\n    .concat(Object.values(publisherNodes))\n    .map((node, idx) => ({\n      ...node,\n      shortText: minifyString(node.text),\n      textStyle: {\n        fontSize: 15,\n        fill: '#fff',\n        strokeWidth: '2px',\n        fontWeight: 'normal'\n      }\n    }))\n\n  return {\n    nodes,\n    links: links.map(link => ({\n      ...link,\n      strength: 0.5,\n      distance: 350,\n      id: `${link.source}-${link.type}-${link.target}`,\n      style: {\n        strokeWidth: 1.5,\n        fill: 'none',\n        stroke: 'rgba(50, 50, 50, 0.2)'\n      }\n    }))\n  }\n}\n","import React, { Component } from 'react'\n\nimport { Button, Popover } from 'antd'\n\nimport Settings from '../../components/Settings'\nimport NetworkGraph from '../../components/NetworkGraph'\nimport MultiCheckBox from '../../components/MultiCheckBox'\n\nimport { getGraphData } from '../../utils/graphHelper'\n\nconst defaultGraphSettings = {\n  fps: 60,\n  cluster: true,\n  alphaStart: 1,\n  animation: true,\n  velocityDecay: 0.1,\n  chargeStrength: -100,\n  collisionStrength: 0.5,\n  collisionRadiusOffset: 15,\n  attraceForceStrength: -100,\n  clusterRadiusScale: 2,\n  clusterForceStrength: 0.3\n}\n\nclass RelationshipGraph extends Component {\n  constructor (props) {\n    super(props)\n\n    // get graph settings from localstorage\n    const settings = window.localStorage.getItem('graphSettings')\n\n    this.state = {\n      graphSettings: settings ? JSON.parse(settings) : defaultGraphSettings,\n      settingsPopover: false,\n      shelvesSelectPopover: false,\n      nodes: [],\n      links: [],\n      shelves: [],\n      selectedShelves: []\n    }\n\n    this.hideSettings = this.hideSettings.bind(this)\n    this.handleSettingsChange = this.handleSettingsChange.bind(this)\n    this.handleSettingsReset = this.handleSettingsReset.bind(this)\n    this.handleSettingsVisibleChange = this.handleSettingsVisibleChange.bind(this)\n\n    this.hideShelvesSelect = this.hideShelvesSelect.bind(this)\n    this.handleShelvesChange = this.handleShelvesChange.bind(this)\n    this.handleShelvesSelectVisibleChange = this.handleShelvesSelectVisibleChange.bind(this)\n  }\n\n  componentDidMount () {\n    const shelves = this.props.userData.user_shelves.map(shelf => {\n      if (shelf.books.book) {\n        return {\n          name: shelf.name,\n          bookCount: shelf.books.book.length ? shelf.books.book.length : 1\n        }\n      }\n      return {\n        name: shelf.name,\n        bookCount: 0\n      }\n    })\n    const selectedShelves = shelves.length > 0 ? [shelves[0].name] : []\n    const { nodes, links } = getGraphData(this.props.userData, selectedShelves)\n    this.setState({\n      nodes,\n      links,\n      shelves,\n      selectedShelves\n    })\n  }\n\n  handleSettingsVisibleChange (visible) {\n    this.setState({ settingsPopover: visible })\n  }\n\n  hideSettings () {\n    this.setState({ settingsPopover: false })\n  }\n\n  handleSettingsChange (settings) {\n    this.setState({\n      graphSettings: settings\n    })\n    // Store settings on local storage\n    window.localStorage.setItem('graphSettings', JSON.stringify(settings))\n  }\n\n  handleSettingsReset () {\n    this.setState({\n      graphSettings: defaultGraphSettings\n    })\n\n    // clear settings on local storage\n    window.localStorage.removeItem('graphSettings')\n    window.location.reload()\n  }\n\n  hideShelvesSelect () {\n    this.setState({ shelvesSelectPopover: false })\n  }\n\n  handleShelvesSelectVisibleChange (visible) {\n    this.setState({ shelvesSelectPopover: visible })\n  }\n\n  handleShelvesChange (selectedShelves) {\n    const { nodes, links } = getGraphData(this.props.userData, selectedShelves)\n    this.setState({\n      nodes,\n      links,\n      selectedShelves\n    })\n  }\n\n  render () {\n    const {\n      nodes,\n      links,\n      graphSettings,\n      settingsPopover,\n      shelvesSelectPopover,\n      shelves,\n      selectedShelves\n    } = this.state\n    return (\n      <NetworkGraph\n        nodes={nodes}\n        links={links}\n        {...graphSettings}\n      >\n        <Popover\n          content={\n            <Settings\n              onChange={this.handleSettingsChange}\n              onReset={this.handleSettingsReset}\n              settings={graphSettings}\n            />\n          }\n          title='Settings'\n          trigger='click'\n          visible={settingsPopover}\n          onVisibleChange={this.handleSettingsVisibleChange}\n          placement='bottomLeft'\n        >\n          <Button\n            icon='setting'\n            style={{\n              position: 'fixed',\n              top: 40,\n              right: 40\n            }}\n          />\n        </Popover>\n        <Popover\n          content={\n            <MultiCheckBox\n              onChange={this.handleShelvesChange}\n              options={shelves.map(shelf => shelf.name)}\n              defaultCheckedList={selectedShelves}\n              optionLabel={shelves.map(shelf => `${shelf.name} (${shelf.bookCount})`)}\n              disable={shelves.map(shelf => shelf.bookCount === 0)}\n            />\n          }\n          title={`Shelves (${shelves.length})`}\n          trigger='click'\n          visible={shelvesSelectPopover}\n          onVisibleChange={this.handleShelvesSelectVisibleChange}\n          placement='bottomLeft'\n        >\n          <Button\n            icon='book'\n            style={{\n              position: 'fixed',\n              top: 40,\n              right: 80\n            }}\n          >\n            Shelves\n          </Button>\n        </Popover>\n      </NetworkGraph>\n    )\n  }\n}\n\nexport default RelationshipGraph\n"],"sourceRoot":""}