{"version":3,"sources":["containers/Dashboard/action.js","containers/App/reducer.js","containers/Dashboard/reducer.js","reducers.js","containers/App/saga.js","utils/urls.js","utils/apiHelper.js","utils/goodreads.js","containers/Dashboard/saga.js","sagas.js","configureStore.js","containers/App/index.jsx","serviceWorker.js","index.js","components/Fallback/index.jsx","utils/constants.js"],"names":["__webpack_require__","d","__webpack_exports__","errorOccured","getUserInfo","getUserInfoSuccess","getUserData","getUserDataSuccess","userAccountIsPrivate","networkErrorOccured","_utils_constants__WEBPACK_IMPORTED_MODULE_0__","err","type","ERROR_OCCURED","userId","FETCH_USER_INFO","userInfo","FETCH_USER_INFO_SUCCESS","FETCH_USER_DATA","userData","FETCH_USER_DATA_SUCCESS","PRIVATE_ACCOUNT_ERROR","NETWORK_ERROR_OCCURED","initialState","isLoading","error","app","state","arguments","length","undefined","action","ActionTypes","Object","objectSpread","title","name","message","dashboard","user","rootReducer","combineReducers","helloWorld","regenerator_default","a","wrap","_context","prev","next","put","stop","_marked","saga","takeEvery","grApiRoot","wrapByLoader","getGetParams","method","headers","Content-Type","handleResponse","response","status","code","statusText","Promise","reject","json","then","fetchApi","url","params","fetch","catch","fn","apiHelper_marked","concat","getBooksOnShelf","_x","_x2","_getBooksOnShelf","apply","this","_callee2","shelf","fetchLoop","_context2","_ref","asyncToGenerator","mark","_callee","resolve","page","lastpage","res","_res$books","currentpage","numpages","book","total","books","sent","parseInt","constructor","Array","_x3","_x4","abrupt","Dashboard_saga","takeLatest","call","Goodreads","Actions","t0","cachedData","shelves","bookOnShelves","JSON","parse","window","localStorage","getItem","Date","now","timestamp","data","user_shelves","user_shelf","map","all","idx","setItem","stringify","console","log","rootSaga","toConsumableArray","appSaga","dashboardSaga","sagas_marked","sagaMiddleware","createSagaMiddleware","Dashboard","lazy","e","bind","Home","ErrorBoundary","ErrorHandler","App","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","searchHandler","assertThisInitialized","ReactGA","initialize","testMode","pageview","location","pathname","search","history","push","_this2","react_default","createElement","react","fallback","Fallback","spin","className","spinning","delay","Switch","Route","exact","path","render","Redirect","to","Component","defaultProps","withRouter","connect","Boolean","hostname","match","store","middlewares","enhancers","applyMiddleware","composeEnhancers","compose","createStore","runSaga","run","injectedReducers","injectedSagas","configureStore","ReactDOM","es","BrowserRouter","basename","containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","FallBack","HELLO_WORLD","FETCH_START","FETCH_END"],"mappings":"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","file":"static/js/main.1cc3f874.chunk.js","sourcesContent":["import {\n  FETCH_USER_INFO,\n  FETCH_USER_INFO_SUCCESS,\n  FETCH_USER_DATA,\n  FETCH_USER_DATA_SUCCESS,\n  ERROR_OCCURED,\n  PRIVATE_ACCOUNT_ERROR,\n  NETWORK_ERROR_OCCURED\n} from '../../utils/constants'\n\nexport const errorOccured = err => ({\n  type: ERROR_OCCURED,\n  err\n})\n\nexport const getUserInfo = userId => ({\n  type: FETCH_USER_INFO,\n  userId\n})\n\nexport const getUserInfoSuccess = userInfo => ({\n  type: FETCH_USER_INFO_SUCCESS,\n  userInfo\n})\n\nexport const getUserData = userId => ({\n  type: FETCH_USER_DATA,\n  userId\n})\n\nexport const getUserDataSuccess = userData => ({\n  type: FETCH_USER_DATA_SUCCESS,\n  userData\n})\n\nexport const userAccountIsPrivate = err => ({\n  type: PRIVATE_ACCOUNT_ERROR,\n  err\n})\n\nexport const networkErrorOccured = err => ({\n  type: NETWORK_ERROR_OCCURED,\n  err\n})\n","import * as ActionTypes from '../../utils/constants'\n\nconst initialState = {\n  isLoading: 0,\n  error: null\n}\n\nconst app = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case ActionTypes.FETCH_START: {\n      return { ...state, isLoading: state.isLoading + 1 }\n    }\n    case ActionTypes.FETCH_END: {\n      return { ...state, isLoading: state.isLoading - 1 }\n    }\n    case ActionTypes.ERROR_OCCURED: {\n      const { err } = action\n      return {\n        ...state,\n        error: {\n          title: err.name,\n          message: err.message\n        }\n      }\n    }\n    case ActionTypes.NETWORK_ERROR_OCCURED: {\n      const { err } = action\n      return { ...state, error: err }\n    }\n    case ActionTypes.PRIVATE_ACCOUNT_ERROR: {\n      const { err } = action\n      return { ...state, error: err }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport default app\n","import * as ActionTypes from '../../utils/constants'\n\nconst initialState = {\n  userId: null,\n  userInfo: null,\n  userData: null\n}\n\nconst dashboard = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case ActionTypes.FETCH_USER_INFO: {\n      const { userId } = action\n      return { ...state, userId }\n    }\n    case ActionTypes.FETCH_USER_INFO_SUCCESS: {\n      const { userInfo } = action\n      return { ...state, userInfo: userInfo.user }\n    }\n    case ActionTypes.FETCH_USER_DATA: {\n      const { userId } = action\n      return { ...state, userId }\n    }\n    case ActionTypes.FETCH_USER_DATA_SUCCESS: {\n      const { userData } = action\n      return { ...state, userData: userData.user }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport default dashboard\n","import { combineReducers } from 'redux'\nimport app from './containers/App/reducer'\nimport dashboard from './containers/Dashboard/reducer'\n\nconst rootReducer = combineReducers({ app, dashboard })\n\nexport default rootReducer\n","import { takeEvery, put } from 'redux-saga/effects'\nimport * as ActionTypes from '../../utils/constants'\n\nfunction * helloWorld () {\n  yield put({ type: 'SUCCESS', message: 'Hello World' })\n}\n\nexport default [\n  takeEvery(ActionTypes.HELLO_WORLD, helloWorld)\n]\n","export const grApiRoot = 'https://uqh87q11i5.execute-api.us-east-1.amazonaws.com/prod'\n","/* global fetch */\nimport { put } from 'redux-saga/effects'\nimport * as ActionTypes from './constants'\n\nexport const getGetParams = () => ({\n  method: 'GET',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n})\n\nexport const handleResponse = (response) => {\n  if (response.status !== 200) {\n    const error = {\n      error: {\n        code: response.status,\n        message: 'Fetch error'\n      },\n      status: response.status,\n      statusText: response.statusText\n    }\n    return Promise.reject(error)\n  }\n  return response.json().then(json => json)\n}\n\nexport const fetchApi = (url, params) =>\n  fetch(url)\n    .then(handleResponse)\n    .catch(err => err)\n\nexport function * wrapByLoader (fn) {\n  yield put({ type: ActionTypes.FETCH_START })\n  yield fn()\n  yield put({ type: ActionTypes.FETCH_END })\n}\n","import { grApiRoot } from './urls'\nimport { getGetParams, fetchApi } from './apiHelper'\n\nexport function getUserInfo (userId) {\n  const url = `${grApiRoot}/user/show?id=${userId}`\n  return fetchApi(url, getGetParams())\n}\n\nexport async function getBooksOnShelf (userId, shelf) {\n  const fetchLoop = new Promise(async (resolve, reject) => {\n    let page = 1\n    let lastpage = false\n    let response = {\n      books: {\n        total: 0,\n        book: []\n      }\n    }\n    do {\n      const url = `${grApiRoot}/review/list?id=${userId}&shelf=${shelf}&per_page=200&page=${page}`\n      const res = await fetchApi(url, getGetParams())\n      const { currentpage, numpages, book, total } = res.books\n\n      response.books.total = parseInt(total)\n      if (book) {\n        response.books.book = response.books.book.concat(book.constructor === Array ? book : [ book ])\n      }\n\n      page += 1\n      if (currentpage === numpages) {\n        lastpage = true\n        resolve(response)\n      }\n    } while (lastpage === false)\n  })\n\n  const response = await fetchLoop\n\n  return response\n}\n","import { takeLatest, put, call, all } from 'redux-saga/effects'\nimport * as ActionTypes from '../../utils/constants'\nimport * as Actions from './action'\nimport * as Goodreads from '../../utils/goodreads'\nimport { wrapByLoader } from '../../utils/apiHelper'\n\nconst getUserInfo = action =>\n  wrapByLoader(function * () {\n    try {\n      const response = yield call(Goodreads.getUserInfo, action.userId)\n      if (!response.error) {\n        const userInfo = response\n        yield put(Actions.getUserInfoSuccess(userInfo))\n      } else {\n        yield put(Actions.errorOccured(response))\n      }\n    } catch (err) {\n      yield put(Actions.errorOccured(err))\n    }\n  })\n\nconst getUserData = action =>\n  wrapByLoader(function * () {\n    try {\n      const cachedData = JSON.parse(window.localStorage.getItem(action.userId))\n\n      if (cachedData && ((Date.now() - cachedData.timestamp) < 3600000)) {\n        yield put(Actions.getUserDataSuccess(cachedData.data))\n      } else {\n        const response = yield call(Goodreads.getUserInfo, action.userId)\n        if (response.user && !response.error) {\n          const userData = response\n          if (userData.user.user_shelves) {\n            const shelves = userData.user.user_shelves.user_shelf.map(shelf => shelf.name)\n            const bookOnShelves = yield all(\n              shelves.map(\n                shelf => call(Goodreads.getBooksOnShelf, action.userId, shelf)\n              )\n            )\n            userData.user.user_shelves = bookOnShelves.map((shelf, idx) => ({\n              name: shelves[idx],\n              books: shelf.books ? shelf.books : { book: [] }\n            }))\n            try {\n              window.localStorage.setItem(\n                action.userId,\n                JSON.stringify({\n                  data: userData,\n                  timestamp: Date.now()\n                })\n              )\n            } catch (err) {\n              console.log(err)\n            }\n            yield put(Actions.getUserDataSuccess(userData))\n          } else {\n            yield put(Actions.userAccountIsPrivate({\n              title: 'Private Account',\n              message: `Sorry ${userData.user.name}, your account is private. Can't fetch your data.`\n            }))\n            yield put(Actions.getUserDataSuccess({\n              user: {\n                ...userData.user,\n                user_shelves: []\n              }\n            }))\n          }\n        } else {\n          yield put(Actions.networkErrorOccured({\n            title: 'Network Error',\n            message: response.message\n          }))\n        }\n      }\n    } catch (err) {\n      yield put(Actions.errorOccured(err))\n    }\n  })\n\nexport default [\n  takeLatest(ActionTypes.FETCH_USER_INFO, getUserInfo),\n  takeLatest(ActionTypes.FETCH_USER_DATA, getUserData)\n]\n","import { all } from 'redux-saga/effects'\nimport appSaga from './containers/App/saga'\nimport dashboardSaga from './containers/Dashboard/saga'\n\nfunction * rootSaga () {\n  yield all([\n    ...appSaga,\n    ...dashboardSaga\n  ])\n}\n\nexport default rootSaga\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport rootReducer from './reducers'\nimport rootSaga from './sagas'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nexport default function configureStore (initialState = {}) {\n  const middlewares = [sagaMiddleware]\n\n  const enhancers = [\n    applyMiddleware(...middlewares)\n  ]\n\n  // If Redux DevTools Extension is installed use it, otherwise use Redux compose\n  /* eslint-disable no-underscore-dangle */\n  const composeEnhancers =\n  process.env.NODE_ENV !== 'production' &&\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : compose\n  /* eslint-enable */\n\n  const store = createStore(\n    rootReducer,\n    // fromJS(initialState),\n    initialState,\n    composeEnhancers(...enhancers)\n  )\n\n  // Extensions\n  store.runSaga = sagaMiddleware.run(rootSaga)\n  store.injectedReducers = {} // Reducer registry\n  store.injectedSagas = {} // Saga registry\n\n  // if(module.hot) {\n  //   // Enable Webpack hot module replacement for reducers\n  //   module.hot.accept('../reducers', () => {\n  //     const nextReducer = require('../reducers').default\n  //     store.replaceReducer(nextReducer)\n  //   })\n  // }\n\n  return store\n}\n","import React, { Component, Suspense, lazy } from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  withRouter,\n  Route,\n  Switch,\n  Redirect\n} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport ReactGA from 'react-ga'\nimport Fallback from '../../components/Fallback'\n\n// antd components\nimport { Spin } from 'antd'\n\nimport 'antd/dist/antd.css'\nimport './style.css'\n\n// containers\nconst Dashboard = lazy(() => import('../Dashboard'))\nconst Home = lazy(() => import('../Home'))\nconst ErrorBoundary = lazy(() => import('../../components/ErrorBoundary'))\nconst ErrorHandler = lazy(() => import('../../components/ErrorHandler'))\n\nconst mapStateToProps = state => ({\n  isLoading: state.app.isLoading,\n  error: state.app.error\n})\n\nconst mapDispatchToProps = {\n\n}\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n\n    this.searchHandler = this.searchHandler.bind(this)\n\n    // Google analytics\n    ReactGA.initialize('UA-132487735-1', { testMode: this.props.testMode })\n    ReactGA.pageview(window.location.pathname + window.location.search)\n  }\n\n  searchHandler (userId) {\n    this.props.history.push(`/user/${userId}/viz/stats`)\n  }\n\n  componentDidMount () {\n    // Maybe get top books from goodreads?\n  }\n\n  render () {\n    return (\n      <Suspense fallback={<Fallback />} >\n        <ErrorBoundary>\n          <Spin\n            className='App'\n            spinning={this.props.isLoading > 0}\n            delay={500}\n          >\n            <Switch>\n              <Route\n                exact\n                path='/'\n                render={props => (\n                  <Suspense fallback={<Fallback />} >\n                    <Home\n                      searchHandler={this.searchHandler}\n                    />\n                  </Suspense>\n                )}\n              />\n              <Route\n                path='/user/:userId'\n                render={props => (\n                  <Suspense fallback={<Fallback />} >\n                    <Dashboard {...props} />\n                  </Suspense>\n                )}\n              />\n              <Redirect to='/' />\n            </Switch>\n            {\n              this.props.error && (\n                <ErrorHandler error={this.props.error} />\n              )\n            }\n          </Spin>\n        </ErrorBoundary>\n      </Suspense>\n    )\n  }\n}\n\nApp.defaultProps = {\n  testMode: false\n}\n\nApp.propTypes = {\n  testMode: PropTypes.bool\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(App)\n)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport configureStore from './configureStore'\nimport App from './containers/App'\nimport * as serviceWorker from './serviceWorker'\n\nimport './style.css'\n\nconst store = configureStore()\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router\n      basename={process.env.PUBLIC_URL + '/'}\n    >\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import React from 'react'\n// import { Spin } from 'antd'\n\nimport './style.css'\n\n// const FallBack = () => (\n//   <Spin\n//     className='App'\n//     spinning\n//     delay={1}\n//     size='large'\n//   />\n// )\n\nconst FallBack = () => <div className='suspenseFallback'>Loading...</div>\n\nexport default FallBack\n","export const HELLO_WORLD = 'HELLO_WORLD'\nexport const FETCH_START = 'FETCH_START'\nexport const ERROR_OCCURED = 'ERROR_OCCURED'\nexport const NETWORK_ERROR_OCCURED = 'NETWORK_ERROR_OCCURED'\nexport const PRIVATE_ACCOUNT_ERROR = 'PRIVATE_ACCOUNT_ERROR'\nexport const FETCH_END = 'FETCH_END'\n\nexport const FETCH_USER_INFO = 'FETCH_USER_INFO'\nexport const FETCH_USER_INFO_SUCCESS = 'FETCH_USER_INFO_SUCCESS'\nexport const FETCH_USER_DATA = 'FETCH_USER_DATA'\nexport const FETCH_USER_DATA_SUCCESS = 'FETCH_USER_DATA_SUCCESS'\n"],"sourceRoot":""}