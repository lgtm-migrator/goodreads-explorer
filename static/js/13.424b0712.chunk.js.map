{"version":3,"sources":["components/MultiCheckBox/index.jsx","components/Histogram/config.js","components/Histogram/index.jsx","components/TagCloud/index.jsx","components/PieChart/index.jsx","utils/statsHelper.js","containers/Statistics/index.jsx"],"names":["MultiCheckBox","props","_this","Object","_home_travis_build_rpidanny_goodreads_explorer_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_travis_build_rpidanny_goodreads_explorer_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_rpidanny_goodreads_explorer_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","checkedList","defaultCheckedList","indeterminate","checkAll","onChange","bind","_home_travis_build_rpidanny_goodreads_explorer_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","onCheckAllChange","option","_this2","push","filter","opt","setState","length","options","e","_this3","target","checked","_this4","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","style","borderBottom","antd__WEBPACK_IMPORTED_MODULE_8__","map","idx","key","val","indexOf","disabled","disable","optionLabel","Component","defaultProps","propTpes","PropTypes","array","isRequired","func","config","keys","margin","top","right","bottom","left","defs","id","type","background","color","size","padding","stagger","rotation","lineWidth","spacing","fill","match","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","legends","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","Quote","react_default","bar","data","indexBy","colors","colorBy","borderColor","axisTop","axisRight","xLabel","yLabel","labelSkipWidth","labelSkipHeight","labelTextColor","animate","motionStiffness","motionDamping","seed","random","x","Math","sin","floor","customRenderer","tag","tooltip","value","title","concat","count","fontSize","border","display","TagCloudComponent","tags","lib","minSize","maxSize","renderer","randomNumberGenerator","PieChart","pie","innerRadius","padAngle","cornerRadius","borderWidth","radialLabelsSkipAngle","radialLabelsTextXOffset","radialLabelsTextColor","radialLabelsLinkOffset","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","radialLabelsLinkStrokeWidth","radialLabelsLinkColor","slicesLabelsSkipAngle","slicesLabelsTextColor","sum","reduce","b","getBooksList","userData","shelves","books","user_shelves","forEach","shelf","name","book","objectSpread","property","author","authors","getHistogram","keyProcessor","arguments","undefined","bins","itemKey","values","item","StatisticsContainer","classCallCheck","possibleConstructorReturn","getPrototypeOf","shelvesSelectPopover","selectedShelves","hideShelvesSelect","assertThisInitialized","handleShelvesChange","handleShelvesSelectVisibleChange","bookCount","visible","_this$state","shelvesDistribution","label","parseInt","end","randomColor","stats","numPages","num_pages","ratings","average_rating","parseFloat","numBook","totalPages","totalRating","totalBooks","averagePages","toFixed","averageRating","getStats","publishedYearHist","format","authorHist","formatHist","ratingHist","0-1","1-2","2-3","3-4","4-5","rating","getRatingsData","numPagesHist","0-100","100-200","200-300","300-400","400-500","500-600","600-700","700-800","800-900","900-1000","1000-1100","1100-1200","1200+","getPagesData","publishedMonthHist","1","2","3","4","5","6","7","8","9","10","11","12","getPublishedMonthData","formatDistribution","console","log","row","gutter","col","xs","sm","md","lg","xl","card","statistic","divider","TagCloud","components_PieChart","dashed","Histogram","popover","content","trigger","onVisibleChange","placement","es_button","icon","position"],"mappings":"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","file":"static/js/13.424b0712.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Checkbox } from 'antd'\n\nimport './style.css'\n\nclass MultiCheckBox extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      checkedList: props.defaultCheckedList,\n      indeterminate: true,\n      checkAll: false\n    }\n\n    this.onChange = this.onChange.bind(this)\n    this.onCheckAllChange = this.onCheckAllChange.bind(this)\n  }\n\n  onChange (option, state) {\n    let { checkedList } = this.state\n    if (state) {\n      checkedList.push(option)\n    } else {\n      checkedList = checkedList.filter(opt => opt !== option)\n    }\n    this.setState({\n      checkedList,\n      indeterminate: !!checkedList.length && (checkedList.length < this.props.options.length),\n      checkAll: checkedList.length === this.props.options.length\n    }, () => this.props.onChange(this.state.checkedList))\n  }\n\n  onCheckAllChange (e) {\n    this.setState({\n      checkedList: e.target.checked ? this.props.options : [],\n      indeterminate: false,\n      checkAll: e.target.checked\n    }, () => this.props.onChange(this.state.checkedList))\n  }\n\n  render () {\n    return (\n      <div className={this.props.className}>\n        <div style={{ borderBottom: '1px solid #E9E9E9' }}>\n          <Checkbox\n            indeterminate={this.state.indeterminate}\n            onChange={this.onCheckAllChange}\n            checked={this.state.checkAll}\n          >\n            Check all\n          </Checkbox>\n        </div>\n        <ul className='shelvesCheckboxGroup' >\n          {\n            this.props.options.map((option, idx) => (\n              <li key={idx}>\n                <Checkbox\n                  onChange={val => this.onChange(option, val.target.checked)}\n                  key={option}\n                  checked={this.props.defaultCheckedList.indexOf(option) > -1}\n                  disabled={this.props.disable[idx]}\n                >\n                  {this.props.optionLabel[idx] ? this.props.optionLabel[idx] : option}\n                </Checkbox>\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n    )\n  }\n}\n\nMultiCheckBox.defaultProps = {\n  disable: [],\n  optionLabel: []\n}\n\nMultiCheckBox.propTpes = {\n  options: PropTypes.array.isRequired,\n  onChange: PropTypes.func,\n  optionLabel: PropTypes.array,\n  defaultCheckedList: PropTypes.array,\n  disable: PropTypes.array\n}\n\nexport default MultiCheckBox\n","export default {\n  keys: ['hot dog', 'burger', 'sandwich', 'kebab', 'fries', 'donut'],\n  margin: {\n    top: 50,\n    right: 50,\n    bottom: 50,\n    left: 60\n  },\n  defs: [\n    {\n      id: 'dots',\n      type: 'patternDots',\n      background: 'inherit',\n      color: '#38bcb2',\n      size: 4,\n      padding: 1,\n      stagger: true\n    },\n    {\n      id: 'lines',\n      type: 'patternLines',\n      background: 'inherit',\n      color: '#eed312',\n      rotation: -45,\n      lineWidth: 6,\n      spacing: 10\n    }\n  ],\n  fill: [\n    {\n      match: {\n        id: 'fries'\n      },\n      id: 'dots'\n    },\n    {\n      match: {\n        id: 'sandwich'\n      },\n      id: 'lines'\n    }\n  ],\n  axisBottom: {\n    tickSize: 5,\n    tickPadding: 5,\n    tickRotation: 0,\n    legend: 'country',\n    legendPosition: 'middle',\n    legendOffset: 32\n  },\n  axisLeft: {\n    tickSize: 5,\n    tickPadding: 5,\n    tickRotation: 0,\n    legend: 'food',\n    legendPosition: 'middle',\n    legendOffset: -40\n  },\n  legends: [\n    {\n      dataFrom: 'keys',\n      anchor: 'bottom-right',\n      direction: 'column',\n      justify: false,\n      translateX: 120,\n      translateY: 0,\n      itemsSpacing: 2,\n      itemWidth: 100,\n      itemHeight: 20,\n      itemDirection: 'left-to-right',\n      itemOpacity: 0.85,\n      symbolSize: 20,\n      effects: [\n        {\n          on: 'hover',\n          style: {\n            itemOpacity: 1\n          }\n        }\n      ]\n    }\n  ]\n};\n","import React from 'react'\nimport { ResponsiveBar } from '@nivo/bar'\n\nimport config from './config'\n\nimport './style.css'\n\nconst Quote = (props) => {\n  return (\n    <div className='barGraph'>\n      <ResponsiveBar\n        data={props.data}\n        indexBy='key'\n        margin={config.margin}\n        padding={0.3}\n        colors='nivo'\n        colorBy='id'\n        defs={config.defs}\n        fill={config.fill}\n        borderColor='inherit:darker(1.6)'\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: props.xLabel,\n          legendPosition: 'middle',\n          legendOffset: 32\n        }}\n        axisLeft={{\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: props.yLabel,\n          legendPosition: 'middle',\n          legendOffset: -40\n        }}\n        // axisLeft={null}\n        labelSkipWidth={12}\n        labelSkipHeight={12}\n        labelTextColor='inherit:darker(1.6)'\n        animate={true}\n        motionStiffness={90}\n        motionDamping={15}\n        // legends={config.legends}\n      />\n    </div>\n  )\n}\n\nexport default Quote\n","import React from 'react'\n\nimport { Tooltip } from 'antd'\n\n// import TagCloud from 'react-tag-cloud'\nimport { TagCloud } from 'react-tagcloud'\n// import randomColor from 'randomcolor'\n\nimport './style.css'\n\n// bring your own implementation of rng\nlet seed = 1337\nconst random = () => {\n  const x = Math.sin(seed++) * 10000\n  return x - Math.floor(x)\n}\n\nconst customRenderer = (tag, size, color) => (\n  <Tooltip key={tag.value} title={`${tag.value} (${tag.count})`}>\n    <span key={tag.value}\n      style={{\n        // animation: 'blinker 3s linear infinite',\n        // animationDelay: `${Math.random() * 2}s`,\n        fontSize: `${size}em`,\n        border: `2px solid ${color}`,\n        margin: '3px',\n        padding: '3px',\n        display: 'inline-block'\n        // color: 'gray'\n      }}\n    >\n      {tag.value}\n    </span>\n  </Tooltip>\n)\nconst TagCloudComponent = (props) => {\n  const tags = props.data.map(data => ({\n    value: data.key,\n    count: data.value\n  }))\n  return (\n    // <TagCloud\n    //   style={{\n    //     // fontFamily: 'sans-serif',\n    //     fontSize: 12,\n    //     fontWeight: 'bold',\n    //     fontStyle: 'italic',\n    //     // color: () => randomColor(),\n    //     color: 'gray',\n    //     padding: 5,\n    //     width: '100%',\n    //     height: '400px'\n    //   }}>\n    //   {\n    //     props.data.map((data, idx) => {\n    //       return (\n    //         <div style={{ fontSize: data.value * 9 }} key={idx} >\n    //           <Tooltip key={data.value} text={data.value} >\n    //             {data.key}\n    //           </Tooltip>\n    //         </div>\n    //       )\n    //     })\n    //   }\n    // </TagCloud>\n    <TagCloud\n      tags={tags}\n      minSize={1}\n      maxSize={5}\n      renderer={customRenderer}\n      randomNumberGenerator={random}\n    />\n  )\n}\n\nexport default TagCloudComponent\n","import React from 'react'\nimport { ResponsivePie } from '@nivo/pie'\n\nimport './style.css'\n\nconst PieChart = props => {\n  return (\n    <div className='pieChart' >\n      <ResponsivePie\n        data={props.data}\n        margin={{\n          top: 40,\n          right: 80,\n          bottom: 80,\n          left: 80\n        }}\n        innerRadius={0.5}\n        padAngle={0.7}\n        cornerRadius={3}\n        colors='nivo'\n        colorBy='id'\n        borderWidth={1}\n        borderColor='inherit:darker(0.2)'\n        radialLabelsSkipAngle={10}\n        radialLabelsTextXOffset={6}\n        radialLabelsTextColor='#333333'\n        radialLabelsLinkOffset={0}\n        radialLabelsLinkDiagonalLength={16}\n        radialLabelsLinkHorizontalLength={24}\n        radialLabelsLinkStrokeWidth={1}\n        radialLabelsLinkColor='inherit'\n        slicesLabelsSkipAngle={10}\n        slicesLabelsTextColor='#333333'\n        animate={true}\n        motionStiffness={90}\n        motionDamping={15}\n        defs={[\n          {\n            id: 'dots',\n            type: 'patternDots',\n            background: 'inherit',\n            color: 'rgba(255, 255, 255, 0.3)',\n            size: 4,\n            padding: 1,\n            stagger: true\n          },\n          {\n            id: 'lines',\n            type: 'patternLines',\n            background: 'inherit',\n            color: 'rgba(255, 255, 255, 0.3)',\n            rotation: -45,\n            lineWidth: 6,\n            spacing: 10\n          }\n        ]}\n        // legends={[\n        //   {\n        //     'anchor': 'bottom',\n        //     'direction': 'row',\n        //     'translateY': 56,\n        //     'itemWidth': 100,\n        //     'itemHeight': 18,\n        //     'itemTextColor': '#999',\n        //     'symbolSize': 18,\n        //     'symbolShape': 'circle',\n        //     'effects': [\n        //       {\n        //         'on': 'hover',\n        //         'style': {\n        //           'itemTextColor': '#000'\n        //         }\n        //       }\n        //     ]\n        //   }\n        // ]}\n      />\n    </div>\n  )\n}\n\nexport default PieChart\n","\nconst sum = (a) => a.reduce((a, b) => a + b, 0)\n\nexport function getBooksList (userData, shelves) {\n  let books = []\n\n  const bookShelves = userData.user_shelves\n\n  bookShelves.forEach(shelf => {\n    if (shelves.indexOf(shelf.name) > -1) {\n      if (shelf.books.book) {\n        const tmpList = shelf.books.book.length ? shelf.books.book : [ shelf.books.book ]\n        tmpList.forEach(book => {\n          books.push(\n            {\n              ...book,\n              property: {\n                shelf: shelf.name\n              },\n              author: book.authors ? book.authors.author.name : 'Unknown'\n            }\n          )\n        })\n      }\n    }\n  })\n\n  return books\n}\n\nexport function getStats (books) {\n  const numPages = books.map(book => {\n    return typeof book.num_pages === 'string' ? parseInt(book.num_pages) : 0\n  })\n  const ratings = books.map(book => {\n    return typeof book.average_rating === 'string' ? parseFloat(book.average_rating) : 0.0\n  })\n\n  const numBook = books.length\n  const totalPages = sum(numPages)\n  const totalRating = sum(ratings)\n\n  return {\n    totalBooks: books.length,\n    totalPages,\n    averagePages: (totalPages / numBook).toFixed(2),\n    averageRating: (totalRating / numBook).toFixed(2)\n  }\n}\n\nexport function getHistogram (books, key, keyProcessor = null) {\n  const bins = {}\n\n  books.forEach(book => {\n    let itemKey = book[key]\n    if (keyProcessor) {\n      itemKey = keyProcessor(itemKey)\n    }\n\n    if (!bins[itemKey]) {\n      bins[itemKey] = [\n        book\n      ]\n      // bins[book.published] = 1\n    } else {\n      bins[itemKey].push(book)\n      // bins[book.published] += 1\n    }\n  })\n\n  const keys = Object.keys(bins)\n  const data = Object.values(bins).map((item, idx) => {\n    let itemKey = keys[idx]\n    return {\n      key: itemKey,\n      value: item.length\n    }\n  })\n\n  return data\n}\n\nexport function getRatingsData (books) {\n  const ratings = getHistogram(books, 'average_rating')\n  let bins = {\n    '0-1': 0,\n    '1-2': 0,\n    '2-3': 0,\n    '3-4': 0,\n    '4-5': 0\n  }\n  ratings.forEach(rating => {\n    const key = Math.floor(parseFloat(rating.key))\n    switch (key) {\n      case 0:\n        bins['0-1'] += 1\n        break\n      case 1:\n        bins['1-2'] += 1\n        break\n      case 2:\n        bins['2-3'] += 1\n        break\n      case 3:\n        bins['3-4'] += 1\n        break\n      case 4:\n        bins['4-5'] += 1\n        break\n      default:\n        break\n    }\n  })\n\n  const keys = Object.keys(bins)\n  const data = Object.values(bins).map((item, idx) => {\n    let itemKey = keys[idx]\n    return {\n      key: itemKey,\n      value: item\n    }\n  })\n\n  return data\n}\n\nexport function getPagesData (books) {\n  const ratings = getHistogram(books, 'num_pages')\n  let bins = {\n    '0-100': 0,\n    '100-200': 0,\n    '200-300': 0,\n    '300-400': 0,\n    '400-500': 0,\n    '500-600': 0,\n    '600-700': 0,\n    '700-800': 0,\n    '800-900': 0,\n    '900-1000': 0,\n    '1000-1100': 0,\n    '1100-1200': 0,\n    '1200+': 0\n  }\n  ratings.forEach(rating => {\n    const key = Math.floor(parseFloat(rating.key) / 100)\n    switch (key) {\n      case 0:\n        bins['0-100'] += 1\n        break\n      case 1:\n        bins['100-200'] += 1\n        break\n      case 2:\n        bins['200-300'] += 1\n        break\n      case 3:\n        bins['300-400'] += 1\n        break\n      case 4:\n        bins['400-500'] += 1\n        break\n      case 5:\n        bins['500-600'] += 1\n        break\n      case 6:\n        bins['600-700'] += 1\n        break\n      case 7:\n        bins['700-800'] += 1\n        break\n      case 8:\n        bins['800-900'] += 1\n        break\n      case 9:\n        bins['900-1000'] += 1\n        break\n      case 10:\n        bins['1000-1100'] += 1\n        break\n      case 11:\n        bins['1100-1200'] += 1\n        break\n      case 12:\n        bins['1200+'] += 1\n        break\n      default:\n        break\n    }\n  })\n\n  const keys = Object.keys(bins)\n  const data = Object.values(bins).map((item, idx) => {\n    let itemKey = keys[idx]\n    return {\n      key: itemKey,\n      value: item\n    }\n  })\n\n  return data\n}\n\nexport function getPublishedMonthData (books) {\n  const ratings = getHistogram(books, 'publication_month')\n  let bins = {\n    '1': 0,\n    '2': 0,\n    '3': 0,\n    '4': 0,\n    '5': 0,\n    '6': 0,\n    '7': 0,\n    '8': 0,\n    '9': 0,\n    '10': 0,\n    '11': 0,\n    '12': 0\n  }\n  ratings.forEach(rating => {\n    const key = parseInt(rating.key)\n    switch (key) {\n      case 1:\n        bins['1'] = rating.value\n        break\n      case 2:\n        bins['2'] = rating.value\n        break\n      case 3:\n        bins['3'] = rating.value\n        break\n      case 4:\n        bins['4'] = rating.value\n        break\n      case 5:\n        bins['5'] = rating.value\n        break\n      case 6:\n        bins['6'] = rating.value\n        break\n      case 7:\n        bins['7'] = rating.value\n        break\n      case 8:\n        bins['8'] = rating.value\n        break\n      case 9:\n        bins['9'] = rating.value\n        break\n      case 10:\n        bins['10'] = rating.value\n        break\n      case 11:\n        bins['11'] = rating.value\n        break\n      case 12:\n        bins['12'] = rating.value\n        break\n      default:\n        break\n    }\n  })\n\n  const keys = Object.keys(bins)\n  const data = Object.values(bins).map((item, idx) => {\n    let itemKey = keys[idx]\n    return {\n      key: itemKey,\n      value: item\n    }\n  })\n\n  return data\n}","import React, { Component } from 'react'\n\nimport { Button, Popover, Row, Col, Divider, Statistic, Card } from 'antd'\nimport randomColor from 'randomcolor'\n\nimport MultiCheckBox from '../../components/MultiCheckBox'\nimport Histogram from '../../components/Histogram'\nimport TagCloud from '../../components/TagCloud'\nimport PieChart from '../../components/PieChart'\n\nimport {\n  getBooksList,\n  getHistogram,\n  getStats,\n  getRatingsData,\n  getPagesData,\n  getPublishedMonthData\n} from '../../utils/statsHelper'\n\nimport './style.css'\n\nclass StatisticsContainer extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      shelvesSelectPopover: false,\n      books: [],\n      shelves: [],\n      selectedShelves: []\n    }\n\n    this.hideShelvesSelect = this.hideShelvesSelect.bind(this)\n    this.handleShelvesChange = this.handleShelvesChange.bind(this)\n    this.handleShelvesSelectVisibleChange = this.handleShelvesSelectVisibleChange.bind(\n      this\n    )\n  }\n\n  componentDidMount () {\n    const shelves = this.props.userData.user_shelves.map(shelf => {\n      if (shelf.books.book) {\n        return {\n          name: shelf.name,\n          bookCount: shelf.books.book.length ? shelf.books.book.length : 1\n        }\n      }\n      return {\n        name: shelf.name,\n        bookCount: 0\n      }\n    })\n    const selectedShelves = shelves.length > 0 ? [shelves[0].name] : []\n\n    const books = getBooksList(this.props.userData, selectedShelves)\n\n    this.setState({\n      shelves,\n      selectedShelves,\n      books\n    })\n  }\n\n  hideShelvesSelect () {\n    this.setState({ shelvesSelectPopover: false })\n  }\n\n  handleShelvesSelectVisibleChange (visible) {\n    this.setState({ shelvesSelectPopover: visible })\n  }\n\n  handleShelvesChange (selectedShelves) {\n    const books = getBooksList(this.props.userData, selectedShelves)\n\n    this.setState({\n      books,\n      selectedShelves\n    })\n  }\n\n  render () {\n    const {\n      books,\n      shelvesSelectPopover,\n      shelves,\n      selectedShelves\n    } = this.state\n\n    const { user_shelves } = this.props.userData\n\n    const shelvesDistribution = user_shelves.map(shelf => ({\n      id: shelf.name,\n      label: shelf.name,\n      value: parseInt(shelf.books.end),\n      color: randomColor()\n    }))\n\n    const stats = getStats(books)\n\n    const publishedYearHist = getHistogram(books, 'published',\n      format => typeof format === 'string' ? format : 'Unknown'\n    )\n    const authorHist = getHistogram(books, 'author')\n    const formatHist = getHistogram(books, 'format',\n      format => typeof format === 'string' ? format : 'Unknown'\n    )\n    const ratingHist = getRatingsData(books)\n    const numPagesHist = getPagesData(books)\n    const publishedMonthHist = getPublishedMonthData(books)\n\n    const formatDistribution = formatHist.map(format => ({\n      id: format.key,\n      label: format.key,\n      value: format.value,\n      color: randomColor()\n    }))\n\n    console.log('Books: ', books)\n    console.log('YearHist: ', publishedYearHist)\n    console.log('authorHist: ', authorHist)\n    console.log('ratingHist', ratingHist)\n    console.log('numPagesHist', numPagesHist)\n    console.log('Shelves', shelvesDistribution)\n    console.log('formatDistribution', formatHist)\n\n    console.log('stats', stats)\n\n    return (\n      <div className='statistics'>\n        <Row gutter={16}>\n          <Col xs={24} sm={12} md={6} lg={4} xl={4}>\n            <Card>\n              <Statistic title='Total Shelves' value={shelves.length} />\n            </Card>\n          </Col>\n          <Col xs={24} sm={12} md={6} lg={4} xl={4}>\n            <Card>\n              <Statistic title='Total Books' value={stats.totalBooks} />\n            </Card>\n          </Col>\n          <Col xs={24} sm={12} md={6} lg={4} xl={4}>\n            <Card>\n              <Statistic title='Total Pages' value={stats.totalPages} />\n            </Card>\n          </Col>\n          <Col xs={24} sm={12} md={6} lg={4} xl={4}>\n            <Card>\n              <Statistic title='Average Pages' value={stats.averagePages} />\n            </Card>\n          </Col>\n          <Col xs={24} sm={12} md={6} lg={4} xl={4}>\n            <Card>\n              <Statistic title='Average Rating' value={stats.averageRating} />\n            </Card>\n          </Col>\n        </Row>\n\n        <Divider />\n        <Row>\n          <Card title='Authors'>\n            <TagCloud data={authorHist} />\n          </Card>\n        </Row>\n        <Divider />\n\n        <Row gutter={16}>\n          <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n            <Card title='Shelves' >\n              <PieChart data={shelvesDistribution} />\n            </Card>\n          </Col>\n          <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n            <Card title='Book Formats' >\n              <PieChart data={formatDistribution} />\n            </Card>\n          </Col>\n        </Row>\n\n        <Divider dashed />\n        <Row>\n          <Card title='Histogram of Books by Number of Pages' >\n            <Histogram\n              data={numPagesHist}\n              xLabel='Number of Pages'\n              yLabel='Number of Books'\n            />\n          </Card>\n        </Row>\n        <Divider dashed />\n\n        <Row>\n          <Card title='Histogram of Books by Published Month' >\n            <Histogram\n              data={publishedMonthHist}\n              xLabel='Published Month'\n              yLabel='Number of Books'\n            />\n          </Card>\n        </Row>\n        <Divider dashed />\n        <Row>\n          <Card title='Histogram of Books by Published Year' >\n            <Histogram\n              data={publishedYearHist}\n              xLabel='Published Year'\n              yLabel='Number of Books'\n            />\n          </Card>\n        </Row>\n        <Divider dashed />\n\n        <Row>\n          <Card title='Histogram of Books by Average Rating' >\n            <Histogram\n              data={ratingHist}\n              xLabel='Average Rating'\n              yLabel='Number of Books'\n            />\n          </Card>\n        </Row>\n        <Divider dashed />\n\n        <Popover\n          content={\n            <MultiCheckBox\n              onChange={this.handleShelvesChange}\n              options={shelves.map(shelf => shelf.name)}\n              defaultCheckedList={selectedShelves}\n              optionLabel={shelves.map(\n                shelf => `${shelf.name} (${shelf.bookCount})`\n              )}\n              disable={shelves.map(shelf => shelf.bookCount === 0)}\n              className='graphPopover'\n            />\n          }\n          title={`Shelves (${shelves.length})`}\n          trigger='click'\n          visible={shelvesSelectPopover}\n          onVisibleChange={this.handleShelvesSelectVisibleChange}\n          placement='bottomLeft'\n        >\n          <Button\n            icon='check-square'\n            style={{\n              position: 'fixed',\n              top: 20,\n              right: 60\n            }}\n          >\n            Select Shelves\n          </Button>\n        </Popover>\n      </div>\n    )\n  }\n}\n\nexport default StatisticsContainer\n"],"sourceRoot":""}