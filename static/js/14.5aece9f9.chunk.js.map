{"version":3,"sources":["components/MultiCheckBox/index.jsx","components/Settings/index.js","components/NetworkGraph/components/Node/index.js","components/NetworkGraph/components/Link/index.js","components/NetworkGraph/components/Universe/index.js","components/NetworkGraph/index.js","utils/graphHelper.js","containers/RelationshipGraph/index.jsx"],"names":["MultiCheckBox","props","_this","Object","_home_travis_build_rpidanny_goodreads_explorer_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_travis_build_rpidanny_goodreads_explorer_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_rpidanny_goodreads_explorer_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","checkedList","defaultCheckedList","indeterminate","checkAll","onChange","bind","_home_travis_build_rpidanny_goodreads_explorer_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","onCheckAllChange","option","_this2","push","filter","opt","setState","length","options","e","_this3","target","checked","_this4","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","style","borderBottom","antd__WEBPACK_IMPORTED_MODULE_8__","map","idx","key","val","indexOf","disabled","disable","optionLabel","Component","defaultProps","propTpes","PropTypes","array","isRequired","func","CheckboxGroup","Checkbox","Group","plainOptions","Settings","classCallCheck","possibleConstructorReturn","getPrototypeOf","objectSpread","defaultOptions","settings","updateState","assertThisInitialized","updateFps","updateCluster","updateAnimation","updateAlphaStart","updateVelocityDecay","updateChargeStrength","updateCollisionStrength","updateClusterRadiusScale","updateCollisionRadiusOffset","updateClusterForceStrength","updateAttracForceStrength","fps","cluster","animation","alphaStart","velocityDecay","chargeStrength","collisionStrength","clusterRadiusScale","collisionRadiusOffset","attraceForceStrength","clusterForceStrength","_this$state$settings","react_default","concat","padding","value","es_tooltip","title","placement","slider","defaultValue","max","min","step","onAfterChange","es_button","type","onClick","onReset","block","Node","clickHandler","doubleClickHandler","mouseOverHandler","mouseOutHandler","clickTimeout","data","id","onDoubleClick","event","x","onMouseOver","text","onMouseOut","_this$props","radius","color","y","active","transform","cursor","opacity","r","fill","getThumbnail","img","shortText","textStyle","xlinkHref","clipPath","width","dx","dy","fontSize","stroke","strokeWidth","fontWeight","Link","d","pointer","getPointer","markerEnd","getLabel","viewBox","refX","arrowOffset","refY","markerWidth","markerHeight","orient","href","startOffset","pointerEvents","textAnchor","Universe","getArcPath","getLinks","nextProps","source","links","link","l","scale","sweep","clockwise","arguments","undefined","x1","y1","x2","y2","siblings","linkIdx","scaleOrdinal","domain","range","arcScale","dr","Math","sqrt","_this$state","nodes","reduce","acc","components_Link","node","components_Node","assign","NetworkGraph","selectedNode","activeNodes","simulation","initSimulation","height","k","tooltip","top","left","initZoomHandler","updateData","updateSimulation","onTick","svg","React","createRef","interval","millis","Date","now","getNeighborNodes","current","clientWidth","clientHeight","updates","diff","prevProps","added","removed","JSON","stringify","children","linkForce","forceLink","strength","distance","forceSimulation","force","select","zoomHandler","zoom","on","forEach","n","sourceNode","targetNode","_this5","forceCenter","forceManyBody","forceCollide","clusters","uniqBy","arr","cos","PI","random","sin","alpha","applyClusterForce","alphaTarget","restart","tick","currentTime","payload","clientY","clientX","neighbors","_this$state2","ref","components_Universe","vx","vy","containsNode","memoize","prevNodes","newNodes","minifyString","split","slice","word","charAt","toUpperCase","join","getGraphData","userData","shelves","books","bookNodes","authorNodes","publisherNodes","user_shelves","shelf","name","book","property","author","authors","$t","image_url","publisher","sourceType","targetType","publicationYear","publication_year","publicationMonth","publication_month","publicationDay","publication_day","values","defaultGraphSettings","RelationshipGraph","window","localStorage","getItem","graphSettings","parse","settingsPopover","shelvesSelectPopover","selectedShelves","hideSettings","handleSettingsChange","handleSettingsReset","handleSettingsVisibleChange","hideShelvesSelect","handleShelvesChange","handleShelvesSelectVisibleChange","bookCount","_getGraphData","visible","setItem","removeItem","location","reload","_getGraphData2","components_NetworkGraph","popover","content","components_Settings","trigger","onVisibleChange","icon","position","right"],"mappings":"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","file":"static/js/14.5aece9f9.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Checkbox } from 'antd'\n\nimport './style.css'\n\nclass MultiCheckBox extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      checkedList: props.defaultCheckedList,\n      indeterminate: true,\n      checkAll: false\n    }\n\n    this.onChange = this.onChange.bind(this)\n    this.onCheckAllChange = this.onCheckAllChange.bind(this)\n  }\n\n  onChange (option, state) {\n    let { checkedList } = this.state\n    if (state) {\n      checkedList.push(option)\n    } else {\n      checkedList = checkedList.filter(opt => opt !== option)\n    }\n    this.setState({\n      checkedList,\n      indeterminate: !!checkedList.length && (checkedList.length < this.props.options.length),\n      checkAll: checkedList.length === this.props.options.length\n    }, () => this.props.onChange(this.state.checkedList))\n  }\n\n  onCheckAllChange (e) {\n    this.setState({\n      checkedList: e.target.checked ? this.props.options : [],\n      indeterminate: false,\n      checkAll: e.target.checked\n    }, () => this.props.onChange(this.state.checkedList))\n  }\n\n  render () {\n    return (\n      <div className={this.props.className}>\n        <div style={{ borderBottom: '1px solid #E9E9E9' }}>\n          <Checkbox\n            indeterminate={this.state.indeterminate}\n            onChange={this.onCheckAllChange}\n            checked={this.state.checkAll}\n          >\n            Check all\n          </Checkbox>\n        </div>\n        <ul className='shelvesCheckboxGroup' >\n          {\n            this.props.options.map((option, idx) => (\n              <li key={idx}>\n                <Checkbox\n                  onChange={val => this.onChange(option, val.target.checked)}\n                  key={option}\n                  checked={this.props.defaultCheckedList.indexOf(option) > -1}\n                  disabled={this.props.disable[idx]}\n                >\n                  {this.props.optionLabel[idx] ? this.props.optionLabel[idx] : option}\n                </Checkbox>\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n    )\n  }\n}\n\nMultiCheckBox.defaultProps = {\n  disable: [],\n  optionLabel: []\n}\n\nMultiCheckBox.propTpes = {\n  options: PropTypes.array.isRequired,\n  onChange: PropTypes.func,\n  optionLabel: PropTypes.array,\n  defaultCheckedList: PropTypes.array,\n  disable: PropTypes.array\n}\n\nexport default MultiCheckBox\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Checkbox, Slider, Button, Tooltip } from 'antd'\n\nimport './style.css'\n\nconst CheckboxGroup = Checkbox.Group\n\nconst plainOptions = ['animation', 'cluster']\n\nclass Settings extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      ...props\n    }\n\n    this.defaultOptions = plainOptions.filter((option) => this.props.settings[option])\n\n    this.updateState = this.updateState.bind(this)\n\n    // settings handler\n    this.updateFps = this.updateFps.bind(this)\n    this.updateCluster = this.updateCluster.bind(this)\n    this.updateAnimation = this.updateAnimation.bind(this)\n    this.updateAlphaStart = this.updateAlphaStart.bind(this)\n    this.updateVelocityDecay = this.updateVelocityDecay.bind(this)\n    this.updateChargeStrength = this.updateChargeStrength.bind(this)\n    this.updateCollisionStrength = this.updateCollisionStrength.bind(this)\n    this.updateClusterRadiusScale = this.updateClusterRadiusScale.bind(this)\n    this.updateCollisionRadiusOffset = this.updateCollisionRadiusOffset.bind(this)\n    this.updateClusterForceStrength = this.updateClusterForceStrength.bind(this)\n    this.updateAttracForceStrength = this.updateAttracForceStrength.bind(this)\n  }\n\n  updateState (val) {\n    // update local state and trigger parent onChange function\n    this.setState({\n      settings: {\n        ...this.state.settings,\n        ...val\n      }\n    },\n    () => this.props.onChange(this.state.settings))\n  }\n\n  updateFps (val) {\n    this.updateState({\n      fps: val\n    })\n  }\n\n  updateCluster (val) {\n    this.updateState({\n      cluster: val\n    })\n  }\n\n  updateAnimation (val) {\n    this.updateState({\n      animation: val\n    })\n  }\n\n  updateAlphaStart (val) {\n    this.updateState({\n      alphaStart: val\n    })\n  }\n\n  updateVelocityDecay (val) {\n    this.updateState({\n      velocityDecay: val\n    })\n  }\n\n  updateChargeStrength (val) {\n    this.updateState({\n      chargeStrength: val\n    })\n  }\n\n  updateCollisionStrength (val) {\n    this.updateState({\n      collisionStrength: val\n    })\n  }\n\n  updateClusterRadiusScale (val) {\n    this.updateState({\n      clusterRadiusScale: val\n    })\n  }\n\n  updateCollisionRadiusOffset (val) {\n    this.updateState({\n      collisionRadiusOffset: val\n    })\n  }\n\n  updateAttracForceStrength (val) {\n    this.updateState({\n      attraceForceStrength: val\n    })\n  }\n\n  updateClusterForceStrength (val) {\n    this.updateState({\n      clusterForceStrength: val\n    })\n  }\n\n  render () {\n    const {\n      fps,\n      alphaStart,\n      velocityDecay,\n      attraceForceStrength,\n      collisionStrength,\n      collisionRadiusOffset,\n      clusterRadiusScale,\n      chargeStrength,\n      clusterForceStrength\n    } = this.state.settings\n\n    // this.props.onChange(this.state)\n\n    return (\n      <div\n        className={`settings ${this.props.className}`}\n      >\n        <ul>\n          <li>\n            <div style={{ borderBottom: '1px solid #E9E9E9', padding: 5 }}>\n              <CheckboxGroup\n                options={plainOptions}\n                value={this.defaultOptions}\n                onChange={(checked) => {\n                  this.defaultOptions = checked\n                  this.updateState({\n                    animation: checked.indexOf('animation') > -1,\n                    cluster: checked.indexOf('cluster') > -1\n                  })\n                }}\n                className='settingsCheckbox'\n              />\n            </div>\n          </li>\n          <li>\n            <Tooltip title='How many times per second to render the graph.' placement='rightTop'>\n              FPS ({fps})\n            </Tooltip>\n            <Slider\n              defaultValue={fps}\n              max={120}\n              min={1}\n              step={1}\n              onAfterChange={this.updateFps}\n            />\n          </li>\n          <li>\n            <Tooltip title='Initial Alpha of simulation.' placement='rightTop'>\n              Alpha Start ({alphaStart})\n            </Tooltip>\n            <Slider\n              defaultValue={alphaStart}\n              max={1}\n              min={0}\n              step={0.01}\n              onAfterChange={this.updateAlphaStart}\n            />\n          </li>\n          <li>\n            <Tooltip\n              title='The decay factor is akin to atmospheric friction; after the application of any forces during a tick, each node’s velocity is multiplied by 1 - decay. As with lowering the alpha decay rate, less velocity decay may converge on a better solution, but risks numerical instabilities and oscillation.'\n              placement='rightTop'\n            >\n              velocity Decay ({velocityDecay})\n            </Tooltip>\n            <Slider\n              defaultValue={velocityDecay}\n              max={1}\n              min={0}\n              step={0.01}\n              onAfterChange={this.updateVelocityDecay}\n            />\n          </li>\n          <li>\n            <Tooltip title='It can be used to simulate gravity (attraction) if the strength is positive, or electrostatic charge (repulsion) if the strength is negative.' placement='rightTop'>\n              Charge Strength ({chargeStrength})\n            </Tooltip>\n            <Slider\n              defaultValue={chargeStrength}\n              max={500}\n              min={-500}\n              step={1}\n              onAfterChange={this.updateChargeStrength}\n            />\n          </li>\n          <li>\n            <Tooltip title='Sets the collision force strength to the specified number.' placement='rightTop'>\n              Collision Strength ({collisionStrength})\n            </Tooltip>\n            <Slider\n              defaultValue={collisionStrength}\n              max={1}\n              min={0}\n              step={0.01}\n              onAfterChange={this.updateCollisionStrength}\n            />\n          </li>\n          <li>\n            <Tooltip title='The collision force treats nodes as circles with a given radius, rather than points, and prevents nodes from overlapping.' placement='rightTop'>\n              Collision Radius Offset ({collisionRadiusOffset})\n            </Tooltip>\n            <Slider\n              defaultValue={collisionRadiusOffset}\n              max={50}\n              min={0}\n              step={1}\n              onAfterChange={this.updateCollisionRadiusOffset}\n            />\n          </li>\n          <li>\n            <Tooltip title='Sets attractive force strength between nodes' placement='rightTop'>\n              Attractive Force Strength ({attraceForceStrength})\n            </Tooltip>\n            <Slider\n              defaultValue={attraceForceStrength}\n              max={500}\n              min={-500}\n              step={1}\n              onAfterChange={this.updateAttracForceStrength}\n            />\n          </li>\n          <li>\n            <Tooltip title='Radius of the circle around which to cluster the nodes.' placement='rightTop'>\n              Cluster Radius Scale ({clusterRadiusScale})\n            </Tooltip>\n            <Slider\n              defaultValue={clusterRadiusScale}\n              max={10}\n              min={0.5}\n              step={0.5}\n              onAfterChange={this.updateClusterRadiusScale}\n            />\n          </li>\n          <li>\n            <Tooltip title='Strength of clustering of nodes.' placement='rightTop'>\n              Cluster Force Strength ({clusterForceStrength})\n            </Tooltip>\n            <Slider\n              defaultValue={clusterForceStrength}\n              max={1}\n              min={0}\n              step={0.01}\n              onAfterChange={this.updateClusterForceStrength}\n            />\n          </li>\n          <div\n            style={{\n              padding: 10\n            }}\n          >\n            <Button\n              type='danger'\n              onClick={() => this.props.onReset()}\n              block\n            >\n              Reset\n            </Button>\n          </div>\n        </ul>\n      </div>\n    )\n  }\n}\n\nSettings.defaultProps = {\n  settings: {\n    fps: 60,\n    cluster: true,\n    alphaStart: 1,\n    animation: true,\n    velocityDecay: 0.1,\n    chargeStrength: -100,\n    clusterRadiusScale: 2,\n    collisionStrength: 0.5,\n    collisionRadiusOffset: 15,\n    attraceForceStrength: -100\n  }\n}\n\nSettings.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onReset: PropTypes.func.isRequired,\n  settings: PropTypes.shape({\n    fps: PropTypes.number,\n    cluster: PropTypes.bool,\n    alphaStart: PropTypes.number,\n    animation: PropTypes.bool,\n    velocityDecay: PropTypes.number,\n    chargeStrength: PropTypes.number,\n    clusterRadiusScale: PropTypes.number,\n    collisionStrength: PropTypes.number,\n    collisionRadiusOffset: PropTypes.number,\n    attraceForceStrength: PropTypes.number\n  })\n}\n\nexport default Settings\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\n// import './style.css'\n\nclass Node extends Component {\n  constructor () {\n    super()\n    this.clickHandler = this.clickHandler.bind(this)\n    this.doubleClickHandler = this.doubleClickHandler.bind(this)\n    this.mouseOverHandler = this.mouseOverHandler.bind(this)\n    this.mouseOutHandler = this.mouseOutHandler.bind(this)\n    // for click vs dblclick\n    this.clickTimeout = null\n  }\n\n  clickHandler () {\n    this.props.onClick({\n      type: 'NODE',\n      data: this.props.id\n    })\n    // if (this.clickTimeout) {\n    //   clearTimeout(this.clickTimeout)\n    //   this.clickTimeout = null\n    //   this.doubleClickHandler()\n    // } else {\n    //   this.clickTimeout = setTimeout(() => {\n    //     if (this.props.onClick) {\n    //       this.props.onClick({\n    //         type: 'NODE',\n    //         data: this.props.id\n    //       })\n    //     }\n    //   }, 300)\n    // }\n  }\n\n  doubleClickHandler () {\n    if (this.props.onDoubleClick) {\n      this.props.onDoubleClick({\n        type: 'NODE',\n        data: this.props.id\n      })\n    }\n  }\n\n  mouseOverHandler (event, x) {\n    if (this.props.onMouseOver) {\n      this.props.onMouseOver({\n        type: 'NODE',\n        data: {\n          id: this.props.id,\n          text: this.props.text,\n          type: this.props.type\n        },\n        event\n      })\n    }\n  }\n\n  mouseOutHandler (event) {\n    if (this.props.onMouseOut) {\n      this.props.onMouseOut({\n        type: 'NODE',\n        data: {\n          id: this.props.id,\n          text: this.props.text,\n          type: this.props.type\n        },\n        event\n      })\n    }\n  }\n\n  render () {\n    const {\n      className,\n      radius,\n      color,\n      x,\n      y,\n      style,\n      active\n    } = this.props\n    return (\n      <g\n        className={className}\n        transform={`translate(${x},${y})`}\n        onClick={this.clickHandler}\n        style={{\n          cursor: 'pointer',\n          opacity: active ? 1 : 0.1\n        }}\n        onMouseOver={this.mouseOverHandler}\n        onMouseOut={this.mouseOutHandler}\n      >\n        <circle\n          r={radius}\n          fill={color}\n          style={style}\n        />\n        {\n          getThumbnail(this.props)\n        }\n      </g>\n    )\n  }\n}\n\nconst getThumbnail = (props) => {\n  const { id, img, radius, shortText, textStyle } = props\n  if (img) {\n    return (\n      <g>\n        <defs>\n          <clipPath\n            id={`clip_${id}`}\n          >\n            <circle\n              r={radius - 1}\n              // fill={bgColor}\n            />\n          </clipPath>\n        </defs>\n        <image\n          xlinkHref={img}\n          clipPath={`url(#clip_${id})`}\n          x={-radius}\n          y={-radius}\n          width={radius * 2}\n        />\n      </g>\n    )\n  } else {\n    return (\n      <text\n        dx={-radius / 2}\n        dy={textStyle.fontSize / 2}\n        style={textStyle}\n      >\n        {shortText}\n      </text>\n    )\n  }\n}\n\nNode.defaultProps = {\n  className: 'node',\n  radius: 35,\n  color: '#FFFFFF',\n  style: {\n    r: 35,\n    stroke: '#375E97',\n    strokeWidth: '3px'\n  },\n  textStyle: {\n    fontSize: 15,\n    fill: '#fff',\n    strokeWidth: '3px',\n    fontWeight: 'normal'\n  },\n  x: 0,\n  y: 0,\n  active: true\n}\n\nNode.propTypes = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  text: PropTypes.string,\n  shortText: PropTypes.string,\n  className: PropTypes.string,\n  img: PropTypes.string,\n  color: PropTypes.string,\n  radius: PropTypes.number,\n  style: PropTypes.shape({\n    r: PropTypes.number,\n    stroke: PropTypes.string,\n    strokeWidth: PropTypes.string\n  }),\n  textStyle: PropTypes.shape({\n    fontSize: PropTypes.number,\n    fill: PropTypes.string,\n    strokeWidth: PropTypes.string,\n    fontWeight: PropTypes.string\n  }),\n  x: PropTypes.number,\n  y: PropTypes.number,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onMouseOut: PropTypes.func,\n  onMouseOver: PropTypes.func,\n  active: PropTypes.bool\n}\n\nexport default Node\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nclass Link extends Component {\n  render () {\n    const { d, pointer, style, id, active } = this.props\n    return (\n      <g\n        style={{\n          opacity: active ? 1 : 0.1\n        }}\n      >\n        { getPointer(this.props) }\n        <path\n          id={id}\n          style={style}\n          d={d}\n          markerEnd={pointer ? `url(#${id}_pointer)` : pointer}\n        />\n        { getLabel(this.props) }\n      </g>\n    )\n  }\n}\n\nconst getPointer = (props) => {\n  if (props.pointer) {\n    return (\n      <defs>\n        <marker\n          id={`${props.id}_pointer`}\n          viewBox='0 -5 10 10'\n          refX={props.arrowOffset}\n          refY='-2'\n          markerWidth='6'\n          markerHeight='6'\n          orient='auto'\n        >\n          <path\n            d='M0,-5L10,0L0,5'\n            fill='#666'\n            style={{\n              opacity: 1\n            }} />\n        </marker>\n      </defs>\n    )\n  }\n}\n\nconst getLabel = (props) => {\n  if (props.type) {\n    return (\n      <text>\n        <textPath\n          dx={0}\n          dy={5}\n          href={`#${props.id}`}\n          startOffset='50%'\n          style={props.textStyle}\n        >\n          {props.type}\n        </textPath>\n      </text>\n    )\n  }\n}\n\nLink.defaultProps = {\n  style: {\n    strokeWidth: 1.5,\n    fill: 'none',\n    stroke: 'gba(50, 50, 50, 0.2)'\n  },\n  textStyle: {\n    pointerEvents: 'none',\n    textAnchor: 'middle',\n    fill: '#333'\n  },\n  pointer: true,\n  active: true\n}\n\nLink.propTypes = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  style: PropTypes.object,\n  textStyle: PropTypes.object,\n  d: PropTypes.string.isRequired,\n  pointer: PropTypes.bool,\n  active: PropTypes.bool\n}\n\nexport default Link\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { scaleOrdinal } from 'd3-scale'\n\nimport Node from '../Node'\nimport Link from '../Link'\n\nclass Universe extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      ...this.props\n    }\n\n    this.getArcPath = this.getArcPath.bind(this)\n    this.getLinks = this.getLinks.bind(this)\n  }\n\n  componentWillReceiveProps (nextProps) {\n    this.setState({ ...nextProps })\n  }\n\n  getLinks (source, target) {\n    return this.state.links\n      .filter(\n        link =>\n          link.source.id === source.id &&\n          link.target.id === target.id\n      )\n      .map(l => l.type)\n  }\n\n  getArcPath (link, clockwise = true) {\n    const x1 = clockwise ? link.source.x : link.target.x\n    const y1 = clockwise ? link.source.y : link.target.y\n    const x2 = clockwise ? link.target.x : link.source.x\n    const y2 = clockwise ? link.target.y : link.source.y\n    const dx = x2 - x1\n    const dy = y2 - y1\n    const siblings = this.getLinks(link.source, link.target)\n    // const siblingCount = siblings.length\n    const siblingCount = 2\n    const xRotation = 0\n    const largeArc = 0\n\n    if (siblingCount > 1) {\n      // console.log(siblings)\n      const arcScale = scaleOrdinal()\n        .domain(siblings)\n        .range([1, siblingCount])\n      const linkIdx = arcScale(link.type)\n      let scale\n      let sweep\n      if (linkIdx === 1) {\n        sweep = 1\n        scale = 1\n        // return `M${link.source.x},${link.source.y} L${link.target.x},${link.target.y}`\n      } else if (linkIdx % 2 === 0) {\n        sweep = 0\n        scale = linkIdx / 2\n      } else if (linkIdx % 3 === 0) {\n        sweep = 1\n        scale = linkIdx / 3 + 1\n      }\n      const dr =\n        Math.sqrt(dx * dx + dy * dy) / (1 + (1 / siblingCount) * (scale - 1))\n      return `M${x1},${y1}A${dr * 1.7},${dr *\n        1.7} ${xRotation}, ${largeArc}, ${sweep} ${x2},${y2}`\n    }\n    return `M${link.source.x},${link.source.y} L${link.target.x},${link.target.y}`\n  }\n\n  render () {\n    const { nodes, links } = this.state\n    return (\n      <g\n        className={this.props.className}\n        transform={this.props.transform}\n      >\n        <g className='links'>\n          {\n            links.reduce((acc, link, idx) => {\n              if (typeof link.source === 'object' && typeof link.target === 'object') {\n                acc.push(\n                  <Link\n                    key={idx}\n                    d={this.getArcPath(link)}\n                    style={link.style}\n                    id={link.id}\n                    type={link.type}\n                    arrowOffset={link.target.radius * 1.45}\n                    active={link.active}\n                  />\n                )\n                return acc\n              }\n              return acc\n            }, [])\n          }\n        </g>\n        <g className='nodes'>\n          {\n            nodes.map((node, idx) =>\n              <Node\n                key={idx}\n                onClick={this.props.onClick}\n                onDoubleClick={this.props.onDoubleClick}\n                onMouseOver={this.props.onMouseOver}\n                onMouseOut={this.props.onMouseOut}\n                {...node}\n              />\n            )\n          }\n        </g>\n      </g>\n    )\n  }\n}\n\nUniverse.defaultProps = {\n  className: 'universe',\n  nodes: [],\n  links: []\n}\n\nUniverse.propTypes = {\n  className: PropTypes.string,\n  nodes: PropTypes.array,\n  links: PropTypes.array,\n  onMouseOver: PropTypes.func,\n  onMouseOut: PropTypes.func\n}\n\nexport default Universe\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport memoize from 'memoize-one'\nimport { select, event } from 'd3-selection'\nimport {\n  forceLink,\n  forceSimulation,\n  forceCenter,\n  forceManyBody,\n  forceCollide\n} from 'd3-force'\nimport { zoom } from 'd3-zoom'\nimport uniqBy from 'lodash.uniqby'\n\nimport Universe from './components/Universe'\n\nimport './style.css'\n\nclass NetworkGraph extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      nodes: [],\n      links: [],\n      selectedNode: null,\n      activeNodes: [],\n      simulation: this.initSimulation(),\n      width: 100,\n      height: 100,\n      transform: {\n        x: 0,\n        y: 0,\n        k: 1\n      },\n      tooltip: {\n        text: '',\n        style: {\n          opacity: 0,\n          top: 0,\n          left: 0\n        }\n      }\n    }\n    this.initSimulation = this.initSimulation.bind(this)\n    this.initZoomHandler = this.initZoomHandler.bind(this)\n    this.updateData = this.updateData.bind(this)\n    this.updateSimulation = this.updateSimulation.bind(this)\n    this.onTick = this.onTick.bind(this)\n    this.svg = React.createRef()\n    this.nodes = []\n    this.links = []\n\n    // to timit fps\n    this.interval = (1000 / this.props.fps)\n    this.millis = Date.now()\n\n    // mouseevents\n    this.mouseOverHandler = this.mouseOverHandler.bind(this)\n    this.mouseOutHandler = this.mouseOutHandler.bind(this)\n    this.clickHandler = this.clickHandler.bind(this)\n\n    // graph functions\n    this.getNeighborNodes = this.getNeighborNodes.bind(this)\n  }\n\n  componentDidMount () {\n    this.initZoomHandler()\n    this.setState({\n      width: this.svg.current.clientWidth,\n      height: this.svg.current.clientHeight\n    }, () => {\n      const updates = diff(this.nodes, this.props.nodes)\n      this.updateData(updates)\n      this.updateSimulation()\n    })\n  }\n\n  componentDidUpdate (prevProps) {\n    this.interval = (1000 / this.props.fps)\n    // should update data?\n    const updates = diff(prevProps.nodes, this.props.nodes)\n    if (updates.added.length > 0 || updates.removed.length > 0) {\n      this.updateData(updates)\n      this.updateSimulation()\n    }\n\n    // should update simulation?\n    if (\n      JSON.stringify({\n        ...prevProps,\n        nodes: null,\n        links: null,\n        children: null\n      }) !==\n      JSON.stringify({\n        ...this.props,\n        nodes: null,\n        links: null,\n        children: null\n      })\n    ) {\n      this.updateSimulation()\n    }\n  }\n\n  initSimulation () {\n    const linkForce = forceLink()\n      .id(link => link.id)\n      .strength(link => link.strength)\n      .distance(link => link.distance)\n    const simulation = forceSimulation().force('link', linkForce)\n\n    return simulation\n  }\n\n  initZoomHandler () {\n    // TODO: replace select dependency\n    // add zoom capabilities\n    const svg = select('.svgGraph')\n    const zoomHandler = zoom().on('zoom', () => {\n      this.setState({\n        transform: event.transform\n      })\n    })\n    svg.call(zoomHandler).on('dblclick.zoom', null)\n  }\n\n  updateData (diff) {\n    const { links } = this.props\n    this.links = []\n\n    // remove nodes\n    diff.removed.forEach(node => {\n      this.nodes = this.nodes.filter(\n        n => !(n.id === node.id && n.type === node.type)\n      )\n      // context.nodes.splice(context.nodes.indexOf(node))\n    })\n    // add new nodes\n    diff.added.forEach(node => this.nodes.push(node))\n\n    // bind nodes to links\n    links.forEach(link => {\n      const sourceNode = this.nodes.filter(\n        node => node.id === link.source\n      )[0]\n      const targetNode = this.nodes.filter(\n        node => node.id === link.target\n      )[0]\n      if (sourceNode && targetNode) {\n        this.links.push({\n          ...link,\n          source: sourceNode,\n          target: targetNode\n        })\n      }\n    })\n  }\n\n  updateSimulation () {\n    const {\n      attraceForceStrength,\n      chargeStrength,\n      collisionRadiusOffset,\n      collisionStrength,\n      animation,\n      velocityDecay,\n      alphaStart,\n      cluster,\n      clusterRadiusScale,\n      clusterForceStrength\n    } = this.props\n    const { simulation, height, width } = this.state\n\n    simulation\n      .nodes(this.nodes)\n      .on('tick', this.onTick)\n    simulation.force('link').links(this.links)\n    simulation\n      .force('center', forceCenter(width / 2, height / 2))\n      .force('attraceForce', forceManyBody().strength(attraceForceStrength))\n      .force('charge', forceManyBody().strength(chargeStrength))\n      .force(\n        'collision',\n        forceCollide()\n          .radius(node => node.radius + collisionRadiusOffset)\n          .strength(collisionStrength)\n      )\n\n    // Enable clustering of nodes of same type\n    if (cluster) {\n      const clusters = {}\n      const nodeTypes = uniqBy(this.nodes, 'type').map(type => type.type)\n\n      nodeTypes.forEach((type, idx, arr) => {\n        if (!clusters[type]) {\n          const radius = width > height ? height * clusterRadiusScale : width * clusterRadiusScale\n          clusters[type] = {\n            x: Math.cos((idx + 1) / arr.length * 2 * Math.PI) * radius + width / 2 + Math.random(),\n            y: Math.sin((idx + 1) / arr.length * 2 * Math.PI) * radius + height / 2 + Math.random(),\n            radius\n          }\n        }\n      })\n\n      simulation.force('cluster', alpha =>\n        applyClusterForce(alpha, this.nodes, clusters, clusterForceStrength)\n      )\n    } else {\n      simulation.force('cluster', null)\n    }\n\n    simulation\n      .alpha(alphaStart)\n      .alphaTarget(0)\n      .velocityDecay(velocityDecay)\n      .restart()\n\n    if (!animation) {\n      while (simulation.alpha() >= 0.02) {\n        simulation.tick()\n      }\n    }\n  }\n\n  onTick (e) {\n    // limit rendering\n    const currentTime = Date.now()\n    if (currentTime - this.millis > this.interval) {\n      this.millis = currentTime\n      this.setState({\n        nodes: this.nodes,\n        links: this.links\n      })\n    }\n  }\n\n  mouseOutHandler () {\n    this.setState({\n      tooltip: {\n        style: {\n          opacity: 0\n        }\n      }\n    })\n  }\n\n  mouseOverHandler (payload) {\n    const { event, type, data } = payload\n    let text = ''\n    if (type === 'NODE') {\n      text = `[${data.type}] ${data.text}`\n    } else if (type === 'LINK') {\n      text = `${data.type}`\n    }\n    this.setState({\n      tooltip: {\n        text,\n        style: {\n          opacity: 1,\n          top: event.clientY + 15,\n          left: event.clientX + 15\n        }\n      }\n    })\n  }\n\n  clickHandler (event) {\n    if (this.state.selectedNode === event.data) {\n      this.setState({\n        selectedNode: null,\n        activeNodes: []\n      })\n    } else {\n      this.setState({\n        selectedNode: event.data,\n        activeNodes: this.getNeighborNodes(event.data)\n      })\n    }\n  }\n\n  getNeighborNodes (node) {\n    return this.links.reduce(\n      (neighbors, link) => {\n        if (link.target.id === node) {\n          neighbors.push(link.source.id)\n        } else if (link.source.id === node) {\n          neighbors.push(link.target.id)\n        }\n        return neighbors\n      },\n      []\n    )\n  }\n\n  render () {\n    const { transform, tooltip, selectedNode, activeNodes } = this.state\n\n    // determine opacity of node / link based on if its selected or not\n    const nodes = this.state.nodes.map(node => ({\n      ...node,\n      active: selectedNode === null || node.id === selectedNode || activeNodes.indexOf(node.id) > -1\n    }))\n\n    const links = this.state.links.map(link => ({\n      ...link,\n      active:\n        selectedNode === null ||\n        link.source.id === selectedNode ||\n        link.target.id === selectedNode\n    }))\n\n    return (\n      <div\n        className='networkGraph'\n        style={{\n          width: '100%',\n          height: '100%'\n        }}\n      >\n        {this.props.children}\n        <svg\n          className='svgGraph'\n          width='100%'\n          height='100%'\n          ref={this.svg}\n        >\n          <Universe\n            nodes={nodes}\n            links={links}\n            transform={\n              `translate(${transform.x},${transform.y}) scale(${transform.k})`\n            }\n            onClick={this.clickHandler}\n            onDoubleClick={this.props.onDoubleClick}\n            onMouseOver={this.mouseOverHandler}\n            onMouseOut={this.mouseOutHandler}\n          />\n        </svg>\n        {/* <span className='zoomIndicator'>{parseInt(transform.k * 100, 10)} %</span> */}\n        <span\n          className='networkGrapTooltip'\n          style={tooltip.style}\n        >\n          {tooltip.text}\n        </span>\n      </div>\n    )\n  }\n}\n\n// node cluster handler\nconst applyClusterForce = (alpha, nodes, clusters, strength) => {\n  nodes.forEach(node => {\n    const cluster = clusters[node.type]\n    if (cluster.x !== node.x && cluster.y !== node.y) {\n      const k = alpha * strength\n      node.vx -= (node.x - cluster.x) * k\n      node.vy -= (node.y - cluster.y) * k\n    }\n  })\n}\n\nconst containsNode = memoize((node, nodes) =>\n  nodes.reduce((acc, n) => {\n    if (n.id === node.id) {\n      acc.push(n)\n    }\n    return acc\n  }, []).length > 0\n    ? 1\n    : 0\n)\n\nconst diff = memoize((prevNodes, newNodes) => ({\n  removed: prevNodes.filter(node => containsNode(node, newNodes) === 0),\n  added: newNodes.filter(node => containsNode(node, prevNodes) === 0)\n}))\n\nNetworkGraph.defaultProps = {\n  nodes: [],\n  links: [],\n  attraceForceStrength: 10,\n  chargeStrength: -10,\n  collisionRadiusOffset: 15,\n  collisionStrength: 0.5,\n  animation: true,\n  cluster: false,\n  fps: 60,\n  alphaStart: 1,\n  velocityDecay: 0.4,\n  clusterRadiusScale: 2,\n  clusterForceStrength: 0.3\n}\n\nNetworkGraph.propTypes = {\n  nodes: PropTypes.array,\n  links: PropTypes.array,\n  attraceForceStrength: PropTypes.number,\n  chargeStrength: PropTypes.number,\n  collisionRadiusOffset: PropTypes.number,\n  collisionStrength: PropTypes.number,\n  animation: PropTypes.bool,\n  fps: PropTypes.number,\n  alphaStart: PropTypes.number,\n  velocityDecay: PropTypes.number,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  cluster: PropTypes.bool,\n  clusterRadiusScale: PropTypes.number,\n  clusterForceStrength: PropTypes.number\n}\n\nexport default NetworkGraph\n","const minifyString = text => {\n  return text.split(' ').slice(0, 3).map(word => word.charAt(0).toUpperCase()).join('')\n}\n\nexport function getGraphData (userData, shelves) {\n  let books = []\n  let bookNodes = {}\n  let authorNodes = {}\n  let publisherNodes = {}\n  let nodes = []\n  let links = []\n\n  const bookShelves = userData.user_shelves\n\n  // nodes.push({\n  //   text: userData.name,\n  //   id: userData.id,\n  //   img: userData.image_url,\n  //   type: 'USER',\n  //   color: '#336B87',\n  //   radius: 55,\n  //   style: {\n  //     r: 55,\n  //     stroke: '#375E97',\n  //     strokeWidth: '3px'\n  //   }\n  // })\n\n  bookShelves.forEach(shelf => {\n    if (shelves.indexOf(shelf.name) > -1) {\n      if (shelf.books.book) {\n        const tmpList = shelf.books.book.length ? shelf.books.book : [ shelf.books.book ]\n        tmpList.forEach(book => {\n          books.push(\n            {\n              ...book,\n              property: {\n                shelf: shelf.name\n              }\n            }\n          )\n        })\n      }\n    }\n  })\n\n  books.forEach(book => {\n    const { author } = book.authors\n\n    if (!bookNodes[book.id.$t]) {\n      // Create Book Nodes\n      bookNodes[book.id.$t] = {\n        id: book.id.$t,\n        text: book.title,\n        type: 'BOOK',\n        img: book.image_url,\n        color: '#336B87',\n        radius: 35,\n        style: {\n          r: 35,\n          stroke: '#375E97',\n          strokeWidth: '3px'\n        }\n      }\n      // Create Author Nodes\n      if (!authorNodes[author.id]) {\n        authorNodes[author.id] = {\n          id: author.id,\n          text: author.name,\n          type: 'AUTHOR',\n          img: author.image_url.$t,\n          color: '#FB6542',\n          radius: 35,\n          style: {\n            r: 35,\n            stroke: '#FB6542',\n            strokeWidth: '3px'\n          }\n        }\n      }\n      // Create Publisher Nodes\n      if (!publisherNodes[book.publisher]) {\n        publisherNodes[book.publisher] = {\n          id: typeof book.publisher === 'string' ? book.publisher : 'Self Published',\n          text: typeof book.publisher === 'string' ? book.publisher : 'Self Published',\n          type: 'PUBLISHER',\n          color: '#DDA487',\n          radius: 35,\n          style: {\n            r: 35,\n            stroke: '#7D4427',\n            strokeWidth: '3px'\n          }\n        }\n      }\n      // Create Authoer --> Book relationship\n      links.push({\n        source: author.id,\n        sourceType: 'AUTHOR',\n        target: book.id.$t,\n        targetType: 'BOOK',\n        type: 'AUTHOR_OF',\n        property: {\n          publicationYear: book.publication_year,\n          publicationMonth: book.publication_month,\n          publicationDay: book.publication_day\n        }\n      })\n      // Create Book --> Publisher relationship\n      links.push({\n        source: book.id.$t,\n        sourceType: 'BOOK',\n        target: typeof book.publisher === 'string' ? book.publisher : 'Self Published',\n        targetType: 'PUBLISHER',\n        type: 'PUBLISHED_BY',\n        property: {\n          publicationYear: book.publication_year,\n          publicationMonth: book.publication_month,\n          publicationDay: book.publication_day\n        }\n      })\n\n      // Create Author --> Publisher relationship\n      links.push({\n        source: author.id,\n        sourceType: 'AUTHOR',\n        target: book.publisher,\n        targetType: 'PUBLISHER',\n        type: 'WORKS_WITH',\n        property: {\n          publicationYear: book.publication_year,\n          publicationMonth: book.publication_month,\n          publicationDay: book.publication_day\n        }\n      })\n    }\n  })\n\n  // Collect all nodes\n  nodes = Object.values(bookNodes)\n    .concat(Object.values(authorNodes))\n    .concat(Object.values(publisherNodes))\n    .map((node, idx) => ({\n      ...node,\n      shortText: minifyString(node.text),\n      textStyle: {\n        fontSize: 15,\n        fill: '#fff',\n        strokeWidth: '2px',\n        fontWeight: 'normal'\n      }\n    }))\n\n  return {\n    nodes,\n    links: links.map(link => ({\n      ...link,\n      strength: 0.5,\n      distance: 350,\n      id: `${link.source}-${link.type}-${link.target}`,\n      style: {\n        strokeWidth: 1.5,\n        fill: 'none',\n        stroke: 'rgba(50, 50, 50, 0.2)'\n      }\n    }))\n  }\n}\n","import React, { Component } from 'react'\n\nimport { Button, Popover } from 'antd'\n\nimport Settings from '../../components/Settings'\nimport NetworkGraph from '../../components/NetworkGraph'\nimport MultiCheckBox from '../../components/MultiCheckBox'\n\nimport { getGraphData } from '../../utils/graphHelper'\n\nimport './style.css'\n\nconst defaultGraphSettings = {\n  fps: 60,\n  cluster: true,\n  alphaStart: 1,\n  animation: true,\n  velocityDecay: 0.1,\n  chargeStrength: -100,\n  collisionStrength: 0.5,\n  collisionRadiusOffset: 15,\n  attraceForceStrength: -100,\n  clusterRadiusScale: 2,\n  clusterForceStrength: 0.3\n}\n\nclass RelationshipGraph extends Component {\n  constructor (props) {\n    super(props)\n\n    // get graph settings from localstorage\n    const settings = window.localStorage.getItem('graphSettings')\n\n    this.state = {\n      graphSettings: settings ? JSON.parse(settings) : defaultGraphSettings,\n      settingsPopover: false,\n      shelvesSelectPopover: false,\n      nodes: [],\n      links: [],\n      shelves: [],\n      selectedShelves: []\n    }\n\n    this.hideSettings = this.hideSettings.bind(this)\n    this.handleSettingsChange = this.handleSettingsChange.bind(this)\n    this.handleSettingsReset = this.handleSettingsReset.bind(this)\n    this.handleSettingsVisibleChange = this.handleSettingsVisibleChange.bind(this)\n\n    this.hideShelvesSelect = this.hideShelvesSelect.bind(this)\n    this.handleShelvesChange = this.handleShelvesChange.bind(this)\n    this.handleShelvesSelectVisibleChange = this.handleShelvesSelectVisibleChange.bind(this)\n  }\n\n  componentDidMount () {\n    const shelves = this.props.userData.user_shelves.map(shelf => {\n      if (shelf.books.book) {\n        return {\n          name: shelf.name,\n          bookCount: shelf.books.book.length ? shelf.books.book.length : 1\n        }\n      }\n      return {\n        name: shelf.name,\n        bookCount: 0\n      }\n    })\n    const selectedShelves = shelves.length > 0 ? [shelves[0].name] : []\n    const { nodes, links } = getGraphData(this.props.userData, selectedShelves)\n    this.setState({\n      nodes,\n      links,\n      shelves,\n      selectedShelves\n    })\n  }\n\n  handleSettingsVisibleChange (visible) {\n    this.setState({ settingsPopover: visible })\n  }\n\n  hideSettings () {\n    this.setState({ settingsPopover: false })\n  }\n\n  handleSettingsChange (settings) {\n    this.setState({\n      graphSettings: settings\n    })\n    // Store settings on local storage\n    window.localStorage.setItem('graphSettings', JSON.stringify(settings))\n  }\n\n  handleSettingsReset () {\n    this.setState({\n      graphSettings: defaultGraphSettings\n    })\n\n    // clear settings on local storage\n    window.localStorage.removeItem('graphSettings')\n    window.location.reload()\n  }\n\n  hideShelvesSelect () {\n    this.setState({ shelvesSelectPopover: false })\n  }\n\n  handleShelvesSelectVisibleChange (visible) {\n    this.setState({ shelvesSelectPopover: visible })\n  }\n\n  handleShelvesChange (selectedShelves) {\n    const { nodes, links } = getGraphData(this.props.userData, selectedShelves)\n    this.setState({\n      nodes,\n      links,\n      selectedShelves\n    })\n  }\n\n  render () {\n    const {\n      nodes,\n      links,\n      graphSettings,\n      settingsPopover,\n      shelvesSelectPopover,\n      shelves,\n      selectedShelves\n    } = this.state\n    return (\n      <div\n        className='relationshipGraph'\n      >\n        <NetworkGraph\n          nodes={nodes}\n          links={links}\n          {...graphSettings}\n        >\n          <Popover\n            content={\n              <Settings\n                onChange={this.handleSettingsChange}\n                onReset={this.handleSettingsReset}\n                settings={graphSettings}\n                className='graphPopover'\n              />\n            }\n            title='Settings'\n            trigger='click'\n            visible={settingsPopover}\n            onVisibleChange={this.handleSettingsVisibleChange}\n            placement='bottomLeft'\n            // className='settings-popover'\n          >\n            <Button\n              icon='setting'\n              style={{\n                position: 'fixed',\n                top: 20,\n                right: 20\n              }}\n            />\n          </Popover>\n          <Popover\n            content={\n              <MultiCheckBox\n                onChange={this.handleShelvesChange}\n                options={shelves.map(shelf => shelf.name)}\n                defaultCheckedList={selectedShelves}\n                optionLabel={shelves.map(shelf => `${shelf.name} (${shelf.bookCount})`)}\n                disable={shelves.map(shelf => shelf.bookCount === 0)}\n                className='graphPopover'\n              />\n            }\n            title={`Shelves (${shelves.length})`}\n            trigger='click'\n            visible={shelvesSelectPopover}\n            onVisibleChange={this.handleShelvesSelectVisibleChange}\n            placement='bottomLeft'\n          >\n            <Button\n              icon='check-square'\n              style={{\n                position: 'fixed',\n                top: 20,\n                right: 60\n              }}\n            >\n              Select Shelves\n            </Button>\n          </Popover>\n        </NetworkGraph>\n      </div>\n    )\n  }\n}\n\nexport default RelationshipGraph\n"],"sourceRoot":""}