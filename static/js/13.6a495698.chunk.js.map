{"version":3,"sources":["components/MultiCheckBox/index.jsx","components/Histogram/config.js","components/Histogram/index.jsx","components/TagCloud/index.jsx","components/PieChart/index.jsx","components/ScatterPlot/index.jsx","utils/statsHelper.js","containers/Statistics/index.jsx"],"names":["MultiCheckBox","props","state","checkedList","defaultCheckedList","indeterminate","checkAll","onChange","bind","onCheckAllChange","option","this","push","filter","opt","setState","length","options","e","target","checked","className","style","borderBottom","map","idx","key","val","indexOf","disabled","disable","optionLabel","Component","defaultProps","propTpes","PropTypes","array","isRequired","func","keys","margin","top","right","bottom","left","defs","id","type","background","color","size","padding","stagger","rotation","lineWidth","spacing","fill","match","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","legends","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","Quote","data","indexBy","config","colors","colorBy","borderColor","axisTop","axisRight","xLabel","yLabel","labelSkipWidth","labelSkipHeight","labelTextColor","animate","motionStiffness","motionDamping","seed","random","x","Math","sin","floor","customRenderer","tag","value","title","count","fontSize","border","display","TagCloudComponent","tags","minSize","maxSize","renderer","randomNumberGenerator","PieChart","innerRadius","padAngle","cornerRadius","borderWidth","radialLabelsSkipAngle","radialLabelsTextXOffset","radialLabelsTextColor","radialLabelsLinkOffset","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","radialLabelsLinkStrokeWidth","radialLabelsLinkColor","slicesLabelsSkipAngle","slicesLabelsTextColor","ScatterPlot","width","height","xScale","min","max","yScale","orient","sum","a","reduce","b","getBooksList","userData","shelves","books","user_shelves","forEach","shelf","name","book","property","author","authors","getHistogram","keyProcessor","bins","itemKey","Object","values","item","StatisticsContainer","shelvesSelectPopover","selectedShelves","hideShelvesSelect","handleShelvesChange","handleShelvesSelectVisibleChange","bookCount","visible","shelvesDistribution","label","total","randomColor","stats","numPages","num_pages","parseInt","ratings","average_rating","parseFloat","numBook","totalPages","totalRating","totalBooks","averagePages","toFixed","averageRating","getStats","publishedYearHist","format","authorHist","formatHist","ratingHist","rating","getRatingsData","numPagesHist","getPagesData","publishedMonthHist","getPublishedMonthData","formatDistribution","pubMonthRatingData","result","publication_month","y","getMonthRatingData","ratingsCorrelationData","getRatingsCorrelationData","console","log","gutter","xs","sm","md","lg","xl","TagCloud","dashed","Histogram","content","trigger","onVisibleChange","placement","icon","position"],"mappings":"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","file":"static/js/13.6a495698.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Checkbox } from 'antd'\n\nimport './style.css'\n\nclass MultiCheckBox extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      checkedList: props.defaultCheckedList,\n      indeterminate: true,\n      checkAll: false\n    }\n\n    this.onChange = this.onChange.bind(this)\n    this.onCheckAllChange = this.onCheckAllChange.bind(this)\n  }\n\n  onChange (option, state) {\n    let { checkedList } = this.state\n    if (state) {\n      checkedList.push(option)\n    } else {\n      checkedList = checkedList.filter(opt => opt !== option)\n    }\n    this.setState({\n      checkedList,\n      indeterminate: !!checkedList.length && (checkedList.length < this.props.options.length),\n      checkAll: checkedList.length === this.props.options.length\n    }, () => this.props.onChange(this.state.checkedList))\n  }\n\n  onCheckAllChange (e) {\n    this.setState({\n      checkedList: e.target.checked ? this.props.options : [],\n      indeterminate: false,\n      checkAll: e.target.checked\n    }, () => this.props.onChange(this.state.checkedList))\n  }\n\n  render () {\n    return (\n      <div className={this.props.className}>\n        <div style={{ borderBottom: '1px solid #E9E9E9' }}>\n          <Checkbox\n            indeterminate={this.state.indeterminate}\n            onChange={this.onCheckAllChange}\n            checked={this.state.checkAll}\n          >\n            Check all\n          </Checkbox>\n        </div>\n        <ul className='shelvesCheckboxGroup' >\n          {\n            this.props.options.map((option, idx) => (\n              <li key={idx}>\n                <Checkbox\n                  onChange={val => this.onChange(option, val.target.checked)}\n                  key={option}\n                  checked={this.props.defaultCheckedList.indexOf(option) > -1}\n                  disabled={this.props.disable[idx]}\n                >\n                  {this.props.optionLabel[idx] ? this.props.optionLabel[idx] : option}\n                </Checkbox>\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n    )\n  }\n}\n\nMultiCheckBox.defaultProps = {\n  disable: [],\n  optionLabel: []\n}\n\nMultiCheckBox.propTpes = {\n  options: PropTypes.array.isRequired,\n  onChange: PropTypes.func,\n  optionLabel: PropTypes.array,\n  defaultCheckedList: PropTypes.array,\n  disable: PropTypes.array\n}\n\nexport default MultiCheckBox\n","export default {\n  keys: ['hot dog', 'burger', 'sandwich', 'kebab', 'fries', 'donut'],\n  margin: {\n    top: 50,\n    right: 50,\n    bottom: 50,\n    left: 60\n  },\n  defs: [\n    {\n      id: 'dots',\n      type: 'patternDots',\n      background: 'inherit',\n      color: '#38bcb2',\n      size: 4,\n      padding: 1,\n      stagger: true\n    },\n    {\n      id: 'lines',\n      type: 'patternLines',\n      background: 'inherit',\n      color: '#eed312',\n      rotation: -45,\n      lineWidth: 6,\n      spacing: 10\n    }\n  ],\n  fill: [\n    {\n      match: {\n        id: 'fries'\n      },\n      id: 'dots'\n    },\n    {\n      match: {\n        id: 'sandwich'\n      },\n      id: 'lines'\n    }\n  ],\n  axisBottom: {\n    tickSize: 5,\n    tickPadding: 5,\n    tickRotation: 0,\n    legend: 'country',\n    legendPosition: 'middle',\n    legendOffset: 32\n  },\n  axisLeft: {\n    tickSize: 5,\n    tickPadding: 5,\n    tickRotation: 0,\n    legend: 'food',\n    legendPosition: 'middle',\n    legendOffset: -40\n  },\n  legends: [\n    {\n      dataFrom: 'keys',\n      anchor: 'bottom-right',\n      direction: 'column',\n      justify: false,\n      translateX: 120,\n      translateY: 0,\n      itemsSpacing: 2,\n      itemWidth: 100,\n      itemHeight: 20,\n      itemDirection: 'left-to-right',\n      itemOpacity: 0.85,\n      symbolSize: 20,\n      effects: [\n        {\n          on: 'hover',\n          style: {\n            itemOpacity: 1\n          }\n        }\n      ]\n    }\n  ]\n};\n","import React from 'react'\nimport { ResponsiveBar } from '@nivo/bar'\n\nimport config from './config'\n\nimport './style.css'\n\nconst Quote = (props) => {\n  return (\n    <div className='barGraph'>\n      <ResponsiveBar\n        data={props.data}\n        indexBy='key'\n        margin={config.margin}\n        padding={0.3}\n        colors={props.colors || 'nivo'}\n        colorBy='id'\n        defs={config.defs}\n        fill={config.fill}\n        borderColor='inherit:darker(1.6)'\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: props.xLabel,\n          legendPosition: 'middle',\n          legendOffset: 32\n        }}\n        axisLeft={{\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: props.yLabel,\n          legendPosition: 'middle',\n          legendOffset: -40\n        }}\n        // axisLeft={null}\n        labelSkipWidth={12}\n        labelSkipHeight={12}\n        labelTextColor='inherit:darker(1.6)'\n        animate={true}\n        motionStiffness={90}\n        motionDamping={15}\n        // legends={config.legends}\n      />\n    </div>\n  )\n}\n\nexport default Quote\n","import React from 'react'\n\nimport { Tooltip } from 'antd'\n\n// import TagCloud from 'react-tag-cloud'\nimport { TagCloud } from 'react-tagcloud'\n// import randomColor from 'randomcolor'\n\nimport './style.css'\n\n// bring your own implementation of rng\nlet seed = 1337\nconst random = () => {\n  const x = Math.sin(seed++) * 10000\n  return x - Math.floor(x)\n}\n\nconst customRenderer = (tag, size, color) => (\n  <Tooltip key={tag.value} title={`${tag.value} (${tag.count})`}>\n    <span key={tag.value}\n      style={{\n        // animation: 'blinker 3s linear infinite',\n        // animationDelay: `${Math.random() * 2}s`,\n        fontSize: `${size}em`,\n        border: `2px solid ${color}`,\n        margin: '3px',\n        padding: '3px',\n        display: 'inline-block'\n        // color: 'gray'\n      }}\n    >\n      {tag.value}\n    </span>\n  </Tooltip>\n)\nconst TagCloudComponent = (props) => {\n  const tags = props.data.map(data => ({\n    value: data.key,\n    count: data.value\n  }))\n  return (\n    // <TagCloud\n    //   style={{\n    //     // fontFamily: 'sans-serif',\n    //     fontSize: 12,\n    //     fontWeight: 'bold',\n    //     fontStyle: 'italic',\n    //     // color: () => randomColor(),\n    //     color: 'gray',\n    //     padding: 5,\n    //     width: '100%',\n    //     height: '400px'\n    //   }}>\n    //   {\n    //     props.data.map((data, idx) => {\n    //       return (\n    //         <div style={{ fontSize: data.value * 9 }} key={idx} >\n    //           <Tooltip key={data.value} text={data.value} >\n    //             {data.key}\n    //           </Tooltip>\n    //         </div>\n    //       )\n    //     })\n    //   }\n    // </TagCloud>\n    <TagCloud\n      tags={tags}\n      minSize={1}\n      maxSize={5}\n      renderer={customRenderer}\n      randomNumberGenerator={random}\n    />\n  )\n}\n\nexport default TagCloudComponent\n","import React from 'react'\nimport { ResponsivePie } from '@nivo/pie'\n\nimport './style.css'\n\nconst PieChart = props => {\n  return (\n    <div className='pieChart' >\n      <ResponsivePie\n        data={props.data}\n        margin={{\n          top: 40,\n          right: 80,\n          bottom: 80,\n          left: 80\n        }}\n        innerRadius={0.5}\n        padAngle={0.7}\n        cornerRadius={3}\n        colors={props.colors || 'nivo'}\n        colorBy='id'\n        borderWidth={1}\n        borderColor='inherit:darker(0.2)'\n        radialLabelsSkipAngle={10}\n        radialLabelsTextXOffset={6}\n        radialLabelsTextColor='#333333'\n        radialLabelsLinkOffset={0}\n        radialLabelsLinkDiagonalLength={16}\n        radialLabelsLinkHorizontalLength={24}\n        radialLabelsLinkStrokeWidth={1}\n        radialLabelsLinkColor='inherit'\n        slicesLabelsSkipAngle={10}\n        slicesLabelsTextColor='#333333'\n        animate={true}\n        motionStiffness={90}\n        motionDamping={15}\n        defs={[\n          {\n            id: 'dots',\n            type: 'patternDots',\n            background: 'inherit',\n            color: 'rgba(255, 255, 255, 0.3)',\n            size: 4,\n            padding: 1,\n            stagger: true\n          },\n          {\n            id: 'lines',\n            type: 'patternLines',\n            background: 'inherit',\n            color: 'rgba(255, 255, 255, 0.3)',\n            rotation: -45,\n            lineWidth: 6,\n            spacing: 10\n          }\n        ]}\n        // legends={[\n        //   {\n        //     'anchor': 'bottom',\n        //     'direction': 'row',\n        //     'translateY': 56,\n        //     'itemWidth': 100,\n        //     'itemHeight': 18,\n        //     'itemTextColor': '#999',\n        //     'symbolSize': 18,\n        //     'symbolShape': 'circle',\n        //     'effects': [\n        //       {\n        //         'on': 'hover',\n        //         'style': {\n        //           'itemTextColor': '#000'\n        //         }\n        //       }\n        //     ]\n        //   }\n        // ]}\n      />\n    </div>\n  )\n}\n\nexport default PieChart\n","import React from 'react'\nimport { ResponsiveScatterPlot } from '@nivo/scatterplot'\n\nimport './style.css'\n\nconst ScatterPlot = props => {\n  return (\n    <div\n      style={{\n        width: '100%',\n        height: '400px'\n      }}\n    >\n      <ResponsiveScatterPlot\n        data={props.data}\n        colors={props.colors || 'dark2'}\n        margin={{\n          top: 60,\n          right: 60,\n          bottom: 70,\n          left: 90\n        }}\n        xScale={{\n          type: 'linear',\n          min: 0,\n          max: 'auto'\n        }}\n        yScale={{\n          type: 'linear',\n          min: 0,\n          max: 'auto'\n        }}\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n          orient: 'bottom',\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: props.xLabel,\n          legendPosition: 'middle',\n          legendOffset: 46\n        }}\n        axisLeft={{\n          orient: 'left',\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: props.yLabel,\n          legendPosition: 'middle',\n          legendOffset: -60\n        }}\n        animate={true}\n        motionStiffness={90}\n        motionDamping={15}\n        // legends={[\n        //   {\n        //     anchor: 'bottom-right',\n        //     direction: 'column',\n        //     translateX: 130,\n        //     itemWidth: 100,\n        //     itemHeight: 12,\n        //     itemsSpacing: 5,\n        //     itemTextColor: '#999',\n        //     symbolSize: 12,\n        //     symbolShape: 'circle',\n        //     effects: [\n        //       {\n        //         on: 'hover',\n        //         style: {\n        //           itemTextColor: '#000'\n        //         }\n        //       }\n        //     ]\n        //   }\n        // ]}\n      />\n    </div>\n  )\n}\n\nexport default ScatterPlot\n","\nconst sum = (a) => a.reduce((a, b) => a + b, 0)\n\nexport function getBooksList (userData, shelves) {\n  let books = []\n\n  const bookShelves = userData.user_shelves\n\n  bookShelves.forEach(shelf => {\n    if (shelves.indexOf(shelf.name) > -1) {\n      if (shelf.books.book) {\n        const tmpList = shelf.books.book.length ? shelf.books.book : [ shelf.books.book ]\n        tmpList.forEach(book => {\n          books.push(\n            {\n              ...book,\n              property: {\n                shelf: shelf.name\n              },\n              author: book.authors ? book.authors.author.name : 'Unknown'\n            }\n          )\n        })\n      }\n    }\n  })\n\n  return books\n}\n\nexport function getStats (books) {\n  const numPages = books.map(book => {\n    return typeof book.num_pages === 'string' ? parseInt(book.num_pages) : 0\n  })\n  const ratings = books.map(book => {\n    return typeof book.average_rating === 'string' ? parseFloat(book.average_rating) : 0.0\n  })\n\n  const numBook = books.length\n  const totalPages = sum(numPages)\n  const totalRating = sum(ratings)\n\n  return {\n    totalBooks: books.length,\n    totalPages,\n    averagePages: (totalPages / numBook).toFixed(2),\n    averageRating: (totalRating / numBook).toFixed(2)\n  }\n}\n\nexport function getHistogram (books, key, keyProcessor = null) {\n  const bins = {}\n\n  books.forEach(book => {\n    let itemKey = book[key]\n    if (keyProcessor) {\n      itemKey = keyProcessor(itemKey)\n    }\n\n    if (!bins[itemKey]) {\n      bins[itemKey] = [\n        book\n      ]\n      // bins[book.published] = 1\n    } else {\n      bins[itemKey].push(book)\n      // bins[book.published] += 1\n    }\n  })\n\n  const keys = Object.keys(bins)\n  const data = Object.values(bins).map((item, idx) => {\n    let itemKey = keys[idx]\n    return {\n      key: itemKey,\n      value: item.length\n    }\n  })\n\n  return data\n}\n\nexport function getRatingsData (books) {\n  const ratings = getHistogram(books, 'average_rating')\n  let bins = {\n    '0-1': 0,\n    '1-2': 0,\n    '2-3': 0,\n    '3-4': 0,\n    '4-5': 0\n  }\n  ratings.forEach(rating => {\n    const key = Math.floor(parseFloat(rating.key))\n    switch (key) {\n      case 0:\n        bins['0-1'] += 1\n        break\n      case 1:\n        bins['1-2'] += 1\n        break\n      case 2:\n        bins['2-3'] += 1\n        break\n      case 3:\n        bins['3-4'] += 1\n        break\n      case 4:\n        bins['4-5'] += 1\n        break\n      default:\n        break\n    }\n  })\n\n  const keys = Object.keys(bins)\n  const data = Object.values(bins).map((item, idx) => {\n    let itemKey = keys[idx]\n    return {\n      key: itemKey,\n      value: item\n    }\n  })\n\n  return data\n}\n\nexport function getPagesData (books) {\n  const ratings = getHistogram(books, 'num_pages')\n  let bins = {\n    '0-100': 0,\n    '100-200': 0,\n    '200-300': 0,\n    '300-400': 0,\n    '400-500': 0,\n    '500-600': 0,\n    '600-700': 0,\n    '700-800': 0,\n    '800-900': 0,\n    '900-1000': 0,\n    '1000-1100': 0,\n    '1100-1200': 0,\n    '1200+': 0\n  }\n  ratings.forEach(rating => {\n    const key = Math.floor(parseFloat(rating.key) / 100)\n    switch (key) {\n      case 0:\n        bins['0-100'] += 1\n        break\n      case 1:\n        bins['100-200'] += 1\n        break\n      case 2:\n        bins['200-300'] += 1\n        break\n      case 3:\n        bins['300-400'] += 1\n        break\n      case 4:\n        bins['400-500'] += 1\n        break\n      case 5:\n        bins['500-600'] += 1\n        break\n      case 6:\n        bins['600-700'] += 1\n        break\n      case 7:\n        bins['700-800'] += 1\n        break\n      case 8:\n        bins['800-900'] += 1\n        break\n      case 9:\n        bins['900-1000'] += 1\n        break\n      case 10:\n        bins['1000-1100'] += 1\n        break\n      case 11:\n        bins['1100-1200'] += 1\n        break\n      case 12:\n        bins['1200+'] += 1\n        break\n      default:\n        break\n    }\n  })\n\n  const keys = Object.keys(bins)\n  const data = Object.values(bins).map((item, idx) => {\n    let itemKey = keys[idx]\n    return {\n      key: itemKey,\n      value: item\n    }\n  })\n\n  return data\n}\n\nexport function getPublishedMonthData (books) {\n  const ratings = getHistogram(books, 'publication_month')\n  let bins = {\n    '1': 0,\n    '2': 0,\n    '3': 0,\n    '4': 0,\n    '5': 0,\n    '6': 0,\n    '7': 0,\n    '8': 0,\n    '9': 0,\n    '10': 0,\n    '11': 0,\n    '12': 0\n  }\n  ratings.forEach(rating => {\n    const key = parseInt(rating.key)\n    switch (key) {\n      case 1:\n        bins['1'] = rating.value\n        break\n      case 2:\n        bins['2'] = rating.value\n        break\n      case 3:\n        bins['3'] = rating.value\n        break\n      case 4:\n        bins['4'] = rating.value\n        break\n      case 5:\n        bins['5'] = rating.value\n        break\n      case 6:\n        bins['6'] = rating.value\n        break\n      case 7:\n        bins['7'] = rating.value\n        break\n      case 8:\n        bins['8'] = rating.value\n        break\n      case 9:\n        bins['9'] = rating.value\n        break\n      case 10:\n        bins['10'] = rating.value\n        break\n      case 11:\n        bins['11'] = rating.value\n        break\n      case 12:\n        bins['12'] = rating.value\n        break\n      default:\n        break\n    }\n  })\n\n  const keys = Object.keys(bins)\n  const data = Object.values(bins).map((item, idx) => {\n    let itemKey = keys[idx]\n    return {\n      key: itemKey,\n      value: item\n    }\n  })\n\n  return data\n}\n\nexport function getMonthRatingData (books) {\n  const result = []\n  books.forEach(book => {\n    if (typeof book.publication_month === 'string' && typeof book.average_rating === 'string') {\n      result.push({\n        x: parseInt(book.publication_month),\n        y: parseFloat(book.average_rating)\n      })\n    }\n  })\n\n  return ([\n    {\n      id: 'Books',\n      data: result\n    }\n  ])\n}\n\nexport function getRatingsCorrelationData (books) {\n  const result = []\n  books.forEach(book => {\n    if (book.authors && typeof book.authors.author.average_rating === 'string' && typeof book.average_rating === 'string') {\n      result.push({\n        x: parseFloat(book.authors.author.average_rating),\n        y: parseFloat(book.average_rating)\n      })\n    }\n  })\n\n  return ([\n    {\n      id: 'Books',\n      data: result\n    }\n  ])\n}\n","import React, { Component } from 'react'\n\nimport { Button, Popover, Row, Col, Divider, Statistic, Card } from 'antd'\nimport randomColor from 'randomcolor'\n\nimport MultiCheckBox from '../../components/MultiCheckBox'\nimport Histogram from '../../components/Histogram'\nimport TagCloud from '../../components/TagCloud'\nimport PieChart from '../../components/PieChart'\nimport ScatterPlot from '../../components/ScatterPlot'\n\nimport {\n  getBooksList,\n  getHistogram,\n  getStats,\n  getRatingsData,\n  getPagesData,\n  getPublishedMonthData,\n  getMonthRatingData,\n  getRatingsCorrelationData\n} from '../../utils/statsHelper'\n\nimport './style.css'\n\nclass StatisticsContainer extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      shelvesSelectPopover: false,\n      books: [],\n      shelves: [],\n      selectedShelves: []\n    }\n\n    this.hideShelvesSelect = this.hideShelvesSelect.bind(this)\n    this.handleShelvesChange = this.handleShelvesChange.bind(this)\n    this.handleShelvesSelectVisibleChange = this.handleShelvesSelectVisibleChange.bind(\n      this\n    )\n  }\n\n  componentDidMount () {\n    const shelves = this.props.userData.user_shelves.map(shelf => {\n      if (shelf.books.book) {\n        return {\n          name: shelf.name,\n          bookCount: shelf.books.book.length ? shelf.books.book.length : 1\n        }\n      }\n      return {\n        name: shelf.name,\n        bookCount: 0\n      }\n    })\n    const selectedShelves = shelves.length > 0 ? [shelves[0].name] : []\n\n    const books = getBooksList(this.props.userData, selectedShelves)\n\n    this.setState({\n      shelves,\n      selectedShelves,\n      books\n    })\n  }\n\n  hideShelvesSelect () {\n    this.setState({ shelvesSelectPopover: false })\n  }\n\n  handleShelvesSelectVisibleChange (visible) {\n    this.setState({ shelvesSelectPopover: visible })\n  }\n\n  handleShelvesChange (selectedShelves) {\n    const books = getBooksList(this.props.userData, selectedShelves)\n\n    this.setState({\n      books,\n      selectedShelves\n    })\n  }\n\n  render () {\n    const {\n      books,\n      shelvesSelectPopover,\n      shelves,\n      selectedShelves\n    } = this.state\n\n    const { user_shelves } = this.props.userData\n\n    const shelvesDistribution = user_shelves.map(shelf => ({\n      id: shelf.name,\n      label: shelf.name,\n      value: shelf.books.total,\n      color: randomColor()\n    }))\n\n    const stats = getStats(books)\n\n    const publishedYearHist = getHistogram(books, 'published',\n      format => typeof format === 'string' ? format : 'Unknown'\n    )\n    const authorHist = getHistogram(books, 'author')\n    const formatHist = getHistogram(books, 'format',\n      format => typeof format === 'string' ? format : 'Unknown'\n    )\n    const ratingHist = getRatingsData(books)\n    const numPagesHist = getPagesData(books)\n    const publishedMonthHist = getPublishedMonthData(books)\n\n    const formatDistribution = formatHist.map(format => ({\n      id: format.key,\n      label: format.key,\n      value: format.value,\n      color: randomColor()\n    }))\n\n    const pubMonthRatingData = getMonthRatingData(books)\n    const ratingsCorrelationData = getRatingsCorrelationData(books)\n\n    console.log('Books: ', books)\n    console.log('YearHist: ', publishedYearHist)\n    console.log('authorHist: ', authorHist)\n    console.log('ratingHist', ratingHist)\n    console.log('numPagesHist', numPagesHist)\n    console.log('Shelves', shelvesDistribution)\n    console.log('formatDistribution', formatHist)\n\n    console.log('stats', stats)\n\n    return (\n      <div className='statistics'>\n        <Row gutter={16}>\n          <Col xs={24} sm={12} md={6} lg={4} xl={4}>\n            <Card>\n              <Statistic title='Total Shelves' value={shelves.length} />\n            </Card>\n          </Col>\n          <Col xs={24} sm={12} md={6} lg={4} xl={4}>\n            <Card>\n              <Statistic title='Total Books' value={stats.totalBooks} />\n            </Card>\n          </Col>\n          <Col xs={24} sm={12} md={6} lg={4} xl={4}>\n            <Card>\n              <Statistic title='Total Pages' value={stats.totalPages} />\n            </Card>\n          </Col>\n          <Col xs={24} sm={12} md={6} lg={4} xl={4}>\n            <Card>\n              <Statistic title='Average Pages' value={stats.averagePages} />\n            </Card>\n          </Col>\n          <Col xs={24} sm={12} md={6} lg={4} xl={4}>\n            <Card>\n              <Statistic title='Average Rating' value={stats.averageRating} />\n            </Card>\n          </Col>\n        </Row>\n\n        <Divider />\n        <Row>\n          <Card title='Authors'>\n            <TagCloud data={authorHist} />\n          </Card>\n        </Row>\n        <Divider />\n\n        <Row gutter={16}>\n          <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n            <Card title='Shelves' >\n              <PieChart data={shelvesDistribution} colors='accent' />\n            </Card>\n          </Col>\n          <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n            <Card title='Book Formats' >\n              <PieChart data={formatDistribution} />\n            </Card>\n          </Col>\n        </Row>\n        <br />\n        <Row gutter={16} >\n          <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n            <Card title='Published Month Vs Average Rating' >\n              <ScatterPlot\n                data={pubMonthRatingData}\n                xLabel='Published Month'\n                yLabel='Average Rating'\n              />\n            </Card>\n          </Col>\n          <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n            <Card title='Author Rating Vs Book Rating' >\n              <ScatterPlot\n                data={ratingsCorrelationData}\n                xLabel='Author Rating'\n                yLabel='Book Rating'\n                colors='pink_yellowGreen'\n              />\n            </Card>\n          </Col>\n        </Row>\n\n        <Divider dashed />\n        <Row>\n          <Card title='Histogram of Books by Number of Pages' >\n            <Histogram\n              data={numPagesHist}\n              xLabel='Number of Pages'\n              yLabel='Number of Books'\n            />\n          </Card>\n        </Row>\n        <Divider dashed />\n\n        <Row>\n          <Card title='Histogram of Books by Published Month' >\n            <Histogram\n              data={publishedMonthHist}\n              xLabel='Published Month'\n              yLabel='Number of Books'\n            />\n          </Card>\n        </Row>\n        <Divider dashed />\n        <Row>\n          <Card title='Histogram of Books by Published Year' >\n            <Histogram\n              data={publishedYearHist}\n              xLabel='Published Year'\n              yLabel='Number of Books'\n            />\n          </Card>\n        </Row>\n        <Divider dashed />\n\n        <Row>\n          <Card title='Histogram of Books by Average Rating' >\n            <Histogram\n              data={ratingHist}\n              xLabel='Average Rating'\n              yLabel='Number of Books'\n            />\n          </Card>\n        </Row>\n        <Divider dashed />\n\n        <Popover\n          content={\n            <MultiCheckBox\n              onChange={this.handleShelvesChange}\n              options={shelves.map(shelf => shelf.name)}\n              defaultCheckedList={selectedShelves}\n              optionLabel={shelves.map(\n                shelf => `${shelf.name} (${shelf.bookCount})`\n              )}\n              disable={shelves.map(shelf => shelf.bookCount === 0)}\n              className='graphPopover'\n            />\n          }\n          title={`Shelves (${shelves.length})`}\n          trigger='click'\n          visible={shelvesSelectPopover}\n          onVisibleChange={this.handleShelvesSelectVisibleChange}\n          placement='bottomLeft'\n        >\n          <Button\n            icon='check-square'\n            style={{\n              position: 'fixed',\n              top: 20,\n              right: 60\n            }}\n          >\n            Select Shelves\n          </Button>\n        </Popover>\n      </div>\n    )\n  }\n}\n\nexport default StatisticsContainer\n"],"sourceRoot":""}