{"version":3,"sources":["components/ErrorBoundary/index.jsx"],"names":["ErrorBoundary","props","state","hasError","error","info","console","log","this","children","Component"],"mappings":"4LAEMA,E,kDACJ,WAAaC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CAAEC,UAAU,GAFP,E,8DAUDC,EAAOC,GAGxBC,QAAQC,IAAI,QAASH,EAAOC,K,+BAI5B,OAAIG,KAAKN,MAAMC,SAEN,qDAGFK,KAAKP,MAAMQ,Y,gDAjBaL,GAE/B,MAAO,CAAED,UAAU,O,GARKO,aA2BbV","file":"static/js/21.99905a43.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass ErrorBoundary extends Component {\n  constructor (props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError (error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch (error, info) {\n    // You can also log the error to an error reporting service\n    // logErrorToMyService(error, info)\n    console.log('Error', error, info)\n  }\n\n  render () {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>\n    }\n\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundary\n"],"sourceRoot":""}